{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'TestPage',\n  data() {\n    return {\n      // 已有数据...\n      testCases: [],\n      loading: false,\n      generating: false\n    };\n  },\n  methods: {\n    // 已有方法...\n\n    async fetchTestCases(requirementId) {\n      this.loading = true;\n      try {\n        const response = await axios.get('/api/test_cases', {\n          params: {\n            requirement_id: requirementId\n          }\n        });\n        this.testCases = response.data.data || [];\n      } catch (error) {\n        console.error('获取测试用例失败:', error);\n        this.testCases = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    async generateTestCases() {\n      if (!this.selectedRequirement) return;\n      this.generating = true;\n      try {\n        const response = await axios.post('/api/test_cases/generate', {\n          requirement_id: this.selectedRequirement\n        });\n        this.$toast.success(response.data.message);\n        await this.fetchTestCases(this.selectedRequirement);\n      } catch (error) {\n        console.error('生成测试用例失败:', error);\n        this.$toast.error(error.response?.data?.error || '生成失败');\n      } finally {\n        this.generating = false;\n      }\n    },\n    formatJson(jsonStr) {\n      try {\n        const obj = JSON.parse(jsonStr);\n        return JSON.stringify(obj, null, 2);\n      } catch {\n        return jsonStr;\n      }\n    },\n    formatDate(dateStr) {\n      return dateStr ? new Date(dateStr).toLocaleString() : '-';\n    },\n    getTypeBadgeClass(type) {\n      const classes = {\n        login: 'bg-blue-100 text-blue-800',\n        purchase: 'bg-green-100 text-green-800',\n        default: 'bg-gray-100 text-gray-800'\n      };\n      return classes[type] || classes.default;\n    }\n  },\n  watch: {\n    selectedRequirement(newVal) {\n      if (newVal) {\n        this.fetchTestCases(newVal);\n      } else {\n        this.testCases = [];\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","testCases","loading","generating","methods","fetchTestCases","requirementId","response","get","params","requirement_id","error","console","generateTestCases","selectedRequirement","post","$toast","success","message","formatJson","jsonStr","obj","JSON","parse","stringify","formatDate","dateStr","Date","toLocaleString","getTypeBadgeClass","type","classes","login","purchase","default","watch","newVal"],"sources":["C:\\Users\\ASUS\\Desktop\\autochat\\frontend\\src\\views\\TestPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"p-8\">\r\n        <!-- 需求选择和生成按钮 -->\r\n        <div class=\"flex items-center justify-between mb-6\">\r\n            <div class=\"flex items-center space-x-4\">\r\n                <div class=\"text-lg font-medium\">需求选择：</div>\r\n                <select v-model=\"selectedRequirement\"\r\n                    class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    @change=\"handleRequirementSelected(selectedRequirement)\">\r\n                    <option disabled value=\"\">请选择需求</option>\r\n                    <option v-for=\"req in requirements\" :key=\"req.id\" :value=\"req.id\">\r\n                        {{ req.name }} v{{ req.version }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n            <div class=\"flex justify-between items-center mb-6\">\r\n                <h2 class=\"text-lg font-medium\">测试用例列表</h2>\r\n                <button class=\"bg-primary text-white px-4 py-2 !rounded-button flex items-center\">\r\n                    <i class=\"fas fa-plus mr-2\"></i>生成测试用例\r\n                </button>\r\n            </div>\r\n            <div class=\"overflow-x-auto\">\r\n                <table class=\"w-full\">\r\n                    <thead>\r\n                        <tr class=\"bg-gray-50\">\r\n                            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">ID</th>\r\n                            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">类型</th>\r\n                            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">输入数据</th>\r\n                            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">预期输出</th>\r\n                            <th class=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase\">创建时间</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody class=\"divide-y divide-gray-200\">\r\n                        <!-- 加载状态 -->\r\n                        <tr v-if=\"loading\">\r\n                            <td colspan=\"5\" class=\"px-6 py-4 text-center\">\r\n                                <i class=\"fas fa-spinner fa-spin mr-2\"></i>加载中...\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <!-- 空状态 -->\r\n                        <tr v-else-if=\"testCases.length === 0\">\r\n                            <td colspan=\"5\" class=\"px-6 py-4 text-center text-gray-500\">\r\n                                没有找到测试用例\r\n                            </td>\r\n                        </tr>\r\n\r\n                        <!-- 测试用例数据 -->\r\n                        <tr v-for=\"testCase in testCases\" :key=\"testCase.id\" class=\"hover:bg-gray-50\">\r\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{{ testCase.id }}</td>\r\n                            <td class=\"px-6 py-4 whitespace-nowrap\">\r\n                                <span class=\"px-2 py-1 text-xs rounded-full\" :class=\"getTypeBadgeClass(testCase.type)\">\r\n                                    {{ testCase.type }}\r\n                                </span>\r\n                            </td>\r\n                            <td class=\"px-6 py-4 text-sm text-gray-500 max-w-xs truncate\">\r\n                                <pre class=\"truncate\">{{ formatJson(testCase.input_data) }}</pre>\r\n                            </td>\r\n                            <td class=\"px-6 py-4 text-sm text-gray-500 max-w-xs truncate\">\r\n                                <pre class=\"truncate\">{{ formatJson(testCase.expected_output) }}</pre>\r\n                            </td>\r\n                            <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                                {{ formatDate(testCase.created_at) }}\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 分页部分 -->\r\n        <div class=\"flex justify-between items-center mt-4\">\r\n            <div class=\"flex items-center\">\r\n                <span class=\"text-sm text-gray-700\">显示</span>\r\n                <select id=\"pageSizeSelect\"\r\n                    class=\"border border-gray-300 rounded-button px-2 py-1 mx-2 focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    onchange=\"updateTestCases()\">\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"12\">12</option>\r\n                    <option value=\"18\">18</option>\r\n                </select>\r\n                <span class=\"text-sm text-gray-700\">条</span>\r\n            </div>\r\n            <div class=\"flex items-center\">\r\n                <button id=\"prevPageButton\"\r\n                    class=\"px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n                    <i class=\"fas fa-angle-left\"></i>\r\n                </button>\r\n                <span id=\"currentPage\" class=\"mx-4 text-sm text-gray-700\">1</span>\r\n                <button id=\"nextPageButton\"\r\n                    class=\"px-3 py-1 border border-gray-300 rounded-md hover:bg-gray-200 focus:outline-none focus:ring focus:ring-indigo-200 focus:ring-opacity-50\">\r\n                    <i class=\"fas fa-angle-right\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  export default {\r\n    name: 'TestPage',\r\n    data() {\r\n        return {\r\n            // 已有数据...\r\n            testCases: [],\r\n            loading: false,\r\n            generating: false\r\n        }\r\n    },\r\n    methods: {\r\n        // 已有方法...\r\n\r\n        async fetchTestCases(requirementId) {\r\n            this.loading = true;\r\n            try {\r\n                const response = await axios.get('/api/test_cases', {\r\n                    params: { requirement_id: requirementId }\r\n                });\r\n                this.testCases = response.data.data || [];\r\n            } catch (error) {\r\n                console.error('获取测试用例失败:', error);\r\n                this.testCases = [];\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n\r\n        async generateTestCases() {\r\n            if (!this.selectedRequirement) return;\r\n\r\n            this.generating = true;\r\n            try {\r\n                const response = await axios.post('/api/test_cases/generate', {\r\n                    requirement_id: this.selectedRequirement\r\n                });\r\n\r\n                this.$toast.success(response.data.message);\r\n                await this.fetchTestCases(this.selectedRequirement);\r\n            } catch (error) {\r\n                console.error('生成测试用例失败:', error);\r\n                this.$toast.error(error.response?.data?.error || '生成失败');\r\n            } finally {\r\n                this.generating = false;\r\n            }\r\n        },\r\n\r\n        formatJson(jsonStr) {\r\n            try {\r\n                const obj = JSON.parse(jsonStr);\r\n                return JSON.stringify(obj, null, 2);\r\n            } catch {\r\n                return jsonStr;\r\n            }\r\n        },\r\n\r\n        formatDate(dateStr) {\r\n            return dateStr ? new Date(dateStr).toLocaleString() : '-';\r\n        },\r\n\r\n        getTypeBadgeClass(type) {\r\n            const classes = {\r\n                login: 'bg-blue-100 text-blue-800',\r\n                purchase: 'bg-green-100 text-green-800',\r\n                default: 'bg-gray-100 text-gray-800'\r\n            };\r\n            return classes[type] || classes.default;\r\n        }\r\n    },\r\n    watch: {\r\n        selectedRequirement(newVal) {\r\n            if (newVal) {\r\n                this.fetchTestCases(newVal);\r\n            } else {\r\n                this.testCases = [];\r\n            }\r\n        }\r\n    }\r\n  }\r\n  </script>\r\n  "],"mappings":"AAsGE,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACH;MACAC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,KAAK;MACdC,UAAU,EAAE;IAChB;EACJ,CAAC;EACDC,OAAO,EAAE;IACL;;IAEA,MAAMC,cAAcA,CAACC,aAAa,EAAE;MAChC,IAAI,CAACJ,OAAM,GAAI,IAAI;MACnB,IAAI;QACA,MAAMK,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,iBAAiB,EAAE;UAChDC,MAAM,EAAE;YAAEC,cAAc,EAAEJ;UAAc;QAC5C,CAAC,CAAC;QACF,IAAI,CAACL,SAAQ,GAAIM,QAAQ,CAACP,IAAI,CAACA,IAAG,IAAK,EAAE;MAC7C,EAAE,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAI,CAACV,SAAQ,GAAI,EAAE;MACvB,UAAU;QACN,IAAI,CAACC,OAAM,GAAI,KAAK;MACxB;IACJ,CAAC;IAED,MAAMW,iBAAiBA,CAAA,EAAG;MACtB,IAAI,CAAC,IAAI,CAACC,mBAAmB,EAAE;MAE/B,IAAI,CAACX,UAAS,GAAI,IAAI;MACtB,IAAI;QACA,MAAMI,QAAO,GAAI,MAAMT,KAAK,CAACiB,IAAI,CAAC,0BAA0B,EAAE;UAC1DL,cAAc,EAAE,IAAI,CAACI;QACzB,CAAC,CAAC;QAEF,IAAI,CAACE,MAAM,CAACC,OAAO,CAACV,QAAQ,CAACP,IAAI,CAACkB,OAAO,CAAC;QAC1C,MAAM,IAAI,CAACb,cAAc,CAAC,IAAI,CAACS,mBAAmB,CAAC;MACvD,EAAE,OAAOH,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC,IAAI,CAACK,MAAM,CAACL,KAAK,CAACA,KAAK,CAACJ,QAAQ,EAAEP,IAAI,EAAEW,KAAI,IAAK,MAAM,CAAC;MAC5D,UAAU;QACN,IAAI,CAACR,UAAS,GAAI,KAAK;MAC3B;IACJ,CAAC;IAEDgB,UAAUA,CAACC,OAAO,EAAE;MAChB,IAAI;QACA,MAAMC,GAAE,GAAIC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC;QAC/B,OAAOE,IAAI,CAACE,SAAS,CAACH,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;MACvC,EAAE,MAAM;QACJ,OAAOD,OAAO;MAClB;IACJ,CAAC;IAEDK,UAAUA,CAACC,OAAO,EAAE;MAChB,OAAOA,OAAM,GAAI,IAAIC,IAAI,CAACD,OAAO,CAAC,CAACE,cAAc,CAAC,IAAI,GAAG;IAC7D,CAAC;IAEDC,iBAAiBA,CAACC,IAAI,EAAE;MACpB,MAAMC,OAAM,GAAI;QACZC,KAAK,EAAE,2BAA2B;QAClCC,QAAQ,EAAE,6BAA6B;QACvCC,OAAO,EAAE;MACb,CAAC;MACD,OAAOH,OAAO,CAACD,IAAI,KAAKC,OAAO,CAACG,OAAO;IAC3C;EACJ,CAAC;EACDC,KAAK,EAAE;IACHrB,mBAAmBA,CAACsB,MAAM,EAAE;MACxB,IAAIA,MAAM,EAAE;QACR,IAAI,CAAC/B,cAAc,CAAC+B,MAAM,CAAC;MAC/B,OAAO;QACH,IAAI,CAACnC,SAAQ,GAAI,EAAE;MACvB;IACJ;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}