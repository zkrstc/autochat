{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.every.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { populateCommonDb } from \"./chunk-4BMEZGHF.mjs\";\nimport { ImperativeState } from \"./chunk-XZIHB7SX.mjs\";\nimport { cleanAndMerge, random, utils_default } from \"./chunk-O4NI6UNU.mjs\";\nimport { __name, clear, common_default, defaultConfig_default, getAccDescription, getAccTitle, getConfig, getConfig2, getDiagramTitle, log, setAccDescription, setAccTitle, setDiagramTitle, setupGraphViewbox2 as setupGraphViewbox } from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/git/gitGraphParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/git/gitGraphTypes.ts\nvar commitType = {\n  NORMAL: 0,\n  REVERSE: 1,\n  HIGHLIGHT: 2,\n  MERGE: 3,\n  CHERRY_PICK: 4\n};\n\n// src/diagrams/git/gitGraphAst.ts\nvar DEFAULT_GITGRAPH_CONFIG = defaultConfig_default.gitGraph;\nvar getConfig3 = /* @__PURE__ */__name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_GITGRAPH_CONFIG,\n    ...getConfig().gitGraph\n  });\n  return config;\n}, \"getConfig\");\nvar state = new ImperativeState(() => {\n  const config = getConfig3();\n  const mainBranchName = config.mainBranchName;\n  const mainBranchOrder = config.mainBranchOrder;\n  return {\n    mainBranchName,\n    commits: /* @__PURE__ */new Map(),\n    head: null,\n    branchConfig: /* @__PURE__ */new Map([[mainBranchName, {\n      name: mainBranchName,\n      order: mainBranchOrder\n    }]]),\n    branches: /* @__PURE__ */new Map([[mainBranchName, null]]),\n    currBranch: mainBranchName,\n    direction: \"LR\",\n    seq: 0,\n    options: {}\n  };\n});\nfunction getID() {\n  return random({\n    length: 7\n  });\n}\n__name(getID, \"getID\");\nfunction uniqBy(list, fn) {\n  const recordMap = /* @__PURE__ */Object.create(null);\n  return list.reduce((out, item) => {\n    const key = fn(item);\n    if (!recordMap[key]) {\n      recordMap[key] = true;\n      out.push(item);\n    }\n    return out;\n  }, []);\n}\n__name(uniqBy, \"uniqBy\");\nvar setDirection = /* @__PURE__ */__name(function (dir2) {\n  state.records.direction = dir2;\n}, \"setDirection\");\nvar setOptions = /* @__PURE__ */__name(function (rawOptString) {\n  log.debug(\"options str\", rawOptString);\n  rawOptString = rawOptString?.trim();\n  rawOptString = rawOptString || \"{}\";\n  try {\n    state.records.options = JSON.parse(rawOptString);\n  } catch (e) {\n    log.error(\"error while parsing gitGraph options\", e.message);\n  }\n}, \"setOptions\");\nvar getOptions = /* @__PURE__ */__name(function () {\n  return state.records.options;\n}, \"getOptions\");\nvar commit = /* @__PURE__ */__name(function (commitDB) {\n  let msg = commitDB.msg;\n  let id = commitDB.id;\n  const type = commitDB.type;\n  let tags = commitDB.tags;\n  log.info(\"commit\", msg, id, type, tags);\n  log.debug(\"Entering commit:\", msg, id, type, tags);\n  const config = getConfig3();\n  id = common_default.sanitizeText(id, config);\n  msg = common_default.sanitizeText(msg, config);\n  tags = tags?.map(tag => common_default.sanitizeText(tag, config));\n  const newCommit = {\n    id: id ? id : state.records.seq + \"-\" + getID(),\n    message: msg,\n    seq: state.records.seq++,\n    type: type ?? commitType.NORMAL,\n    tags: tags ?? [],\n    parents: state.records.head == null ? [] : [state.records.head.id],\n    branch: state.records.currBranch\n  };\n  state.records.head = newCommit;\n  log.info(\"main branch\", config.mainBranchName);\n  state.records.commits.set(newCommit.id, newCommit);\n  state.records.branches.set(state.records.currBranch, newCommit.id);\n  log.debug(\"in pushCommit \" + newCommit.id);\n}, \"commit\");\nvar branch = /* @__PURE__ */__name(function (branchDB) {\n  let name = branchDB.name;\n  const order = branchDB.order;\n  name = common_default.sanitizeText(name, getConfig3());\n  if (state.records.branches.has(name)) {\n    throw new Error(`Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using \"checkout ${name}\")`);\n  }\n  state.records.branches.set(name, state.records.head != null ? state.records.head.id : null);\n  state.records.branchConfig.set(name, {\n    name,\n    order\n  });\n  checkout(name);\n  log.debug(\"in createBranch\");\n}, \"branch\");\nvar merge = /* @__PURE__ */__name(mergeDB => {\n  let otherBranch = mergeDB.branch;\n  let customId = mergeDB.id;\n  const overrideType = mergeDB.type;\n  const customTags = mergeDB.tags;\n  const config = getConfig3();\n  otherBranch = common_default.sanitizeText(otherBranch, config);\n  if (customId) {\n    customId = common_default.sanitizeText(customId, config);\n  }\n  const currentBranchCheck = state.records.branches.get(state.records.currBranch);\n  const otherBranchCheck = state.records.branches.get(otherBranch);\n  const currentCommit = currentBranchCheck ? state.records.commits.get(currentBranchCheck) : void 0;\n  const otherCommit = otherBranchCheck ? state.records.commits.get(otherBranchCheck) : void 0;\n  if (currentCommit && otherCommit && currentCommit.branch === otherBranch) {\n    throw new Error(`Cannot merge branch '${otherBranch}' into itself.`);\n  }\n  if (state.records.currBranch === otherBranch) {\n    const error = new Error('Incorrect usage of \"merge\". Cannot merge a branch to itself');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (currentCommit === void 0 || !currentCommit) {\n    const error = new Error(`Incorrect usage of \"merge\". Current branch (${state.records.currBranch})has no commits`);\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"commit\"]\n    };\n    throw error;\n  }\n  if (!state.records.branches.has(otherBranch)) {\n    const error = new Error('Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") does not exist\");\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [`branch ${otherBranch}`]\n    };\n    throw error;\n  }\n  if (otherCommit === void 0 || !otherCommit) {\n    const error = new Error('Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") has no commits\");\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: ['\"commit\"']\n    };\n    throw error;\n  }\n  if (currentCommit === otherCommit) {\n    const error = new Error('Incorrect usage of \"merge\". Both branches have same head');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (customId && state.records.commits.has(customId)) {\n    const error = new Error('Incorrect usage of \"merge\". Commit with id:' + customId + \" already exists, use different custom Id\");\n    error.hash = {\n      text: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      token: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      expected: [`merge ${otherBranch} ${customId}_UNIQUE ${overrideType} ${customTags?.join(\" \")}`]\n    };\n    throw error;\n  }\n  const verifiedBranch = otherBranchCheck ? otherBranchCheck : \"\";\n  const commit2 = {\n    id: customId || `${state.records.seq}-${getID()}`,\n    message: `merged branch ${otherBranch} into ${state.records.currBranch}`,\n    seq: state.records.seq++,\n    parents: state.records.head == null ? [] : [state.records.head.id, verifiedBranch],\n    branch: state.records.currBranch,\n    type: commitType.MERGE,\n    customType: overrideType,\n    customId: customId ? true : false,\n    tags: customTags ?? []\n  };\n  state.records.head = commit2;\n  state.records.commits.set(commit2.id, commit2);\n  state.records.branches.set(state.records.currBranch, commit2.id);\n  log.debug(state.records.branches);\n  log.debug(\"in mergeBranch\");\n}, \"merge\");\nvar cherryPick = /* @__PURE__ */__name(function (cherryPickDB) {\n  let sourceId = cherryPickDB.id;\n  let targetId = cherryPickDB.targetId;\n  let tags = cherryPickDB.tags;\n  let parentCommitId = cherryPickDB.parent;\n  log.debug(\"Entering cherryPick:\", sourceId, targetId, tags);\n  const config = getConfig3();\n  sourceId = common_default.sanitizeText(sourceId, config);\n  targetId = common_default.sanitizeText(targetId, config);\n  tags = tags?.map(tag => common_default.sanitizeText(tag, config));\n  parentCommitId = common_default.sanitizeText(parentCommitId, config);\n  if (!sourceId || !state.records.commits.has(sourceId)) {\n    const error = new Error('Incorrect usage of \"cherryPick\". Source commit id should exist and provided');\n    error.hash = {\n      text: `cherryPick ${sourceId} ${targetId}`,\n      token: `cherryPick ${sourceId} ${targetId}`,\n      expected: [\"cherry-pick abc\"]\n    };\n    throw error;\n  }\n  const sourceCommit = state.records.commits.get(sourceId);\n  if (sourceCommit === void 0 || !sourceCommit) {\n    throw new Error('Incorrect usage of \"cherryPick\". Source commit id should exist and provided');\n  }\n  if (parentCommitId && !(Array.isArray(sourceCommit.parents) && sourceCommit.parents.includes(parentCommitId))) {\n    const error = new Error(\"Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.\");\n    throw error;\n  }\n  const sourceCommitBranch = sourceCommit.branch;\n  if (sourceCommit.type === commitType.MERGE && !parentCommitId) {\n    const error = new Error(\"Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.\");\n    throw error;\n  }\n  if (!targetId || !state.records.commits.has(targetId)) {\n    if (sourceCommitBranch === state.records.currBranch) {\n      const error = new Error('Incorrect usage of \"cherryPick\". Source commit is already on current branch');\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommitId = state.records.branches.get(state.records.currBranch);\n    if (currentCommitId === void 0 || !currentCommitId) {\n      const error = new Error(`Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`);\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommit = state.records.commits.get(currentCommitId);\n    if (currentCommit === void 0 || !currentCommit) {\n      const error = new Error(`Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`);\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const commit2 = {\n      id: state.records.seq + \"-\" + getID(),\n      message: `cherry-picked ${sourceCommit?.message} into ${state.records.currBranch}`,\n      seq: state.records.seq++,\n      parents: state.records.head == null ? [] : [state.records.head.id, sourceCommit.id],\n      branch: state.records.currBranch,\n      type: commitType.CHERRY_PICK,\n      tags: tags ? tags.filter(Boolean) : [`cherry-pick:${sourceCommit.id}${sourceCommit.type === commitType.MERGE ? `|parent:${parentCommitId}` : \"\"}`]\n    };\n    state.records.head = commit2;\n    state.records.commits.set(commit2.id, commit2);\n    state.records.branches.set(state.records.currBranch, commit2.id);\n    log.debug(state.records.branches);\n    log.debug(\"in cherryPick\");\n  }\n}, \"cherryPick\");\nvar checkout = /* @__PURE__ */__name(function (branch2) {\n  branch2 = common_default.sanitizeText(branch2, getConfig3());\n  if (!state.records.branches.has(branch2)) {\n    const error = new Error(`Trying to checkout branch which is not yet created. (Help try using \"branch ${branch2}\")`);\n    error.hash = {\n      text: `checkout ${branch2}`,\n      token: `checkout ${branch2}`,\n      expected: [`branch ${branch2}`]\n    };\n    throw error;\n  } else {\n    state.records.currBranch = branch2;\n    const id = state.records.branches.get(state.records.currBranch);\n    if (id === void 0 || !id) {\n      state.records.head = null;\n    } else {\n      state.records.head = state.records.commits.get(id) ?? null;\n    }\n  }\n}, \"checkout\");\nfunction upsert(arr, key, newVal) {\n  const index = arr.indexOf(key);\n  if (index === -1) {\n    arr.push(newVal);\n  } else {\n    arr.splice(index, 1, newVal);\n  }\n}\n__name(upsert, \"upsert\");\nfunction prettyPrintCommitHistory(commitArr) {\n  const commit2 = commitArr.reduce((out, commit3) => {\n    if (out.seq > commit3.seq) {\n      return out;\n    }\n    return commit3;\n  }, commitArr[0]);\n  let line = \"\";\n  commitArr.forEach(function (c) {\n    if (c === commit2) {\n      line += \"\t*\";\n    } else {\n      line += \"\t|\";\n    }\n  });\n  const label = [line, commit2.id, commit2.seq];\n  for (const branch2 in state.records.branches) {\n    if (state.records.branches.get(branch2) === commit2.id) {\n      label.push(branch2);\n    }\n  }\n  log.debug(label.join(\" \"));\n  if (commit2.parents && commit2.parents.length == 2 && commit2.parents[0] && commit2.parents[1]) {\n    const newCommit = state.records.commits.get(commit2.parents[0]);\n    upsert(commitArr, commit2, newCommit);\n    if (commit2.parents[1]) {\n      commitArr.push(state.records.commits.get(commit2.parents[1]));\n    }\n  } else if (commit2.parents.length == 0) {\n    return;\n  } else {\n    if (commit2.parents[0]) {\n      const newCommit = state.records.commits.get(commit2.parents[0]);\n      upsert(commitArr, commit2, newCommit);\n    }\n  }\n  commitArr = uniqBy(commitArr, c => c.id);\n  prettyPrintCommitHistory(commitArr);\n}\n__name(prettyPrintCommitHistory, \"prettyPrintCommitHistory\");\nvar prettyPrint = /* @__PURE__ */__name(function () {\n  log.debug(state.records.commits);\n  const node = getCommitsArray()[0];\n  prettyPrintCommitHistory([node]);\n}, \"prettyPrint\");\nvar clear2 = /* @__PURE__ */__name(function () {\n  state.reset();\n  clear();\n}, \"clear\");\nvar getBranchesAsObjArray = /* @__PURE__ */__name(function () {\n  const branchesArray = [...state.records.branchConfig.values()].map((branchConfig, i) => {\n    if (branchConfig.order !== null && branchConfig.order !== void 0) {\n      return branchConfig;\n    }\n    return {\n      ...branchConfig,\n      order: parseFloat(`0.${i}`)\n    };\n  }).sort((a, b) => (a.order ?? 0) - (b.order ?? 0)).map(({\n    name\n  }) => ({\n    name\n  }));\n  return branchesArray;\n}, \"getBranchesAsObjArray\");\nvar getBranches = /* @__PURE__ */__name(function () {\n  return state.records.branches;\n}, \"getBranches\");\nvar getCommits = /* @__PURE__ */__name(function () {\n  return state.records.commits;\n}, \"getCommits\");\nvar getCommitsArray = /* @__PURE__ */__name(function () {\n  const commitArr = [...state.records.commits.values()];\n  commitArr.forEach(function (o) {\n    log.debug(o.id);\n  });\n  commitArr.sort((a, b) => a.seq - b.seq);\n  return commitArr;\n}, \"getCommitsArray\");\nvar getCurrentBranch = /* @__PURE__ */__name(function () {\n  return state.records.currBranch;\n}, \"getCurrentBranch\");\nvar getDirection = /* @__PURE__ */__name(function () {\n  return state.records.direction;\n}, \"getDirection\");\nvar getHead = /* @__PURE__ */__name(function () {\n  return state.records.head;\n}, \"getHead\");\nvar db = {\n  commitType,\n  getConfig: getConfig3,\n  setDirection,\n  setOptions,\n  getOptions,\n  commit,\n  branch,\n  merge,\n  cherryPick,\n  checkout,\n  //reset,\n  prettyPrint,\n  clear: clear2,\n  getBranchesAsObjArray,\n  getBranches,\n  getCommits,\n  getCommitsArray,\n  getCurrentBranch,\n  getDirection,\n  getHead,\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  setDiagramTitle,\n  getDiagramTitle\n};\n\n// src/diagrams/git/gitGraphParser.ts\nvar populate = /* @__PURE__ */__name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  if (ast.dir) {\n    db2.setDirection(ast.dir);\n  }\n  for (const statement of ast.statements) {\n    parseStatement(statement, db2);\n  }\n}, \"populate\");\nvar parseStatement = /* @__PURE__ */__name((statement, db2) => {\n  const parsers = {\n    Commit: /* @__PURE__ */__name(stmt => db2.commit(parseCommit(stmt)), \"Commit\"),\n    Branch: /* @__PURE__ */__name(stmt => db2.branch(parseBranch(stmt)), \"Branch\"),\n    Merge: /* @__PURE__ */__name(stmt => db2.merge(parseMerge(stmt)), \"Merge\"),\n    Checkout: /* @__PURE__ */__name(stmt => db2.checkout(parseCheckout(stmt)), \"Checkout\"),\n    CherryPicking: /* @__PURE__ */__name(stmt => db2.cherryPick(parseCherryPicking(stmt)), \"CherryPicking\")\n  };\n  const parser2 = parsers[statement.$type];\n  if (parser2) {\n    parser2(statement);\n  } else {\n    log.error(`Unknown statement type: ${statement.$type}`);\n  }\n}, \"parseStatement\");\nvar parseCommit = /* @__PURE__ */__name(commit2 => {\n  const commitDB = {\n    id: commit2.id,\n    msg: commit2.message ?? \"\",\n    type: commit2.type !== void 0 ? commitType[commit2.type] : commitType.NORMAL,\n    tags: commit2.tags ?? void 0\n  };\n  return commitDB;\n}, \"parseCommit\");\nvar parseBranch = /* @__PURE__ */__name(branch2 => {\n  const branchDB = {\n    name: branch2.name,\n    order: branch2.order ?? 0\n  };\n  return branchDB;\n}, \"parseBranch\");\nvar parseMerge = /* @__PURE__ */__name(merge2 => {\n  const mergeDB = {\n    branch: merge2.branch,\n    id: merge2.id ?? \"\",\n    type: merge2.type !== void 0 ? commitType[merge2.type] : void 0,\n    tags: merge2.tags ?? void 0\n  };\n  return mergeDB;\n}, \"parseMerge\");\nvar parseCheckout = /* @__PURE__ */__name(checkout2 => {\n  const branch2 = checkout2.branch;\n  return branch2;\n}, \"parseCheckout\");\nvar parseCherryPicking = /* @__PURE__ */__name(cherryPicking => {\n  const cherryPickDB = {\n    id: cherryPicking.id,\n    targetId: \"\",\n    tags: cherryPicking.tags?.length === 0 ? void 0 : cherryPicking.tags,\n    parent: cherryPicking.parent\n  };\n  return cherryPickDB;\n}, \"parseCherryPicking\");\nvar parser = {\n  parse: /* @__PURE__ */__name(async input => {\n    const ast = await parse(\"gitGraph\", input);\n    log.debug(ast);\n    populate(ast, db);\n  }, \"parse\")\n};\nif (void 0) {\n  const {\n    it,\n    expect,\n    describe\n  } = void 0;\n  const mockDB = {\n    commitType,\n    setDirection: vi.fn(),\n    commit: vi.fn(),\n    branch: vi.fn(),\n    merge: vi.fn(),\n    cherryPick: vi.fn(),\n    checkout: vi.fn()\n  };\n  describe(\"GitGraph Parser\", () => {\n    it(\"should parse a commit statement\", () => {\n      const commit2 = {\n        $type: \"Commit\",\n        id: \"1\",\n        message: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(commit2, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a branch statement\", () => {\n      const branch2 = {\n        $type: \"Branch\",\n        name: \"newBranch\",\n        order: 1\n      };\n      parseStatement(branch2, mockDB);\n      expect(mockDB.branch).toHaveBeenCalledWith({\n        name: \"newBranch\",\n        order: 1\n      });\n    });\n    it(\"should parse a checkout statement\", () => {\n      const checkout2 = {\n        $type: \"Checkout\",\n        branch: \"newBranch\"\n      };\n      parseStatement(checkout2, mockDB);\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n    it(\"should parse a merge statement\", () => {\n      const merge2 = {\n        $type: \"Merge\",\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(merge2, mockDB);\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a cherry picking statement\", () => {\n      const cherryPick2 = {\n        $type: \"CherryPicking\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        parent: \"2\"\n      };\n      parseStatement(cherryPick2, mockDB);\n      expect(mockDB.cherryPick).toHaveBeenCalledWith({\n        id: \"1\",\n        targetId: \"\",\n        parent: \"2\",\n        tags: [\"tag1\", \"tag2\"]\n      });\n    });\n    it(\"should parse a langium generated gitGraph ast\", () => {\n      const dummy = {\n        $type: \"GitGraph\",\n        statements: []\n      };\n      const gitGraphAst = {\n        $type: \"GitGraph\",\n        statements: [{\n          $container: dummy,\n          $type: \"Commit\",\n          id: \"1\",\n          message: \"test\",\n          tags: [\"tag1\", \"tag2\"],\n          type: \"NORMAL\"\n        }, {\n          $container: dummy,\n          $type: \"Branch\",\n          name: \"newBranch\",\n          order: 1\n        }, {\n          $container: dummy,\n          $type: \"Merge\",\n          branch: \"newBranch\",\n          id: \"1\",\n          tags: [\"tag1\", \"tag2\"],\n          type: \"NORMAL\"\n        }, {\n          $container: dummy,\n          $type: \"Checkout\",\n          branch: \"newBranch\"\n        }, {\n          $container: dummy,\n          $type: \"CherryPicking\",\n          id: \"1\",\n          tags: [\"tag1\", \"tag2\"],\n          parent: \"2\"\n        }]\n      };\n      populate(gitGraphAst, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.branch).toHaveBeenCalledWith({\n        name: \"newBranch\",\n        order: 1\n      });\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n  });\n}\n\n// src/diagrams/git/gitGraphRenderer.ts\nimport { select } from \"d3\";\nvar DEFAULT_CONFIG = getConfig2();\nvar DEFAULT_GITGRAPH_CONFIG2 = DEFAULT_CONFIG?.gitGraph;\nvar LAYOUT_OFFSET = 10;\nvar COMMIT_STEP = 40;\nvar PX = 4;\nvar PY = 2;\nvar THEME_COLOR_LIMIT = 8;\nvar branchPos = /* @__PURE__ */new Map();\nvar commitPos = /* @__PURE__ */new Map();\nvar defaultPos = 30;\nvar allCommitsDict = /* @__PURE__ */new Map();\nvar lanes = [];\nvar maxPos = 0;\nvar dir = \"LR\";\nvar clear3 = /* @__PURE__ */__name(() => {\n  branchPos.clear();\n  commitPos.clear();\n  allCommitsDict.clear();\n  maxPos = 0;\n  lanes = [];\n  dir = \"LR\";\n}, \"clear\");\nvar drawText = /* @__PURE__ */__name(txt => {\n  const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n  const rows = typeof txt === \"string\" ? txt.split(/\\\\n|\\n|<br\\s*\\/?>/gi) : txt;\n  rows.forEach(row => {\n    const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n    tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n    tspan.setAttribute(\"dy\", \"1em\");\n    tspan.setAttribute(\"x\", \"0\");\n    tspan.setAttribute(\"class\", \"row\");\n    tspan.textContent = row.trim();\n    svgLabel.appendChild(tspan);\n  });\n  return svgLabel;\n}, \"drawText\");\nvar findClosestParent = /* @__PURE__ */__name(parents => {\n  let closestParent;\n  let comparisonFunc;\n  let targetPosition;\n  if (dir === \"BT\") {\n    comparisonFunc = /* @__PURE__ */__name((a, b) => a <= b, \"comparisonFunc\");\n    targetPosition = Infinity;\n  } else {\n    comparisonFunc = /* @__PURE__ */__name((a, b) => a >= b, \"comparisonFunc\");\n    targetPosition = 0;\n  }\n  parents.forEach(parent => {\n    const parentPosition = dir === \"TB\" || dir == \"BT\" ? commitPos.get(parent)?.y : commitPos.get(parent)?.x;\n    if (parentPosition !== void 0 && comparisonFunc(parentPosition, targetPosition)) {\n      closestParent = parent;\n      targetPosition = parentPosition;\n    }\n  });\n  return closestParent;\n}, \"findClosestParent\");\nvar findClosestParentBT = /* @__PURE__ */__name(parents => {\n  let closestParent = \"\";\n  let maxPosition = Infinity;\n  parents.forEach(parent => {\n    const parentPosition = commitPos.get(parent).y;\n    if (parentPosition <= maxPosition) {\n      closestParent = parent;\n      maxPosition = parentPosition;\n    }\n  });\n  return closestParent || void 0;\n}, \"findClosestParentBT\");\nvar setParallelBTPos = /* @__PURE__ */__name((sortedKeys, commits, defaultPos2) => {\n  let curPos = defaultPos2;\n  let maxPosition = defaultPos2;\n  const roots = [];\n  sortedKeys.forEach(key => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (commit2.parents.length) {\n      curPos = calculateCommitPosition(commit2);\n      maxPosition = Math.max(curPos, maxPosition);\n    } else {\n      roots.push(commit2);\n    }\n    setCommitPosition(commit2, curPos);\n  });\n  curPos = maxPosition;\n  roots.forEach(commit2 => {\n    setRootPosition(commit2, curPos, defaultPos2);\n  });\n  sortedKeys.forEach(key => {\n    const commit2 = commits.get(key);\n    if (commit2?.parents.length) {\n      const closestParent = findClosestParentBT(commit2.parents);\n      curPos = commitPos.get(closestParent).y - COMMIT_STEP;\n      if (curPos <= maxPosition) {\n        maxPosition = curPos;\n      }\n      const x = branchPos.get(commit2.branch).pos;\n      const y = curPos - LAYOUT_OFFSET;\n      commitPos.set(commit2.id, {\n        x,\n        y\n      });\n    }\n  });\n}, \"setParallelBTPos\");\nvar findClosestParentPos = /* @__PURE__ */__name(commit2 => {\n  const closestParent = findClosestParent(commit2.parents.filter(p => p !== null));\n  if (!closestParent) {\n    throw new Error(`Closest parent not found for commit ${commit2.id}`);\n  }\n  const closestParentPos = commitPos.get(closestParent)?.y;\n  if (closestParentPos === void 0) {\n    throw new Error(`Closest parent position not found for commit ${commit2.id}`);\n  }\n  return closestParentPos;\n}, \"findClosestParentPos\");\nvar calculateCommitPosition = /* @__PURE__ */__name(commit2 => {\n  const closestParentPos = findClosestParentPos(commit2);\n  return closestParentPos + COMMIT_STEP;\n}, \"calculateCommitPosition\");\nvar setCommitPosition = /* @__PURE__ */__name((commit2, curPos) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const x = branch2.pos;\n  const y = curPos + LAYOUT_OFFSET;\n  commitPos.set(commit2.id, {\n    x,\n    y\n  });\n  return {\n    x,\n    y\n  };\n}, \"setCommitPosition\");\nvar setRootPosition = /* @__PURE__ */__name((commit2, curPos, defaultPos2) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const y = curPos + defaultPos2;\n  const x = branch2.pos;\n  commitPos.set(commit2.id, {\n    x,\n    y\n  });\n}, \"setRootPosition\");\nvar drawCommitBullet = /* @__PURE__ */__name((gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType) => {\n  if (commitSymbolType === commitType.HIGHLIGHT) {\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 10).attr(\"y\", commitPosition.y - 10).attr(\"width\", 20).attr(\"height\", 20).attr(\"class\", `commit ${commit2.id} commit-highlight${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-outer`);\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 6).attr(\"y\", commitPosition.y - 6).attr(\"width\", 12).attr(\"height\", 12).attr(\"class\", `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-inner`);\n  } else if (commitSymbolType === commitType.CHERRY_PICK) {\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x).attr(\"cy\", commitPosition.y).attr(\"r\", 10).attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x - 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x + 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x + 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x - 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n  } else {\n    const circle = gBullets.append(\"circle\");\n    circle.attr(\"cx\", commitPosition.x);\n    circle.attr(\"cy\", commitPosition.y);\n    circle.attr(\"r\", commit2.type === commitType.MERGE ? 9 : 10);\n    circle.attr(\"class\", `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    if (commitSymbolType === commitType.MERGE) {\n      const circle2 = gBullets.append(\"circle\");\n      circle2.attr(\"cx\", commitPosition.x);\n      circle2.attr(\"cy\", commitPosition.y);\n      circle2.attr(\"r\", 6);\n      circle2.attr(\"class\", `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    }\n    if (commitSymbolType === commitType.REVERSE) {\n      const cross = gBullets.append(\"path\");\n      cross.attr(\"d\", `M ${commitPosition.x - 5},${commitPosition.y - 5}L${commitPosition.x + 5},${commitPosition.y + 5}M${commitPosition.x - 5},${commitPosition.y + 5}L${commitPosition.x + 5},${commitPosition.y - 5}`).attr(\"class\", `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    }\n  }\n}, \"drawCommitBullet\");\nvar drawCommitLabel = /* @__PURE__ */__name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.type !== commitType.CHERRY_PICK && (commit2.customId && commit2.type === commitType.MERGE || commit2.type !== commitType.MERGE) && DEFAULT_GITGRAPH_CONFIG2?.showCommitLabel) {\n    const wrapper = gLabels.append(\"g\");\n    const labelBkg = wrapper.insert(\"rect\").attr(\"class\", \"commit-label-bkg\");\n    const text = wrapper.append(\"text\").attr(\"x\", pos).attr(\"y\", commitPosition.y + 25).attr(\"class\", \"commit-label\").text(commit2.id);\n    const bbox = text.node()?.getBBox();\n    if (bbox) {\n      labelBkg.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2 - PY).attr(\"y\", commitPosition.y + 13.5).attr(\"width\", bbox.width + 2 * PY).attr(\"height\", bbox.height + 2 * PY);\n      if (dir === \"TB\" || dir === \"BT\") {\n        labelBkg.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX + 5)).attr(\"y\", commitPosition.y - 12);\n        text.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX)).attr(\"y\", commitPosition.y + bbox.height - 12);\n      } else {\n        text.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2);\n      }\n      if (DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel) {\n        if (dir === \"TB\" || dir === \"BT\") {\n          text.attr(\"transform\", \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\");\n          labelBkg.attr(\"transform\", \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\");\n        } else {\n          const r_x = -7.5 - (bbox.width + 10) / 25 * 9.5;\n          const r_y = 10 + bbox.width / 25 * 8.5;\n          wrapper.attr(\"transform\", \"translate(\" + r_x + \", \" + r_y + \") rotate(-45, \" + pos + \", \" + commitPosition.y + \")\");\n        }\n      }\n    }\n  }\n}, \"drawCommitLabel\");\nvar drawCommitTags = /* @__PURE__ */__name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.tags.length > 0) {\n    let yOffset = 0;\n    let maxTagBboxWidth = 0;\n    let maxTagBboxHeight = 0;\n    const tagElements = [];\n    for (const tagValue of commit2.tags.reverse()) {\n      const rect = gLabels.insert(\"polygon\");\n      const hole = gLabels.append(\"circle\");\n      const tag = gLabels.append(\"text\").attr(\"y\", commitPosition.y - 16 - yOffset).attr(\"class\", \"tag-label\").text(tagValue);\n      const tagBbox = tag.node()?.getBBox();\n      if (!tagBbox) {\n        throw new Error(\"Tag bbox not found\");\n      }\n      maxTagBboxWidth = Math.max(maxTagBboxWidth, tagBbox.width);\n      maxTagBboxHeight = Math.max(maxTagBboxHeight, tagBbox.height);\n      tag.attr(\"x\", commitPosition.posWithOffset - tagBbox.width / 2);\n      tagElements.push({\n        tag,\n        hole,\n        rect,\n        yOffset\n      });\n      yOffset += 20;\n    }\n    for (const {\n      tag,\n      hole,\n      rect,\n      yOffset: yOffset2\n    } of tagElements) {\n      const h2 = maxTagBboxHeight / 2;\n      const ly = commitPosition.y - 19.2 - yOffset2;\n      rect.attr(\"class\", \"tag-label-bkg\").attr(\"points\", `\n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly + PY}  \n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly - PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly + h2 + PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly + h2 + PY}`);\n      hole.attr(\"cy\", ly).attr(\"cx\", pos - maxTagBboxWidth / 2 + PX / 2).attr(\"r\", 1.5).attr(\"class\", \"tag-hole\");\n      if (dir === \"TB\" || dir === \"BT\") {\n        const yOrigin = pos + yOffset2;\n        rect.attr(\"class\", \"tag-label-bkg\").attr(\"points\", `\n        ${commitPosition.x},${yOrigin + 2}\n        ${commitPosition.x},${yOrigin - 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin + h2 + 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin + h2 + 2}`).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        hole.attr(\"cx\", commitPosition.x + PX / 2).attr(\"cy\", yOrigin).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        tag.attr(\"x\", commitPosition.x + 5).attr(\"y\", yOrigin + 3).attr(\"transform\", \"translate(14,14) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n      }\n    }\n  }\n}, \"drawCommitTags\");\nvar getCommitClassType = /* @__PURE__ */__name(commit2 => {\n  const commitSymbolType = commit2.customType ?? commit2.type;\n  switch (commitSymbolType) {\n    case commitType.NORMAL:\n      return \"commit-normal\";\n    case commitType.REVERSE:\n      return \"commit-reverse\";\n    case commitType.HIGHLIGHT:\n      return \"commit-highlight\";\n    case commitType.MERGE:\n      return \"commit-merge\";\n    case commitType.CHERRY_PICK:\n      return \"commit-cherry-pick\";\n    default:\n      return \"commit-normal\";\n  }\n}, \"getCommitClassType\");\nvar calculatePosition = /* @__PURE__ */__name((commit2, dir2, pos, commitPos2) => {\n  const defaultCommitPosition = {\n    x: 0,\n    y: 0\n  };\n  if (commit2.parents.length > 0) {\n    const closestParent = findClosestParent(commit2.parents);\n    if (closestParent) {\n      const parentPosition = commitPos2.get(closestParent) ?? defaultCommitPosition;\n      if (dir2 === \"TB\") {\n        return parentPosition.y + COMMIT_STEP;\n      } else if (dir2 === \"BT\") {\n        const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n        return currentPosition.y - COMMIT_STEP;\n      } else {\n        return parentPosition.x + COMMIT_STEP;\n      }\n    }\n  } else {\n    if (dir2 === \"TB\") {\n      return defaultPos;\n    } else if (dir2 === \"BT\") {\n      const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n      return currentPosition.y - COMMIT_STEP;\n    } else {\n      return 0;\n    }\n  }\n  return 0;\n}, \"calculatePosition\");\nvar getCommitPosition = /* @__PURE__ */__name((commit2, pos, isParallelCommits) => {\n  const posWithOffset = dir === \"BT\" && isParallelCommits ? pos : pos + LAYOUT_OFFSET;\n  const y = dir === \"TB\" || dir === \"BT\" ? posWithOffset : branchPos.get(commit2.branch)?.pos;\n  const x = dir === \"TB\" || dir === \"BT\" ? branchPos.get(commit2.branch)?.pos : posWithOffset;\n  if (x === void 0 || y === void 0) {\n    throw new Error(`Position were undefined for commit ${commit2.id}`);\n  }\n  return {\n    x,\n    y,\n    posWithOffset\n  };\n}, \"getCommitPosition\");\nvar drawCommits = /* @__PURE__ */__name((svg, commits, modifyGraph) => {\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const gBullets = svg.append(\"g\").attr(\"class\", \"commit-bullets\");\n  const gLabels = svg.append(\"g\").attr(\"class\", \"commit-labels\");\n  let pos = dir === \"TB\" || dir === \"BT\" ? defaultPos : 0;\n  const keys = [...commits.keys()];\n  const isParallelCommits = DEFAULT_GITGRAPH_CONFIG2?.parallelCommits ?? false;\n  const sortKeys = /* @__PURE__ */__name((a, b) => {\n    const seqA = commits.get(a)?.seq;\n    const seqB = commits.get(b)?.seq;\n    return seqA !== void 0 && seqB !== void 0 ? seqA - seqB : 0;\n  }, \"sortKeys\");\n  let sortedKeys = keys.sort(sortKeys);\n  if (dir === \"BT\") {\n    if (isParallelCommits) {\n      setParallelBTPos(sortedKeys, commits, pos);\n    }\n    sortedKeys = sortedKeys.reverse();\n  }\n  sortedKeys.forEach(key => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (isParallelCommits) {\n      pos = calculatePosition(commit2, dir, pos, commitPos);\n    }\n    const commitPosition = getCommitPosition(commit2, pos, isParallelCommits);\n    if (modifyGraph) {\n      const typeClass = getCommitClassType(commit2);\n      const commitSymbolType = commit2.customType ?? commit2.type;\n      const branchIndex = branchPos.get(commit2.branch)?.index ?? 0;\n      drawCommitBullet(gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType);\n      drawCommitLabel(gLabels, commit2, commitPosition, pos);\n      drawCommitTags(gLabels, commit2, commitPosition, pos);\n    }\n    if (dir === \"TB\" || dir === \"BT\") {\n      commitPos.set(commit2.id, {\n        x: commitPosition.x,\n        y: commitPosition.posWithOffset\n      });\n    } else {\n      commitPos.set(commit2.id, {\n        x: commitPosition.posWithOffset,\n        y: commitPosition.y\n      });\n    }\n    pos = dir === \"BT\" && isParallelCommits ? pos + COMMIT_STEP : pos + COMMIT_STEP + LAYOUT_OFFSET;\n    if (pos > maxPos) {\n      maxPos = pos;\n    }\n  });\n}, \"drawCommits\");\nvar shouldRerouteArrow = /* @__PURE__ */__name((commitA, commitB, p1, p2, allCommits) => {\n  const commitBIsFurthest = dir === \"TB\" || dir === \"BT\" ? p1.x < p2.x : p1.y < p2.y;\n  const branchToGetCurve = commitBIsFurthest ? commitB.branch : commitA.branch;\n  const isOnBranchToGetCurve = /* @__PURE__ */__name(x => x.branch === branchToGetCurve, \"isOnBranchToGetCurve\");\n  const isBetweenCommits = /* @__PURE__ */__name(x => x.seq > commitA.seq && x.seq < commitB.seq, \"isBetweenCommits\");\n  return [...allCommits.values()].some(commitX => {\n    return isBetweenCommits(commitX) && isOnBranchToGetCurve(commitX);\n  });\n}, \"shouldRerouteArrow\");\nvar findLane = /* @__PURE__ */__name((y1, y2, depth = 0) => {\n  const candidate = y1 + Math.abs(y1 - y2) / 2;\n  if (depth > 5) {\n    return candidate;\n  }\n  const ok = lanes.every(lane => Math.abs(lane - candidate) >= 10);\n  if (ok) {\n    lanes.push(candidate);\n    return candidate;\n  }\n  const diff = Math.abs(y1 - y2);\n  return findLane(y1, y2 - diff / 5, depth + 1);\n}, \"findLane\");\nvar drawArrow = /* @__PURE__ */__name((svg, commitA, commitB, allCommits) => {\n  const p1 = commitPos.get(commitA.id);\n  const p2 = commitPos.get(commitB.id);\n  if (p1 === void 0 || p2 === void 0) {\n    throw new Error(`Commit positions not found for commits ${commitA.id} and ${commitB.id}`);\n  }\n  const arrowNeedsRerouting = shouldRerouteArrow(commitA, commitB, p1, p2, allCommits);\n  let arc = \"\";\n  let arc2 = \"\";\n  let radius = 0;\n  let offset = 0;\n  let colorClassNum = branchPos.get(commitB.branch)?.index;\n  if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n    colorClassNum = branchPos.get(commitA.branch)?.index;\n  }\n  let lineDef;\n  if (arrowNeedsRerouting) {\n    arc = \"A 10 10, 0, 0, 0,\";\n    arc2 = \"A 10 10, 0, 0, 1,\";\n    radius = 10;\n    offset = 10;\n    const lineY = p1.y < p2.y ? findLane(p1.y, p2.y) : findLane(p2.y, p1.y);\n    const lineX = p1.x < p2.x ? findLane(p1.x, p2.x) : findLane(p2.x, p1.x);\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc2} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc2} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc2} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc2} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY - radius} ${arc} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc2} ${p2.x} ${lineY + offset} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY + radius} ${arc2} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc} ${p2.x} ${lineY - offset} L ${p2.x} ${p2.y}`;\n      }\n    }\n  } else {\n    arc = \"A 20 20, 0, 0, 0,\";\n    arc2 = \"A 20 20, 0, 0, 1,\";\n    radius = 20;\n    offset = 20;\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc2} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x + radius} ${p1.y} ${arc} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y > p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y === p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    }\n  }\n  if (lineDef === void 0) {\n    throw new Error(\"Line definition not found\");\n  }\n  svg.append(\"path\").attr(\"d\", lineDef).attr(\"class\", \"arrow arrow\" + colorClassNum % THEME_COLOR_LIMIT);\n}, \"drawArrow\");\nvar drawArrows = /* @__PURE__ */__name((svg, commits) => {\n  const gArrows = svg.append(\"g\").attr(\"class\", \"commit-arrows\");\n  [...commits.keys()].forEach(key => {\n    const commit2 = commits.get(key);\n    if (commit2.parents && commit2.parents.length > 0) {\n      commit2.parents.forEach(parent => {\n        drawArrow(gArrows, commits.get(parent), commit2, commits);\n      });\n    }\n  });\n}, \"drawArrows\");\nvar drawBranches = /* @__PURE__ */__name((svg, branches) => {\n  const g = svg.append(\"g\");\n  branches.forEach((branch2, index) => {\n    const adjustIndexForTheme = index % THEME_COLOR_LIMIT;\n    const pos = branchPos.get(branch2.name)?.pos;\n    if (pos === void 0) {\n      throw new Error(`Position not found for branch ${branch2.name}`);\n    }\n    const line = g.append(\"line\");\n    line.attr(\"x1\", 0);\n    line.attr(\"y1\", pos);\n    line.attr(\"x2\", maxPos);\n    line.attr(\"y2\", pos);\n    line.attr(\"class\", \"branch branch\" + adjustIndexForTheme);\n    if (dir === \"TB\") {\n      line.attr(\"y1\", defaultPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", maxPos);\n      line.attr(\"x2\", pos);\n    } else if (dir === \"BT\") {\n      line.attr(\"y1\", maxPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", defaultPos);\n      line.attr(\"x2\", pos);\n    }\n    lanes.push(pos);\n    const name = branch2.name;\n    const labelElement = drawText(name);\n    const bkg = g.insert(\"rect\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\" + adjustIndexForTheme);\n    label.node().appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    bkg.attr(\"class\", \"branchLabelBkg label\" + adjustIndexForTheme).attr(\"rx\", 4).attr(\"ry\", 4).attr(\"x\", -bbox.width - 4 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)).attr(\"y\", -bbox.height / 2 + 8).attr(\"width\", bbox.width + 18).attr(\"height\", bbox.height + 4);\n    label.attr(\"transform\", \"translate(\" + (-bbox.width - 14 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)) + \", \" + (pos - bbox.height / 2 - 1) + \")\");\n    if (dir === \"TB\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", 0);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", 0)\");\n    } else if (dir === \"BT\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", maxPos);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", \" + maxPos + \")\");\n    } else {\n      bkg.attr(\"transform\", \"translate(-19, \" + (pos - bbox.height / 2) + \")\");\n    }\n  });\n}, \"drawBranches\");\nvar setBranchPosition = /* @__PURE__ */__name(function (name, pos, index, bbox, rotateCommitLabel) {\n  branchPos.set(name, {\n    pos,\n    index\n  });\n  pos += 50 + (rotateCommitLabel ? 40 : 0) + (dir === \"TB\" || dir === \"BT\" ? bbox.width / 2 : 0);\n  return pos;\n}, \"setBranchPosition\");\nvar draw = /* @__PURE__ */__name(function (txt, id, ver, diagObj) {\n  clear3();\n  log.debug(\"in gitgraph renderer\", txt + \"\\n\", \"id:\", id, ver);\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const rotateCommitLabel = DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel ?? false;\n  const db2 = diagObj.db;\n  allCommitsDict = db2.getCommits();\n  const branches = db2.getBranchesAsObjArray();\n  dir = db2.getDirection();\n  const diagram2 = select(`[id=\"${id}\"]`);\n  let pos = 0;\n  branches.forEach((branch2, index) => {\n    const labelElement = drawText(branch2.name);\n    const g = diagram2.append(\"g\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\");\n    label.node()?.appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    pos = setBranchPosition(branch2.name, pos, index, bbox, rotateCommitLabel);\n    label.remove();\n    branchLabel.remove();\n    g.remove();\n  });\n  drawCommits(diagram2, allCommitsDict, false);\n  if (DEFAULT_GITGRAPH_CONFIG2.showBranches) {\n    drawBranches(diagram2, branches);\n  }\n  drawArrows(diagram2, allCommitsDict);\n  drawCommits(diagram2, allCommitsDict, true);\n  utils_default.insertTitle(diagram2, \"gitTitleText\", DEFAULT_GITGRAPH_CONFIG2.titleTopMargin ?? 0, db2.getDiagramTitle());\n  setupGraphViewbox(void 0, diagram2, DEFAULT_GITGRAPH_CONFIG2.diagramPadding, DEFAULT_GITGRAPH_CONFIG2.useMaxWidth);\n}, \"draw\");\nvar gitGraphRenderer_default = {\n  draw\n};\nif (void 0) {\n  const {\n    it,\n    expect,\n    describe\n  } = void 0;\n  describe(\"drawText\", () => {\n    it(\"should drawText\", () => {\n      const svgLabel = drawText(\"main\");\n      expect(svgLabel).toBeDefined();\n      expect(svgLabel.children[0].innerHTML).toBe(\"main\");\n    });\n  });\n  describe(\"branchPosition\", () => {\n    const bbox = {\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      toJSON: /* @__PURE__ */__name(() => \"\", \"toJSON\")\n    };\n    it(\"should setBranchPositions LR with two branches\", () => {\n      dir = \"LR\";\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(90);\n      expect(branchPos.get(\"main\")).toEqual({\n        pos: 0,\n        index: 0\n      });\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(180);\n      expect(branchPos.get(\"develop\")).toEqual({\n        pos,\n        index: 1\n      });\n    });\n    it(\"should setBranchPositions TB with two branches\", () => {\n      dir = \"TB\";\n      bbox.width = 34.9921875;\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(107.49609375);\n      expect(branchPos.get(\"main\")).toEqual({\n        pos: 0,\n        index: 0\n      });\n      bbox.width = 56.421875;\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(225.70703125);\n      expect(branchPos.get(\"develop\")).toEqual({\n        pos,\n        index: 1\n      });\n    });\n  });\n  describe(\"commitPosition\", () => {\n    const commits = /* @__PURE__ */new Map([[\"commitZero\", {\n      id: \"ZERO\",\n      message: \"\",\n      seq: 0,\n      type: commitType.NORMAL,\n      tags: [],\n      parents: [],\n      branch: \"main\"\n    }], [\"commitA\", {\n      id: \"A\",\n      message: \"\",\n      seq: 1,\n      type: commitType.NORMAL,\n      tags: [],\n      parents: [\"ZERO\"],\n      branch: \"feature\"\n    }], [\"commitB\", {\n      id: \"B\",\n      message: \"\",\n      seq: 2,\n      type: commitType.NORMAL,\n      tags: [],\n      parents: [\"A\"],\n      branch: \"feature\"\n    }], [\"commitM\", {\n      id: \"M\",\n      message: \"merged branch feature into main\",\n      seq: 3,\n      type: commitType.MERGE,\n      tags: [],\n      parents: [\"ZERO\", \"B\"],\n      branch: \"main\",\n      customId: true\n    }], [\"commitC\", {\n      id: \"C\",\n      message: \"\",\n      seq: 4,\n      type: commitType.NORMAL,\n      tags: [],\n      parents: [\"ZERO\"],\n      branch: \"release\"\n    }], [\"commit5_8928ea0\", {\n      id: \"5-8928ea0\",\n      message: \"cherry-picked [object Object] into release\",\n      seq: 5,\n      type: commitType.CHERRY_PICK,\n      tags: [],\n      parents: [\"C\", \"M\"],\n      branch: \"release\"\n    }], [\"commitD\", {\n      id: \"D\",\n      message: \"\",\n      seq: 6,\n      type: commitType.NORMAL,\n      tags: [],\n      parents: [\"5-8928ea0\"],\n      branch: \"release\"\n    }], [\"commit7_ed848ba\", {\n      id: \"7-ed848ba\",\n      message: \"cherry-picked [object Object] into release\",\n      seq: 7,\n      type: commitType.CHERRY_PICK,\n      tags: [],\n      parents: [\"D\", \"M\"],\n      branch: \"release\"\n    }]]);\n    let pos = 0;\n    branchPos.set(\"main\", {\n      pos: 0,\n      index: 0\n    });\n    branchPos.set(\"feature\", {\n      pos: 107.49609375,\n      index: 1\n    });\n    branchPos.set(\"release\", {\n      pos: 224.03515625,\n      index: 2\n    });\n    describe(\"TB\", () => {\n      pos = 30;\n      dir = \"TB\";\n      const expectedCommitPositionTB = /* @__PURE__ */new Map([[\"commitZero\", {\n        x: 0,\n        y: 40,\n        posWithOffset: 40\n      }], [\"commitA\", {\n        x: 107.49609375,\n        y: 90,\n        posWithOffset: 90\n      }], [\"commitB\", {\n        x: 107.49609375,\n        y: 140,\n        posWithOffset: 140\n      }], [\"commitM\", {\n        x: 0,\n        y: 190,\n        posWithOffset: 190\n      }], [\"commitC\", {\n        x: 224.03515625,\n        y: 240,\n        posWithOffset: 240\n      }], [\"commit5_8928ea0\", {\n        x: 224.03515625,\n        y: 290,\n        posWithOffset: 290\n      }], [\"commitD\", {\n        x: 224.03515625,\n        y: 340,\n        posWithOffset: 340\n      }], [\"commit7_ed848ba\", {\n        x: 224.03515625,\n        y: 390,\n        posWithOffset: 390\n      }]]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos, false);\n          expect(position).toEqual(expectedCommitPositionTB.get(key));\n          pos += 50;\n        });\n      });\n    });\n    describe(\"LR\", () => {\n      let pos2 = 30;\n      dir = \"LR\";\n      const expectedCommitPositionLR = /* @__PURE__ */new Map([[\"commitZero\", {\n        x: 0,\n        y: 40,\n        posWithOffset: 40\n      }], [\"commitA\", {\n        x: 107.49609375,\n        y: 90,\n        posWithOffset: 90\n      }], [\"commitB\", {\n        x: 107.49609375,\n        y: 140,\n        posWithOffset: 140\n      }], [\"commitM\", {\n        x: 0,\n        y: 190,\n        posWithOffset: 190\n      }], [\"commitC\", {\n        x: 224.03515625,\n        y: 240,\n        posWithOffset: 240\n      }], [\"commit5_8928ea0\", {\n        x: 224.03515625,\n        y: 290,\n        posWithOffset: 290\n      }], [\"commitD\", {\n        x: 224.03515625,\n        y: 340,\n        posWithOffset: 340\n      }], [\"commit7_ed848ba\", {\n        x: 224.03515625,\n        y: 390,\n        posWithOffset: 390\n      }]]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos2, false);\n          expect(position).toEqual(expectedCommitPositionLR.get(key));\n          pos2 += 50;\n        });\n      });\n    });\n    describe(\"getCommitClassType\", () => {\n      const expectedCommitClassType = /* @__PURE__ */new Map([[\"commitZero\", \"commit-normal\"], [\"commitA\", \"commit-normal\"], [\"commitB\", \"commit-normal\"], [\"commitM\", \"commit-merge\"], [\"commitC\", \"commit-normal\"], [\"commit5_8928ea0\", \"commit-cherry-pick\"], [\"commitD\", \"commit-normal\"], [\"commit7_ed848ba\", \"commit-cherry-pick\"]]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct class type for commit ${key}`, () => {\n          const classType = getCommitClassType(commit2);\n          expect(classType).toBe(expectedCommitClassType.get(key));\n        });\n      });\n    });\n  });\n  describe(\"building BT parallel commit diagram\", () => {\n    const commits = /* @__PURE__ */new Map([[\"1-abcdefg\", {\n      id: \"1-abcdefg\",\n      message: \"\",\n      seq: 0,\n      type: 0,\n      tags: [],\n      parents: [],\n      branch: \"main\"\n    }], [\"2-abcdefg\", {\n      id: \"2-abcdefg\",\n      message: \"\",\n      seq: 1,\n      type: 0,\n      tags: [],\n      parents: [\"1-abcdefg\"],\n      branch: \"main\"\n    }], [\"3-abcdefg\", {\n      id: \"3-abcdefg\",\n      message: \"\",\n      seq: 2,\n      type: 0,\n      tags: [],\n      parents: [\"2-abcdefg\"],\n      branch: \"develop\"\n    }], [\"4-abcdefg\", {\n      id: \"4-abcdefg\",\n      message: \"\",\n      seq: 3,\n      type: 0,\n      tags: [],\n      parents: [\"3-abcdefg\"],\n      branch: \"develop\"\n    }], [\"5-abcdefg\", {\n      id: \"5-abcdefg\",\n      message: \"\",\n      seq: 4,\n      type: 0,\n      tags: [],\n      parents: [\"2-abcdefg\"],\n      branch: \"feature\"\n    }], [\"6-abcdefg\", {\n      id: \"6-abcdefg\",\n      message: \"\",\n      seq: 5,\n      type: 0,\n      tags: [],\n      parents: [\"5-abcdefg\"],\n      branch: \"feature\"\n    }], [\"7-abcdefg\", {\n      id: \"7-abcdefg\",\n      message: \"\",\n      seq: 6,\n      type: 0,\n      tags: [],\n      parents: [\"2-abcdefg\"],\n      branch: \"main\"\n    }], [\"8-abcdefg\", {\n      id: \"8-abcdefg\",\n      message: \"\",\n      seq: 7,\n      type: 0,\n      tags: [],\n      parents: [\"7-abcdefg\"],\n      branch: \"main\"\n    }]]);\n    const expectedCommitPosition = /* @__PURE__ */new Map([[\"1-abcdefg\", {\n      x: 0,\n      y: 40\n    }], [\"2-abcdefg\", {\n      x: 0,\n      y: 90\n    }], [\"3-abcdefg\", {\n      x: 107.49609375,\n      y: 140\n    }], [\"4-abcdefg\", {\n      x: 107.49609375,\n      y: 190\n    }], [\"5-abcdefg\", {\n      x: 225.70703125,\n      y: 140\n    }], [\"6-abcdefg\", {\n      x: 225.70703125,\n      y: 190\n    }], [\"7-abcdefg\", {\n      x: 0,\n      y: 140\n    }], [\"8-abcdefg\", {\n      x: 0,\n      y: 190\n    }]]);\n    const expectedCommitPositionAfterParallel = /* @__PURE__ */new Map([[\"1-abcdefg\", {\n      x: 0,\n      y: 210\n    }], [\"2-abcdefg\", {\n      x: 0,\n      y: 160\n    }], [\"3-abcdefg\", {\n      x: 107.49609375,\n      y: 110\n    }], [\"4-abcdefg\", {\n      x: 107.49609375,\n      y: 60\n    }], [\"5-abcdefg\", {\n      x: 225.70703125,\n      y: 110\n    }], [\"6-abcdefg\", {\n      x: 225.70703125,\n      y: 60\n    }], [\"7-abcdefg\", {\n      x: 0,\n      y: 110\n    }], [\"8-abcdefg\", {\n      x: 0,\n      y: 60\n    }]]);\n    const expectedCommitCurrentPosition = /* @__PURE__ */new Map([[\"1-abcdefg\", 30], [\"2-abcdefg\", 80], [\"3-abcdefg\", 130], [\"4-abcdefg\", 180], [\"5-abcdefg\", 130], [\"6-abcdefg\", 180], [\"7-abcdefg\", 130], [\"8-abcdefg\", 180]]);\n    const sortedKeys = [...expectedCommitPosition.keys()];\n    it(\"should get the correct commit position and current position\", () => {\n      dir = \"BT\";\n      let curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", {\n        pos: 0,\n        index: 0\n      });\n      branchPos.set(\"develop\", {\n        pos: 107.49609375,\n        index: 1\n      });\n      branchPos.set(\"feature\", {\n        pos: 225.70703125,\n        index: 2\n      });\n      DEFAULT_GITGRAPH_CONFIG2.parallelCommits = true;\n      commits.forEach((commit2, key) => {\n        if (commit2.parents.length > 0) {\n          curPos = calculateCommitPosition(commit2);\n        }\n        const position = setCommitPosition(commit2, curPos);\n        expect(position).toEqual(expectedCommitPosition.get(key));\n        expect(curPos).toEqual(expectedCommitCurrentPosition.get(key));\n      });\n    });\n    it(\"should get the correct commit position after parallel commits\", () => {\n      commitPos.clear();\n      branchPos.clear();\n      dir = \"BT\";\n      const curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", {\n        pos: 0,\n        index: 0\n      });\n      branchPos.set(\"develop\", {\n        pos: 107.49609375,\n        index: 1\n      });\n      branchPos.set(\"feature\", {\n        pos: 225.70703125,\n        index: 2\n      });\n      setParallelBTPos(sortedKeys, commits, curPos);\n      sortedKeys.forEach(commit2 => {\n        const position = commitPos.get(commit2);\n        expect(position).toEqual(expectedCommitPositionAfterParallel.get(commit2));\n      });\n    });\n  });\n  DEFAULT_GITGRAPH_CONFIG2.parallelCommits = false;\n  it(\"add\", () => {\n    commitPos.set(\"parent1\", {\n      x: 1,\n      y: 1\n    });\n    commitPos.set(\"parent2\", {\n      x: 2,\n      y: 2\n    });\n    commitPos.set(\"parent3\", {\n      x: 3,\n      y: 3\n    });\n    dir = \"LR\";\n    const parents = [\"parent1\", \"parent2\", \"parent3\"];\n    const closestParent = findClosestParent(parents);\n    expect(closestParent).toBe(\"parent3\");\n    commitPos.clear();\n  });\n}\n\n// src/diagrams/git/styles.js\nvar getStyles = /* @__PURE__ */__name(options => `\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0, 1, 2, 3, 4, 5, 6, 7].map(i => `\n        .branch-label${i} { fill: ${options[\"gitBranchLabel\" + i]}; }\n        .commit${i} { stroke: ${options[\"git\" + i]}; fill: ${options[\"git\" + i]}; }\n        .commit-highlight${i} { stroke: ${options[\"gitInv\" + i]}; fill: ${options[\"gitInv\" + i]}; }\n        .label${i}  { fill: ${options[\"git\" + i]}; }\n        .arrow${i} { stroke: ${options[\"git\" + i]}; }\n        `).join(\"\\n\")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${options.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelColor};}\n  .commit-label-bkg { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${options.tagLabelFontSize}; fill: ${options.tagLabelColor};}\n  .tag-label-bkg { fill: ${options.tagLabelBackground}; stroke: ${options.tagLabelBorder}; }\n  .tag-hole { fill: ${options.textColor}; }\n\n  .commit-merge {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`, \"getStyles\");\nvar styles_default = getStyles;\n\n// src/diagrams/git/gitGraphDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer: gitGraphRenderer_default,\n  styles: styles_default\n};\nexport { diagram };","map":{"version":3,"names":["populateCommonDb","ImperativeState","cleanAndMerge","random","utils_default","__name","clear","common_default","defaultConfig_default","getAccDescription","getAccTitle","getConfig","getConfig2","getDiagramTitle","log","setAccDescription","setAccTitle","setDiagramTitle","setupGraphViewbox2","setupGraphViewbox","parse","commitType","NORMAL","REVERSE","HIGHLIGHT","MERGE","CHERRY_PICK","DEFAULT_GITGRAPH_CONFIG","gitGraph","getConfig3","config","state","mainBranchName","mainBranchOrder","commits","Map","head","branchConfig","name","order","branches","currBranch","direction","seq","options","getID","length","uniqBy","list","fn","recordMap","Object","create","reduce","out","item","key","push","setDirection","dir2","records","setOptions","rawOptString","debug","trim","JSON","e","error","message","getOptions","commit","commitDB","msg","id","type","tags","info","sanitizeText","map","tag","newCommit","parents","branch","set","branchDB","has","Error","checkout","merge","mergeDB","otherBranch","customId","overrideType","customTags","currentBranchCheck","get","otherBranchCheck","currentCommit","otherCommit","hash","text","token","expected","join","verifiedBranch","commit2","customType","cherryPick","cherryPickDB","sourceId","targetId","parentCommitId","parent","sourceCommit","Array","isArray","includes","sourceCommitBranch","currentCommitId","filter","Boolean","branch2","upsert","arr","newVal","index","indexOf","splice","prettyPrintCommitHistory","commitArr","commit3","line","forEach","c","label","prettyPrint","node","getCommitsArray","clear2","reset","getBranchesAsObjArray","branchesArray","values","i","parseFloat","sort","a","b","getBranches","getCommits","o","getCurrentBranch","getDirection","getHead","db","populate","ast","db2","dir","statement","statements","parseStatement","parsers","Commit","stmt","parseCommit","Branch","parseBranch","Merge","parseMerge","Checkout","parseCheckout","CherryPicking","parseCherryPicking","parser2","$type","merge2","checkout2","cherryPicking","parser","input","it","expect","describe","mockDB","vi","toHaveBeenCalledWith","cherryPick2","dummy","gitGraphAst","$container","select","DEFAULT_CONFIG","DEFAULT_GITGRAPH_CONFIG2","LAYOUT_OFFSET","COMMIT_STEP","PX","PY","THEME_COLOR_LIMIT","branchPos","commitPos","defaultPos","allCommitsDict","lanes","maxPos","clear3","drawText","txt","svgLabel","document","createElementNS","rows","split","row","tspan","setAttributeNS","setAttribute","textContent","appendChild","findClosestParent","closestParent","comparisonFunc","targetPosition","Infinity","parentPosition","y","x","findClosestParentBT","maxPosition","setParallelBTPos","sortedKeys","defaultPos2","curPos","roots","calculateCommitPosition","Math","max","setCommitPosition","setRootPosition","pos","findClosestParentPos","p","closestParentPos","drawCommitBullet","gBullets","commitPosition","typeClass","branchIndex","commitSymbolType","append","attr","circle","circle2","cross","drawCommitLabel","gLabels","showCommitLabel","wrapper","labelBkg","insert","bbox","getBBox","posWithOffset","width","height","rotateCommitLabel","r_x","r_y","drawCommitTags","yOffset","maxTagBboxWidth","maxTagBboxHeight","tagElements","tagValue","reverse","rect","hole","tagBbox","yOffset2","h2","ly","yOrigin","getCommitClassType","calculatePosition","commitPos2","defaultCommitPosition","currentPosition","getCommitPosition","isParallelCommits","drawCommits","svg","modifyGraph","keys","parallelCommits","sortKeys","seqA","seqB","shouldRerouteArrow","commitA","commitB","p1","p2","allCommits","commitBIsFurthest","branchToGetCurve","isOnBranchToGetCurve","isBetweenCommits","some","commitX","findLane","y1","y2","depth","candidate","abs","ok","every","lane","diff","drawArrow","arrowNeedsRerouting","arc","arc2","radius","offset","colorClassNum","lineDef","lineY","lineX","drawArrows","gArrows","drawBranches","g","adjustIndexForTheme","labelElement","bkg","branchLabel","setBranchPosition","draw","ver","diagObj","diagram2","remove","showBranches","insertTitle","titleTopMargin","diagramPadding","useMaxWidth","gitGraphRenderer_default","toBeDefined","children","innerHTML","toBe","top","right","bottom","left","toJSON","toEqual","posNext","expectedCommitPositionTB","position","pos2","expectedCommitPositionLR","expectedCommitClassType","classType","expectedCommitPosition","expectedCommitPositionAfterParallel","expectedCommitCurrentPosition","getStyles","lineColor","commitLabelFontSize","commitLabelColor","commitLabelBackground","tagLabelFontSize","tagLabelColor","tagLabelBackground","tagLabelBorder","textColor","primaryColor","styles_default","diagram","renderer","styles"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/mermaid/dist/chunks/mermaid.core/gitGraphDiagram-7IBYFJ6S.mjs"],"sourcesContent":["import {\n  populateCommonDb\n} from \"./chunk-4BMEZGHF.mjs\";\nimport {\n  ImperativeState\n} from \"./chunk-XZIHB7SX.mjs\";\nimport {\n  cleanAndMerge,\n  random,\n  utils_default\n} from \"./chunk-O4NI6UNU.mjs\";\nimport {\n  __name,\n  clear,\n  common_default,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig,\n  getConfig2,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n  setupGraphViewbox2 as setupGraphViewbox\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/git/gitGraphParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/git/gitGraphTypes.ts\nvar commitType = {\n  NORMAL: 0,\n  REVERSE: 1,\n  HIGHLIGHT: 2,\n  MERGE: 3,\n  CHERRY_PICK: 4\n};\n\n// src/diagrams/git/gitGraphAst.ts\nvar DEFAULT_GITGRAPH_CONFIG = defaultConfig_default.gitGraph;\nvar getConfig3 = /* @__PURE__ */ __name(() => {\n  const config = cleanAndMerge({\n    ...DEFAULT_GITGRAPH_CONFIG,\n    ...getConfig().gitGraph\n  });\n  return config;\n}, \"getConfig\");\nvar state = new ImperativeState(() => {\n  const config = getConfig3();\n  const mainBranchName = config.mainBranchName;\n  const mainBranchOrder = config.mainBranchOrder;\n  return {\n    mainBranchName,\n    commits: /* @__PURE__ */ new Map(),\n    head: null,\n    branchConfig: /* @__PURE__ */ new Map([[mainBranchName, { name: mainBranchName, order: mainBranchOrder }]]),\n    branches: /* @__PURE__ */ new Map([[mainBranchName, null]]),\n    currBranch: mainBranchName,\n    direction: \"LR\",\n    seq: 0,\n    options: {}\n  };\n});\nfunction getID() {\n  return random({ length: 7 });\n}\n__name(getID, \"getID\");\nfunction uniqBy(list, fn) {\n  const recordMap = /* @__PURE__ */ Object.create(null);\n  return list.reduce((out, item) => {\n    const key = fn(item);\n    if (!recordMap[key]) {\n      recordMap[key] = true;\n      out.push(item);\n    }\n    return out;\n  }, []);\n}\n__name(uniqBy, \"uniqBy\");\nvar setDirection = /* @__PURE__ */ __name(function(dir2) {\n  state.records.direction = dir2;\n}, \"setDirection\");\nvar setOptions = /* @__PURE__ */ __name(function(rawOptString) {\n  log.debug(\"options str\", rawOptString);\n  rawOptString = rawOptString?.trim();\n  rawOptString = rawOptString || \"{}\";\n  try {\n    state.records.options = JSON.parse(rawOptString);\n  } catch (e) {\n    log.error(\"error while parsing gitGraph options\", e.message);\n  }\n}, \"setOptions\");\nvar getOptions = /* @__PURE__ */ __name(function() {\n  return state.records.options;\n}, \"getOptions\");\nvar commit = /* @__PURE__ */ __name(function(commitDB) {\n  let msg = commitDB.msg;\n  let id = commitDB.id;\n  const type = commitDB.type;\n  let tags = commitDB.tags;\n  log.info(\"commit\", msg, id, type, tags);\n  log.debug(\"Entering commit:\", msg, id, type, tags);\n  const config = getConfig3();\n  id = common_default.sanitizeText(id, config);\n  msg = common_default.sanitizeText(msg, config);\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\n  const newCommit = {\n    id: id ? id : state.records.seq + \"-\" + getID(),\n    message: msg,\n    seq: state.records.seq++,\n    type: type ?? commitType.NORMAL,\n    tags: tags ?? [],\n    parents: state.records.head == null ? [] : [state.records.head.id],\n    branch: state.records.currBranch\n  };\n  state.records.head = newCommit;\n  log.info(\"main branch\", config.mainBranchName);\n  state.records.commits.set(newCommit.id, newCommit);\n  state.records.branches.set(state.records.currBranch, newCommit.id);\n  log.debug(\"in pushCommit \" + newCommit.id);\n}, \"commit\");\nvar branch = /* @__PURE__ */ __name(function(branchDB) {\n  let name = branchDB.name;\n  const order = branchDB.order;\n  name = common_default.sanitizeText(name, getConfig3());\n  if (state.records.branches.has(name)) {\n    throw new Error(\n      `Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using \"checkout ${name}\")`\n    );\n  }\n  state.records.branches.set(name, state.records.head != null ? state.records.head.id : null);\n  state.records.branchConfig.set(name, { name, order });\n  checkout(name);\n  log.debug(\"in createBranch\");\n}, \"branch\");\nvar merge = /* @__PURE__ */ __name((mergeDB) => {\n  let otherBranch = mergeDB.branch;\n  let customId = mergeDB.id;\n  const overrideType = mergeDB.type;\n  const customTags = mergeDB.tags;\n  const config = getConfig3();\n  otherBranch = common_default.sanitizeText(otherBranch, config);\n  if (customId) {\n    customId = common_default.sanitizeText(customId, config);\n  }\n  const currentBranchCheck = state.records.branches.get(state.records.currBranch);\n  const otherBranchCheck = state.records.branches.get(otherBranch);\n  const currentCommit = currentBranchCheck ? state.records.commits.get(currentBranchCheck) : void 0;\n  const otherCommit = otherBranchCheck ? state.records.commits.get(otherBranchCheck) : void 0;\n  if (currentCommit && otherCommit && currentCommit.branch === otherBranch) {\n    throw new Error(`Cannot merge branch '${otherBranch}' into itself.`);\n  }\n  if (state.records.currBranch === otherBranch) {\n    const error = new Error('Incorrect usage of \"merge\". Cannot merge a branch to itself');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (currentCommit === void 0 || !currentCommit) {\n    const error = new Error(\n      `Incorrect usage of \"merge\". Current branch (${state.records.currBranch})has no commits`\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"commit\"]\n    };\n    throw error;\n  }\n  if (!state.records.branches.has(otherBranch)) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") does not exist\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [`branch ${otherBranch}`]\n    };\n    throw error;\n  }\n  if (otherCommit === void 0 || !otherCommit) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Branch to be merged (' + otherBranch + \") has no commits\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: ['\"commit\"']\n    };\n    throw error;\n  }\n  if (currentCommit === otherCommit) {\n    const error = new Error('Incorrect usage of \"merge\". Both branches have same head');\n    error.hash = {\n      text: `merge ${otherBranch}`,\n      token: `merge ${otherBranch}`,\n      expected: [\"branch abc\"]\n    };\n    throw error;\n  }\n  if (customId && state.records.commits.has(customId)) {\n    const error = new Error(\n      'Incorrect usage of \"merge\". Commit with id:' + customId + \" already exists, use different custom Id\"\n    );\n    error.hash = {\n      text: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      token: `merge ${otherBranch} ${customId} ${overrideType} ${customTags?.join(\" \")}`,\n      expected: [\n        `merge ${otherBranch} ${customId}_UNIQUE ${overrideType} ${customTags?.join(\" \")}`\n      ]\n    };\n    throw error;\n  }\n  const verifiedBranch = otherBranchCheck ? otherBranchCheck : \"\";\n  const commit2 = {\n    id: customId || `${state.records.seq}-${getID()}`,\n    message: `merged branch ${otherBranch} into ${state.records.currBranch}`,\n    seq: state.records.seq++,\n    parents: state.records.head == null ? [] : [state.records.head.id, verifiedBranch],\n    branch: state.records.currBranch,\n    type: commitType.MERGE,\n    customType: overrideType,\n    customId: customId ? true : false,\n    tags: customTags ?? []\n  };\n  state.records.head = commit2;\n  state.records.commits.set(commit2.id, commit2);\n  state.records.branches.set(state.records.currBranch, commit2.id);\n  log.debug(state.records.branches);\n  log.debug(\"in mergeBranch\");\n}, \"merge\");\nvar cherryPick = /* @__PURE__ */ __name(function(cherryPickDB) {\n  let sourceId = cherryPickDB.id;\n  let targetId = cherryPickDB.targetId;\n  let tags = cherryPickDB.tags;\n  let parentCommitId = cherryPickDB.parent;\n  log.debug(\"Entering cherryPick:\", sourceId, targetId, tags);\n  const config = getConfig3();\n  sourceId = common_default.sanitizeText(sourceId, config);\n  targetId = common_default.sanitizeText(targetId, config);\n  tags = tags?.map((tag) => common_default.sanitizeText(tag, config));\n  parentCommitId = common_default.sanitizeText(parentCommitId, config);\n  if (!sourceId || !state.records.commits.has(sourceId)) {\n    const error = new Error(\n      'Incorrect usage of \"cherryPick\". Source commit id should exist and provided'\n    );\n    error.hash = {\n      text: `cherryPick ${sourceId} ${targetId}`,\n      token: `cherryPick ${sourceId} ${targetId}`,\n      expected: [\"cherry-pick abc\"]\n    };\n    throw error;\n  }\n  const sourceCommit = state.records.commits.get(sourceId);\n  if (sourceCommit === void 0 || !sourceCommit) {\n    throw new Error('Incorrect usage of \"cherryPick\". Source commit id should exist and provided');\n  }\n  if (parentCommitId && !(Array.isArray(sourceCommit.parents) && sourceCommit.parents.includes(parentCommitId))) {\n    const error = new Error(\n      \"Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.\"\n    );\n    throw error;\n  }\n  const sourceCommitBranch = sourceCommit.branch;\n  if (sourceCommit.type === commitType.MERGE && !parentCommitId) {\n    const error = new Error(\n      \"Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.\"\n    );\n    throw error;\n  }\n  if (!targetId || !state.records.commits.has(targetId)) {\n    if (sourceCommitBranch === state.records.currBranch) {\n      const error = new Error(\n        'Incorrect usage of \"cherryPick\". Source commit is already on current branch'\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommitId = state.records.branches.get(state.records.currBranch);\n    if (currentCommitId === void 0 || !currentCommitId) {\n      const error = new Error(\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const currentCommit = state.records.commits.get(currentCommitId);\n    if (currentCommit === void 0 || !currentCommit) {\n      const error = new Error(\n        `Incorrect usage of \"cherry-pick\". Current branch (${state.records.currBranch})has no commits`\n      );\n      error.hash = {\n        text: `cherryPick ${sourceId} ${targetId}`,\n        token: `cherryPick ${sourceId} ${targetId}`,\n        expected: [\"cherry-pick abc\"]\n      };\n      throw error;\n    }\n    const commit2 = {\n      id: state.records.seq + \"-\" + getID(),\n      message: `cherry-picked ${sourceCommit?.message} into ${state.records.currBranch}`,\n      seq: state.records.seq++,\n      parents: state.records.head == null ? [] : [state.records.head.id, sourceCommit.id],\n      branch: state.records.currBranch,\n      type: commitType.CHERRY_PICK,\n      tags: tags ? tags.filter(Boolean) : [\n        `cherry-pick:${sourceCommit.id}${sourceCommit.type === commitType.MERGE ? `|parent:${parentCommitId}` : \"\"}`\n      ]\n    };\n    state.records.head = commit2;\n    state.records.commits.set(commit2.id, commit2);\n    state.records.branches.set(state.records.currBranch, commit2.id);\n    log.debug(state.records.branches);\n    log.debug(\"in cherryPick\");\n  }\n}, \"cherryPick\");\nvar checkout = /* @__PURE__ */ __name(function(branch2) {\n  branch2 = common_default.sanitizeText(branch2, getConfig3());\n  if (!state.records.branches.has(branch2)) {\n    const error = new Error(\n      `Trying to checkout branch which is not yet created. (Help try using \"branch ${branch2}\")`\n    );\n    error.hash = {\n      text: `checkout ${branch2}`,\n      token: `checkout ${branch2}`,\n      expected: [`branch ${branch2}`]\n    };\n    throw error;\n  } else {\n    state.records.currBranch = branch2;\n    const id = state.records.branches.get(state.records.currBranch);\n    if (id === void 0 || !id) {\n      state.records.head = null;\n    } else {\n      state.records.head = state.records.commits.get(id) ?? null;\n    }\n  }\n}, \"checkout\");\nfunction upsert(arr, key, newVal) {\n  const index = arr.indexOf(key);\n  if (index === -1) {\n    arr.push(newVal);\n  } else {\n    arr.splice(index, 1, newVal);\n  }\n}\n__name(upsert, \"upsert\");\nfunction prettyPrintCommitHistory(commitArr) {\n  const commit2 = commitArr.reduce((out, commit3) => {\n    if (out.seq > commit3.seq) {\n      return out;\n    }\n    return commit3;\n  }, commitArr[0]);\n  let line = \"\";\n  commitArr.forEach(function(c) {\n    if (c === commit2) {\n      line += \"\t*\";\n    } else {\n      line += \"\t|\";\n    }\n  });\n  const label = [line, commit2.id, commit2.seq];\n  for (const branch2 in state.records.branches) {\n    if (state.records.branches.get(branch2) === commit2.id) {\n      label.push(branch2);\n    }\n  }\n  log.debug(label.join(\" \"));\n  if (commit2.parents && commit2.parents.length == 2 && commit2.parents[0] && commit2.parents[1]) {\n    const newCommit = state.records.commits.get(commit2.parents[0]);\n    upsert(commitArr, commit2, newCommit);\n    if (commit2.parents[1]) {\n      commitArr.push(state.records.commits.get(commit2.parents[1]));\n    }\n  } else if (commit2.parents.length == 0) {\n    return;\n  } else {\n    if (commit2.parents[0]) {\n      const newCommit = state.records.commits.get(commit2.parents[0]);\n      upsert(commitArr, commit2, newCommit);\n    }\n  }\n  commitArr = uniqBy(commitArr, (c) => c.id);\n  prettyPrintCommitHistory(commitArr);\n}\n__name(prettyPrintCommitHistory, \"prettyPrintCommitHistory\");\nvar prettyPrint = /* @__PURE__ */ __name(function() {\n  log.debug(state.records.commits);\n  const node = getCommitsArray()[0];\n  prettyPrintCommitHistory([node]);\n}, \"prettyPrint\");\nvar clear2 = /* @__PURE__ */ __name(function() {\n  state.reset();\n  clear();\n}, \"clear\");\nvar getBranchesAsObjArray = /* @__PURE__ */ __name(function() {\n  const branchesArray = [...state.records.branchConfig.values()].map((branchConfig, i) => {\n    if (branchConfig.order !== null && branchConfig.order !== void 0) {\n      return branchConfig;\n    }\n    return {\n      ...branchConfig,\n      order: parseFloat(`0.${i}`)\n    };\n  }).sort((a, b) => (a.order ?? 0) - (b.order ?? 0)).map(({ name }) => ({ name }));\n  return branchesArray;\n}, \"getBranchesAsObjArray\");\nvar getBranches = /* @__PURE__ */ __name(function() {\n  return state.records.branches;\n}, \"getBranches\");\nvar getCommits = /* @__PURE__ */ __name(function() {\n  return state.records.commits;\n}, \"getCommits\");\nvar getCommitsArray = /* @__PURE__ */ __name(function() {\n  const commitArr = [...state.records.commits.values()];\n  commitArr.forEach(function(o) {\n    log.debug(o.id);\n  });\n  commitArr.sort((a, b) => a.seq - b.seq);\n  return commitArr;\n}, \"getCommitsArray\");\nvar getCurrentBranch = /* @__PURE__ */ __name(function() {\n  return state.records.currBranch;\n}, \"getCurrentBranch\");\nvar getDirection = /* @__PURE__ */ __name(function() {\n  return state.records.direction;\n}, \"getDirection\");\nvar getHead = /* @__PURE__ */ __name(function() {\n  return state.records.head;\n}, \"getHead\");\nvar db = {\n  commitType,\n  getConfig: getConfig3,\n  setDirection,\n  setOptions,\n  getOptions,\n  commit,\n  branch,\n  merge,\n  cherryPick,\n  checkout,\n  //reset,\n  prettyPrint,\n  clear: clear2,\n  getBranchesAsObjArray,\n  getBranches,\n  getCommits,\n  getCommitsArray,\n  getCurrentBranch,\n  getDirection,\n  getHead,\n  setAccTitle,\n  getAccTitle,\n  getAccDescription,\n  setAccDescription,\n  setDiagramTitle,\n  getDiagramTitle\n};\n\n// src/diagrams/git/gitGraphParser.ts\nvar populate = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  if (ast.dir) {\n    db2.setDirection(ast.dir);\n  }\n  for (const statement of ast.statements) {\n    parseStatement(statement, db2);\n  }\n}, \"populate\");\nvar parseStatement = /* @__PURE__ */ __name((statement, db2) => {\n  const parsers = {\n    Commit: /* @__PURE__ */ __name((stmt) => db2.commit(parseCommit(stmt)), \"Commit\"),\n    Branch: /* @__PURE__ */ __name((stmt) => db2.branch(parseBranch(stmt)), \"Branch\"),\n    Merge: /* @__PURE__ */ __name((stmt) => db2.merge(parseMerge(stmt)), \"Merge\"),\n    Checkout: /* @__PURE__ */ __name((stmt) => db2.checkout(parseCheckout(stmt)), \"Checkout\"),\n    CherryPicking: /* @__PURE__ */ __name((stmt) => db2.cherryPick(parseCherryPicking(stmt)), \"CherryPicking\")\n  };\n  const parser2 = parsers[statement.$type];\n  if (parser2) {\n    parser2(statement);\n  } else {\n    log.error(`Unknown statement type: ${statement.$type}`);\n  }\n}, \"parseStatement\");\nvar parseCommit = /* @__PURE__ */ __name((commit2) => {\n  const commitDB = {\n    id: commit2.id,\n    msg: commit2.message ?? \"\",\n    type: commit2.type !== void 0 ? commitType[commit2.type] : commitType.NORMAL,\n    tags: commit2.tags ?? void 0\n  };\n  return commitDB;\n}, \"parseCommit\");\nvar parseBranch = /* @__PURE__ */ __name((branch2) => {\n  const branchDB = {\n    name: branch2.name,\n    order: branch2.order ?? 0\n  };\n  return branchDB;\n}, \"parseBranch\");\nvar parseMerge = /* @__PURE__ */ __name((merge2) => {\n  const mergeDB = {\n    branch: merge2.branch,\n    id: merge2.id ?? \"\",\n    type: merge2.type !== void 0 ? commitType[merge2.type] : void 0,\n    tags: merge2.tags ?? void 0\n  };\n  return mergeDB;\n}, \"parseMerge\");\nvar parseCheckout = /* @__PURE__ */ __name((checkout2) => {\n  const branch2 = checkout2.branch;\n  return branch2;\n}, \"parseCheckout\");\nvar parseCherryPicking = /* @__PURE__ */ __name((cherryPicking) => {\n  const cherryPickDB = {\n    id: cherryPicking.id,\n    targetId: \"\",\n    tags: cherryPicking.tags?.length === 0 ? void 0 : cherryPicking.tags,\n    parent: cherryPicking.parent\n  };\n  return cherryPickDB;\n}, \"parseCherryPicking\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"gitGraph\", input);\n    log.debug(ast);\n    populate(ast, db);\n  }, \"parse\")\n};\nif (void 0) {\n  const { it, expect, describe } = void 0;\n  const mockDB = {\n    commitType,\n    setDirection: vi.fn(),\n    commit: vi.fn(),\n    branch: vi.fn(),\n    merge: vi.fn(),\n    cherryPick: vi.fn(),\n    checkout: vi.fn()\n  };\n  describe(\"GitGraph Parser\", () => {\n    it(\"should parse a commit statement\", () => {\n      const commit2 = {\n        $type: \"Commit\",\n        id: \"1\",\n        message: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(commit2, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a branch statement\", () => {\n      const branch2 = {\n        $type: \"Branch\",\n        name: \"newBranch\",\n        order: 1\n      };\n      parseStatement(branch2, mockDB);\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\n    });\n    it(\"should parse a checkout statement\", () => {\n      const checkout2 = {\n        $type: \"Checkout\",\n        branch: \"newBranch\"\n      };\n      parseStatement(checkout2, mockDB);\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n    it(\"should parse a merge statement\", () => {\n      const merge2 = {\n        $type: \"Merge\",\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: \"NORMAL\"\n      };\n      parseStatement(merge2, mockDB);\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n    });\n    it(\"should parse a cherry picking statement\", () => {\n      const cherryPick2 = {\n        $type: \"CherryPicking\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        parent: \"2\"\n      };\n      parseStatement(cherryPick2, mockDB);\n      expect(mockDB.cherryPick).toHaveBeenCalledWith({\n        id: \"1\",\n        targetId: \"\",\n        parent: \"2\",\n        tags: [\"tag1\", \"tag2\"]\n      });\n    });\n    it(\"should parse a langium generated gitGraph ast\", () => {\n      const dummy = {\n        $type: \"GitGraph\",\n        statements: []\n      };\n      const gitGraphAst = {\n        $type: \"GitGraph\",\n        statements: [\n          {\n            $container: dummy,\n            $type: \"Commit\",\n            id: \"1\",\n            message: \"test\",\n            tags: [\"tag1\", \"tag2\"],\n            type: \"NORMAL\"\n          },\n          {\n            $container: dummy,\n            $type: \"Branch\",\n            name: \"newBranch\",\n            order: 1\n          },\n          {\n            $container: dummy,\n            $type: \"Merge\",\n            branch: \"newBranch\",\n            id: \"1\",\n            tags: [\"tag1\", \"tag2\"],\n            type: \"NORMAL\"\n          },\n          {\n            $container: dummy,\n            $type: \"Checkout\",\n            branch: \"newBranch\"\n          },\n          {\n            $container: dummy,\n            $type: \"CherryPicking\",\n            id: \"1\",\n            tags: [\"tag1\", \"tag2\"],\n            parent: \"2\"\n          }\n        ]\n      };\n      populate(gitGraphAst, mockDB);\n      expect(mockDB.commit).toHaveBeenCalledWith({\n        id: \"1\",\n        msg: \"test\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.branch).toHaveBeenCalledWith({ name: \"newBranch\", order: 1 });\n      expect(mockDB.merge).toHaveBeenCalledWith({\n        branch: \"newBranch\",\n        id: \"1\",\n        tags: [\"tag1\", \"tag2\"],\n        type: 0\n      });\n      expect(mockDB.checkout).toHaveBeenCalledWith(\"newBranch\");\n    });\n  });\n}\n\n// src/diagrams/git/gitGraphRenderer.ts\nimport { select } from \"d3\";\nvar DEFAULT_CONFIG = getConfig2();\nvar DEFAULT_GITGRAPH_CONFIG2 = DEFAULT_CONFIG?.gitGraph;\nvar LAYOUT_OFFSET = 10;\nvar COMMIT_STEP = 40;\nvar PX = 4;\nvar PY = 2;\nvar THEME_COLOR_LIMIT = 8;\nvar branchPos = /* @__PURE__ */ new Map();\nvar commitPos = /* @__PURE__ */ new Map();\nvar defaultPos = 30;\nvar allCommitsDict = /* @__PURE__ */ new Map();\nvar lanes = [];\nvar maxPos = 0;\nvar dir = \"LR\";\nvar clear3 = /* @__PURE__ */ __name(() => {\n  branchPos.clear();\n  commitPos.clear();\n  allCommitsDict.clear();\n  maxPos = 0;\n  lanes = [];\n  dir = \"LR\";\n}, \"clear\");\nvar drawText = /* @__PURE__ */ __name((txt) => {\n  const svgLabel = document.createElementNS(\"http://www.w3.org/2000/svg\", \"text\");\n  const rows = typeof txt === \"string\" ? txt.split(/\\\\n|\\n|<br\\s*\\/?>/gi) : txt;\n  rows.forEach((row) => {\n    const tspan = document.createElementNS(\"http://www.w3.org/2000/svg\", \"tspan\");\n    tspan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\", \"preserve\");\n    tspan.setAttribute(\"dy\", \"1em\");\n    tspan.setAttribute(\"x\", \"0\");\n    tspan.setAttribute(\"class\", \"row\");\n    tspan.textContent = row.trim();\n    svgLabel.appendChild(tspan);\n  });\n  return svgLabel;\n}, \"drawText\");\nvar findClosestParent = /* @__PURE__ */ __name((parents) => {\n  let closestParent;\n  let comparisonFunc;\n  let targetPosition;\n  if (dir === \"BT\") {\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a <= b, \"comparisonFunc\");\n    targetPosition = Infinity;\n  } else {\n    comparisonFunc = /* @__PURE__ */ __name((a, b) => a >= b, \"comparisonFunc\");\n    targetPosition = 0;\n  }\n  parents.forEach((parent) => {\n    const parentPosition = dir === \"TB\" || dir == \"BT\" ? commitPos.get(parent)?.y : commitPos.get(parent)?.x;\n    if (parentPosition !== void 0 && comparisonFunc(parentPosition, targetPosition)) {\n      closestParent = parent;\n      targetPosition = parentPosition;\n    }\n  });\n  return closestParent;\n}, \"findClosestParent\");\nvar findClosestParentBT = /* @__PURE__ */ __name((parents) => {\n  let closestParent = \"\";\n  let maxPosition = Infinity;\n  parents.forEach((parent) => {\n    const parentPosition = commitPos.get(parent).y;\n    if (parentPosition <= maxPosition) {\n      closestParent = parent;\n      maxPosition = parentPosition;\n    }\n  });\n  return closestParent || void 0;\n}, \"findClosestParentBT\");\nvar setParallelBTPos = /* @__PURE__ */ __name((sortedKeys, commits, defaultPos2) => {\n  let curPos = defaultPos2;\n  let maxPosition = defaultPos2;\n  const roots = [];\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (commit2.parents.length) {\n      curPos = calculateCommitPosition(commit2);\n      maxPosition = Math.max(curPos, maxPosition);\n    } else {\n      roots.push(commit2);\n    }\n    setCommitPosition(commit2, curPos);\n  });\n  curPos = maxPosition;\n  roots.forEach((commit2) => {\n    setRootPosition(commit2, curPos, defaultPos2);\n  });\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (commit2?.parents.length) {\n      const closestParent = findClosestParentBT(commit2.parents);\n      curPos = commitPos.get(closestParent).y - COMMIT_STEP;\n      if (curPos <= maxPosition) {\n        maxPosition = curPos;\n      }\n      const x = branchPos.get(commit2.branch).pos;\n      const y = curPos - LAYOUT_OFFSET;\n      commitPos.set(commit2.id, { x, y });\n    }\n  });\n}, \"setParallelBTPos\");\nvar findClosestParentPos = /* @__PURE__ */ __name((commit2) => {\n  const closestParent = findClosestParent(commit2.parents.filter((p) => p !== null));\n  if (!closestParent) {\n    throw new Error(`Closest parent not found for commit ${commit2.id}`);\n  }\n  const closestParentPos = commitPos.get(closestParent)?.y;\n  if (closestParentPos === void 0) {\n    throw new Error(`Closest parent position not found for commit ${commit2.id}`);\n  }\n  return closestParentPos;\n}, \"findClosestParentPos\");\nvar calculateCommitPosition = /* @__PURE__ */ __name((commit2) => {\n  const closestParentPos = findClosestParentPos(commit2);\n  return closestParentPos + COMMIT_STEP;\n}, \"calculateCommitPosition\");\nvar setCommitPosition = /* @__PURE__ */ __name((commit2, curPos) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const x = branch2.pos;\n  const y = curPos + LAYOUT_OFFSET;\n  commitPos.set(commit2.id, { x, y });\n  return { x, y };\n}, \"setCommitPosition\");\nvar setRootPosition = /* @__PURE__ */ __name((commit2, curPos, defaultPos2) => {\n  const branch2 = branchPos.get(commit2.branch);\n  if (!branch2) {\n    throw new Error(`Branch not found for commit ${commit2.id}`);\n  }\n  const y = curPos + defaultPos2;\n  const x = branch2.pos;\n  commitPos.set(commit2.id, { x, y });\n}, \"setRootPosition\");\nvar drawCommitBullet = /* @__PURE__ */ __name((gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType) => {\n  if (commitSymbolType === commitType.HIGHLIGHT) {\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 10).attr(\"y\", commitPosition.y - 10).attr(\"width\", 20).attr(\"height\", 20).attr(\n      \"class\",\n      `commit ${commit2.id} commit-highlight${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-outer`\n    );\n    gBullets.append(\"rect\").attr(\"x\", commitPosition.x - 6).attr(\"y\", commitPosition.y - 6).attr(\"width\", 12).attr(\"height\", 12).attr(\n      \"class\",\n      `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT} ${typeClass}-inner`\n    );\n  } else if (commitSymbolType === commitType.CHERRY_PICK) {\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x).attr(\"cy\", commitPosition.y).attr(\"r\", 10).attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x - 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"circle\").attr(\"cx\", commitPosition.x + 3).attr(\"cy\", commitPosition.y + 2).attr(\"r\", 2.75).attr(\"fill\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x + 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n    gBullets.append(\"line\").attr(\"x1\", commitPosition.x - 3).attr(\"y1\", commitPosition.y + 1).attr(\"x2\", commitPosition.x).attr(\"y2\", commitPosition.y - 5).attr(\"stroke\", \"#fff\").attr(\"class\", `commit ${commit2.id} ${typeClass}`);\n  } else {\n    const circle = gBullets.append(\"circle\");\n    circle.attr(\"cx\", commitPosition.x);\n    circle.attr(\"cy\", commitPosition.y);\n    circle.attr(\"r\", commit2.type === commitType.MERGE ? 9 : 10);\n    circle.attr(\"class\", `commit ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    if (commitSymbolType === commitType.MERGE) {\n      const circle2 = gBullets.append(\"circle\");\n      circle2.attr(\"cx\", commitPosition.x);\n      circle2.attr(\"cy\", commitPosition.y);\n      circle2.attr(\"r\", 6);\n      circle2.attr(\n        \"class\",\n        `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`\n      );\n    }\n    if (commitSymbolType === commitType.REVERSE) {\n      const cross = gBullets.append(\"path\");\n      cross.attr(\n        \"d\",\n        `M ${commitPosition.x - 5},${commitPosition.y - 5}L${commitPosition.x + 5},${commitPosition.y + 5}M${commitPosition.x - 5},${commitPosition.y + 5}L${commitPosition.x + 5},${commitPosition.y - 5}`\n      ).attr(\"class\", `commit ${typeClass} ${commit2.id} commit${branchIndex % THEME_COLOR_LIMIT}`);\n    }\n  }\n}, \"drawCommitBullet\");\nvar drawCommitLabel = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.type !== commitType.CHERRY_PICK && (commit2.customId && commit2.type === commitType.MERGE || commit2.type !== commitType.MERGE) && DEFAULT_GITGRAPH_CONFIG2?.showCommitLabel) {\n    const wrapper = gLabels.append(\"g\");\n    const labelBkg = wrapper.insert(\"rect\").attr(\"class\", \"commit-label-bkg\");\n    const text = wrapper.append(\"text\").attr(\"x\", pos).attr(\"y\", commitPosition.y + 25).attr(\"class\", \"commit-label\").text(commit2.id);\n    const bbox = text.node()?.getBBox();\n    if (bbox) {\n      labelBkg.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2 - PY).attr(\"y\", commitPosition.y + 13.5).attr(\"width\", bbox.width + 2 * PY).attr(\"height\", bbox.height + 2 * PY);\n      if (dir === \"TB\" || dir === \"BT\") {\n        labelBkg.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX + 5)).attr(\"y\", commitPosition.y - 12);\n        text.attr(\"x\", commitPosition.x - (bbox.width + 4 * PX)).attr(\"y\", commitPosition.y + bbox.height - 12);\n      } else {\n        text.attr(\"x\", commitPosition.posWithOffset - bbox.width / 2);\n      }\n      if (DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel) {\n        if (dir === \"TB\" || dir === \"BT\") {\n          text.attr(\n            \"transform\",\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\n          );\n          labelBkg.attr(\n            \"transform\",\n            \"rotate(-45, \" + commitPosition.x + \", \" + commitPosition.y + \")\"\n          );\n        } else {\n          const r_x = -7.5 - (bbox.width + 10) / 25 * 9.5;\n          const r_y = 10 + bbox.width / 25 * 8.5;\n          wrapper.attr(\n            \"transform\",\n            \"translate(\" + r_x + \", \" + r_y + \") rotate(-45, \" + pos + \", \" + commitPosition.y + \")\"\n          );\n        }\n      }\n    }\n  }\n}, \"drawCommitLabel\");\nvar drawCommitTags = /* @__PURE__ */ __name((gLabels, commit2, commitPosition, pos) => {\n  if (commit2.tags.length > 0) {\n    let yOffset = 0;\n    let maxTagBboxWidth = 0;\n    let maxTagBboxHeight = 0;\n    const tagElements = [];\n    for (const tagValue of commit2.tags.reverse()) {\n      const rect = gLabels.insert(\"polygon\");\n      const hole = gLabels.append(\"circle\");\n      const tag = gLabels.append(\"text\").attr(\"y\", commitPosition.y - 16 - yOffset).attr(\"class\", \"tag-label\").text(tagValue);\n      const tagBbox = tag.node()?.getBBox();\n      if (!tagBbox) {\n        throw new Error(\"Tag bbox not found\");\n      }\n      maxTagBboxWidth = Math.max(maxTagBboxWidth, tagBbox.width);\n      maxTagBboxHeight = Math.max(maxTagBboxHeight, tagBbox.height);\n      tag.attr(\"x\", commitPosition.posWithOffset - tagBbox.width / 2);\n      tagElements.push({\n        tag,\n        hole,\n        rect,\n        yOffset\n      });\n      yOffset += 20;\n    }\n    for (const { tag, hole, rect, yOffset: yOffset2 } of tagElements) {\n      const h2 = maxTagBboxHeight / 2;\n      const ly = commitPosition.y - 19.2 - yOffset2;\n      rect.attr(\"class\", \"tag-label-bkg\").attr(\n        \"points\",\n        `\n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly + PY}  \n      ${pos - maxTagBboxWidth / 2 - PX / 2},${ly - PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly - h2 - PY}\n      ${commitPosition.posWithOffset + maxTagBboxWidth / 2 + PX},${ly + h2 + PY}\n      ${commitPosition.posWithOffset - maxTagBboxWidth / 2 - PX},${ly + h2 + PY}`\n      );\n      hole.attr(\"cy\", ly).attr(\"cx\", pos - maxTagBboxWidth / 2 + PX / 2).attr(\"r\", 1.5).attr(\"class\", \"tag-hole\");\n      if (dir === \"TB\" || dir === \"BT\") {\n        const yOrigin = pos + yOffset2;\n        rect.attr(\"class\", \"tag-label-bkg\").attr(\n          \"points\",\n          `\n        ${commitPosition.x},${yOrigin + 2}\n        ${commitPosition.x},${yOrigin - 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin - h2 - 2}\n        ${commitPosition.x + LAYOUT_OFFSET + maxTagBboxWidth + 4},${yOrigin + h2 + 2}\n        ${commitPosition.x + LAYOUT_OFFSET},${yOrigin + h2 + 2}`\n        ).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        hole.attr(\"cx\", commitPosition.x + PX / 2).attr(\"cy\", yOrigin).attr(\"transform\", \"translate(12,12) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n        tag.attr(\"x\", commitPosition.x + 5).attr(\"y\", yOrigin + 3).attr(\"transform\", \"translate(14,14) rotate(45, \" + commitPosition.x + \",\" + pos + \")\");\n      }\n    }\n  }\n}, \"drawCommitTags\");\nvar getCommitClassType = /* @__PURE__ */ __name((commit2) => {\n  const commitSymbolType = commit2.customType ?? commit2.type;\n  switch (commitSymbolType) {\n    case commitType.NORMAL:\n      return \"commit-normal\";\n    case commitType.REVERSE:\n      return \"commit-reverse\";\n    case commitType.HIGHLIGHT:\n      return \"commit-highlight\";\n    case commitType.MERGE:\n      return \"commit-merge\";\n    case commitType.CHERRY_PICK:\n      return \"commit-cherry-pick\";\n    default:\n      return \"commit-normal\";\n  }\n}, \"getCommitClassType\");\nvar calculatePosition = /* @__PURE__ */ __name((commit2, dir2, pos, commitPos2) => {\n  const defaultCommitPosition = { x: 0, y: 0 };\n  if (commit2.parents.length > 0) {\n    const closestParent = findClosestParent(commit2.parents);\n    if (closestParent) {\n      const parentPosition = commitPos2.get(closestParent) ?? defaultCommitPosition;\n      if (dir2 === \"TB\") {\n        return parentPosition.y + COMMIT_STEP;\n      } else if (dir2 === \"BT\") {\n        const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n        return currentPosition.y - COMMIT_STEP;\n      } else {\n        return parentPosition.x + COMMIT_STEP;\n      }\n    }\n  } else {\n    if (dir2 === \"TB\") {\n      return defaultPos;\n    } else if (dir2 === \"BT\") {\n      const currentPosition = commitPos2.get(commit2.id) ?? defaultCommitPosition;\n      return currentPosition.y - COMMIT_STEP;\n    } else {\n      return 0;\n    }\n  }\n  return 0;\n}, \"calculatePosition\");\nvar getCommitPosition = /* @__PURE__ */ __name((commit2, pos, isParallelCommits) => {\n  const posWithOffset = dir === \"BT\" && isParallelCommits ? pos : pos + LAYOUT_OFFSET;\n  const y = dir === \"TB\" || dir === \"BT\" ? posWithOffset : branchPos.get(commit2.branch)?.pos;\n  const x = dir === \"TB\" || dir === \"BT\" ? branchPos.get(commit2.branch)?.pos : posWithOffset;\n  if (x === void 0 || y === void 0) {\n    throw new Error(`Position were undefined for commit ${commit2.id}`);\n  }\n  return { x, y, posWithOffset };\n}, \"getCommitPosition\");\nvar drawCommits = /* @__PURE__ */ __name((svg, commits, modifyGraph) => {\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const gBullets = svg.append(\"g\").attr(\"class\", \"commit-bullets\");\n  const gLabels = svg.append(\"g\").attr(\"class\", \"commit-labels\");\n  let pos = dir === \"TB\" || dir === \"BT\" ? defaultPos : 0;\n  const keys = [...commits.keys()];\n  const isParallelCommits = DEFAULT_GITGRAPH_CONFIG2?.parallelCommits ?? false;\n  const sortKeys = /* @__PURE__ */ __name((a, b) => {\n    const seqA = commits.get(a)?.seq;\n    const seqB = commits.get(b)?.seq;\n    return seqA !== void 0 && seqB !== void 0 ? seqA - seqB : 0;\n  }, \"sortKeys\");\n  let sortedKeys = keys.sort(sortKeys);\n  if (dir === \"BT\") {\n    if (isParallelCommits) {\n      setParallelBTPos(sortedKeys, commits, pos);\n    }\n    sortedKeys = sortedKeys.reverse();\n  }\n  sortedKeys.forEach((key) => {\n    const commit2 = commits.get(key);\n    if (!commit2) {\n      throw new Error(`Commit not found for key ${key}`);\n    }\n    if (isParallelCommits) {\n      pos = calculatePosition(commit2, dir, pos, commitPos);\n    }\n    const commitPosition = getCommitPosition(commit2, pos, isParallelCommits);\n    if (modifyGraph) {\n      const typeClass = getCommitClassType(commit2);\n      const commitSymbolType = commit2.customType ?? commit2.type;\n      const branchIndex = branchPos.get(commit2.branch)?.index ?? 0;\n      drawCommitBullet(gBullets, commit2, commitPosition, typeClass, branchIndex, commitSymbolType);\n      drawCommitLabel(gLabels, commit2, commitPosition, pos);\n      drawCommitTags(gLabels, commit2, commitPosition, pos);\n    }\n    if (dir === \"TB\" || dir === \"BT\") {\n      commitPos.set(commit2.id, { x: commitPosition.x, y: commitPosition.posWithOffset });\n    } else {\n      commitPos.set(commit2.id, { x: commitPosition.posWithOffset, y: commitPosition.y });\n    }\n    pos = dir === \"BT\" && isParallelCommits ? pos + COMMIT_STEP : pos + COMMIT_STEP + LAYOUT_OFFSET;\n    if (pos > maxPos) {\n      maxPos = pos;\n    }\n  });\n}, \"drawCommits\");\nvar shouldRerouteArrow = /* @__PURE__ */ __name((commitA, commitB, p1, p2, allCommits) => {\n  const commitBIsFurthest = dir === \"TB\" || dir === \"BT\" ? p1.x < p2.x : p1.y < p2.y;\n  const branchToGetCurve = commitBIsFurthest ? commitB.branch : commitA.branch;\n  const isOnBranchToGetCurve = /* @__PURE__ */ __name((x) => x.branch === branchToGetCurve, \"isOnBranchToGetCurve\");\n  const isBetweenCommits = /* @__PURE__ */ __name((x) => x.seq > commitA.seq && x.seq < commitB.seq, \"isBetweenCommits\");\n  return [...allCommits.values()].some((commitX) => {\n    return isBetweenCommits(commitX) && isOnBranchToGetCurve(commitX);\n  });\n}, \"shouldRerouteArrow\");\nvar findLane = /* @__PURE__ */ __name((y1, y2, depth = 0) => {\n  const candidate = y1 + Math.abs(y1 - y2) / 2;\n  if (depth > 5) {\n    return candidate;\n  }\n  const ok = lanes.every((lane) => Math.abs(lane - candidate) >= 10);\n  if (ok) {\n    lanes.push(candidate);\n    return candidate;\n  }\n  const diff = Math.abs(y1 - y2);\n  return findLane(y1, y2 - diff / 5, depth + 1);\n}, \"findLane\");\nvar drawArrow = /* @__PURE__ */ __name((svg, commitA, commitB, allCommits) => {\n  const p1 = commitPos.get(commitA.id);\n  const p2 = commitPos.get(commitB.id);\n  if (p1 === void 0 || p2 === void 0) {\n    throw new Error(`Commit positions not found for commits ${commitA.id} and ${commitB.id}`);\n  }\n  const arrowNeedsRerouting = shouldRerouteArrow(commitA, commitB, p1, p2, allCommits);\n  let arc = \"\";\n  let arc2 = \"\";\n  let radius = 0;\n  let offset = 0;\n  let colorClassNum = branchPos.get(commitB.branch)?.index;\n  if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n    colorClassNum = branchPos.get(commitA.branch)?.index;\n  }\n  let lineDef;\n  if (arrowNeedsRerouting) {\n    arc = \"A 10 10, 0, 0, 0,\";\n    arc2 = \"A 10 10, 0, 0, 1,\";\n    radius = 10;\n    offset = 10;\n    const lineY = p1.y < p2.y ? findLane(p1.y, p2.y) : findLane(p2.y, p1.y);\n    const lineX = p1.x < p2.x ? findLane(p1.x, p2.x) : findLane(p2.x, p1.x);\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc2} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc} ${lineX} ${p1.y + offset} L ${lineX} ${p2.y - radius} ${arc2} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX - radius} ${p1.y} ${arc} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc2} ${lineX + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${lineX + radius} ${p1.y} ${arc2} ${lineX} ${p1.y - offset} L ${lineX} ${p2.y + radius} ${arc} ${lineX - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY - radius} ${arc} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc2} ${p2.x} ${lineY + offset} L ${p2.x} ${p2.y}`;\n      } else {\n        colorClassNum = branchPos.get(commitA.branch)?.index;\n        lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${lineY + radius} ${arc2} ${p1.x + offset} ${lineY} L ${p2.x - radius} ${lineY} ${arc} ${p2.x} ${lineY - offset} L ${p2.x} ${p2.y}`;\n      }\n    }\n  } else {\n    arc = \"A 20 20, 0, 0, 0,\";\n    arc2 = \"A 20 20, 0, 0, 1,\";\n    radius = 20;\n    offset = 20;\n    if (dir === \"TB\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc2} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x + radius} ${p1.y} ${arc} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else if (dir === \"BT\") {\n      if (p1.x < p2.x) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x > p2.x) {\n        arc = \"A 20 20, 0, 0, 0,\";\n        arc2 = \"A 20 20, 0, 0, 1,\";\n        radius = 20;\n        offset = 20;\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc} ${p1.x - offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.x === p2.x) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    } else {\n      if (p1.y < p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc2} ${p2.x} ${p1.y + offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y - radius} ${arc} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y > p2.y) {\n        if (commitB.type === commitType.MERGE && commitA.id !== commitB.parents[0]) {\n          lineDef = `M ${p1.x} ${p1.y} L ${p2.x - radius} ${p1.y} ${arc} ${p2.x} ${p1.y - offset} L ${p2.x} ${p2.y}`;\n        } else {\n          lineDef = `M ${p1.x} ${p1.y} L ${p1.x} ${p2.y + radius} ${arc2} ${p1.x + offset} ${p2.y} L ${p2.x} ${p2.y}`;\n        }\n      }\n      if (p1.y === p2.y) {\n        lineDef = `M ${p1.x} ${p1.y} L ${p2.x} ${p2.y}`;\n      }\n    }\n  }\n  if (lineDef === void 0) {\n    throw new Error(\"Line definition not found\");\n  }\n  svg.append(\"path\").attr(\"d\", lineDef).attr(\"class\", \"arrow arrow\" + colorClassNum % THEME_COLOR_LIMIT);\n}, \"drawArrow\");\nvar drawArrows = /* @__PURE__ */ __name((svg, commits) => {\n  const gArrows = svg.append(\"g\").attr(\"class\", \"commit-arrows\");\n  [...commits.keys()].forEach((key) => {\n    const commit2 = commits.get(key);\n    if (commit2.parents && commit2.parents.length > 0) {\n      commit2.parents.forEach((parent) => {\n        drawArrow(gArrows, commits.get(parent), commit2, commits);\n      });\n    }\n  });\n}, \"drawArrows\");\nvar drawBranches = /* @__PURE__ */ __name((svg, branches) => {\n  const g = svg.append(\"g\");\n  branches.forEach((branch2, index) => {\n    const adjustIndexForTheme = index % THEME_COLOR_LIMIT;\n    const pos = branchPos.get(branch2.name)?.pos;\n    if (pos === void 0) {\n      throw new Error(`Position not found for branch ${branch2.name}`);\n    }\n    const line = g.append(\"line\");\n    line.attr(\"x1\", 0);\n    line.attr(\"y1\", pos);\n    line.attr(\"x2\", maxPos);\n    line.attr(\"y2\", pos);\n    line.attr(\"class\", \"branch branch\" + adjustIndexForTheme);\n    if (dir === \"TB\") {\n      line.attr(\"y1\", defaultPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", maxPos);\n      line.attr(\"x2\", pos);\n    } else if (dir === \"BT\") {\n      line.attr(\"y1\", maxPos);\n      line.attr(\"x1\", pos);\n      line.attr(\"y2\", defaultPos);\n      line.attr(\"x2\", pos);\n    }\n    lanes.push(pos);\n    const name = branch2.name;\n    const labelElement = drawText(name);\n    const bkg = g.insert(\"rect\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\" + adjustIndexForTheme);\n    label.node().appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    bkg.attr(\"class\", \"branchLabelBkg label\" + adjustIndexForTheme).attr(\"rx\", 4).attr(\"ry\", 4).attr(\"x\", -bbox.width - 4 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)).attr(\"y\", -bbox.height / 2 + 8).attr(\"width\", bbox.width + 18).attr(\"height\", bbox.height + 4);\n    label.attr(\n      \"transform\",\n      \"translate(\" + (-bbox.width - 14 - (DEFAULT_GITGRAPH_CONFIG2?.rotateCommitLabel === true ? 30 : 0)) + \", \" + (pos - bbox.height / 2 - 1) + \")\"\n    );\n    if (dir === \"TB\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", 0);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", 0)\");\n    } else if (dir === \"BT\") {\n      bkg.attr(\"x\", pos - bbox.width / 2 - 10).attr(\"y\", maxPos);\n      label.attr(\"transform\", \"translate(\" + (pos - bbox.width / 2 - 5) + \", \" + maxPos + \")\");\n    } else {\n      bkg.attr(\"transform\", \"translate(-19, \" + (pos - bbox.height / 2) + \")\");\n    }\n  });\n}, \"drawBranches\");\nvar setBranchPosition = /* @__PURE__ */ __name(function(name, pos, index, bbox, rotateCommitLabel) {\n  branchPos.set(name, { pos, index });\n  pos += 50 + (rotateCommitLabel ? 40 : 0) + (dir === \"TB\" || dir === \"BT\" ? bbox.width / 2 : 0);\n  return pos;\n}, \"setBranchPosition\");\nvar draw = /* @__PURE__ */ __name(function(txt, id, ver, diagObj) {\n  clear3();\n  log.debug(\"in gitgraph renderer\", txt + \"\\n\", \"id:\", id, ver);\n  if (!DEFAULT_GITGRAPH_CONFIG2) {\n    throw new Error(\"GitGraph config not found\");\n  }\n  const rotateCommitLabel = DEFAULT_GITGRAPH_CONFIG2.rotateCommitLabel ?? false;\n  const db2 = diagObj.db;\n  allCommitsDict = db2.getCommits();\n  const branches = db2.getBranchesAsObjArray();\n  dir = db2.getDirection();\n  const diagram2 = select(`[id=\"${id}\"]`);\n  let pos = 0;\n  branches.forEach((branch2, index) => {\n    const labelElement = drawText(branch2.name);\n    const g = diagram2.append(\"g\");\n    const branchLabel = g.insert(\"g\").attr(\"class\", \"branchLabel\");\n    const label = branchLabel.insert(\"g\").attr(\"class\", \"label branch-label\");\n    label.node()?.appendChild(labelElement);\n    const bbox = labelElement.getBBox();\n    pos = setBranchPosition(branch2.name, pos, index, bbox, rotateCommitLabel);\n    label.remove();\n    branchLabel.remove();\n    g.remove();\n  });\n  drawCommits(diagram2, allCommitsDict, false);\n  if (DEFAULT_GITGRAPH_CONFIG2.showBranches) {\n    drawBranches(diagram2, branches);\n  }\n  drawArrows(diagram2, allCommitsDict);\n  drawCommits(diagram2, allCommitsDict, true);\n  utils_default.insertTitle(\n    diagram2,\n    \"gitTitleText\",\n    DEFAULT_GITGRAPH_CONFIG2.titleTopMargin ?? 0,\n    db2.getDiagramTitle()\n  );\n  setupGraphViewbox(\n    void 0,\n    diagram2,\n    DEFAULT_GITGRAPH_CONFIG2.diagramPadding,\n    DEFAULT_GITGRAPH_CONFIG2.useMaxWidth\n  );\n}, \"draw\");\nvar gitGraphRenderer_default = {\n  draw\n};\nif (void 0) {\n  const { it, expect, describe } = void 0;\n  describe(\"drawText\", () => {\n    it(\"should drawText\", () => {\n      const svgLabel = drawText(\"main\");\n      expect(svgLabel).toBeDefined();\n      expect(svgLabel.children[0].innerHTML).toBe(\"main\");\n    });\n  });\n  describe(\"branchPosition\", () => {\n    const bbox = {\n      x: 0,\n      y: 0,\n      width: 10,\n      height: 10,\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      toJSON: /* @__PURE__ */ __name(() => \"\", \"toJSON\")\n    };\n    it(\"should setBranchPositions LR with two branches\", () => {\n      dir = \"LR\";\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(90);\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(180);\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\n    });\n    it(\"should setBranchPositions TB with two branches\", () => {\n      dir = \"TB\";\n      bbox.width = 34.9921875;\n      const pos = setBranchPosition(\"main\", 0, 0, bbox, true);\n      expect(pos).toBe(107.49609375);\n      expect(branchPos.get(\"main\")).toEqual({ pos: 0, index: 0 });\n      bbox.width = 56.421875;\n      const posNext = setBranchPosition(\"develop\", pos, 1, bbox, true);\n      expect(posNext).toBe(225.70703125);\n      expect(branchPos.get(\"develop\")).toEqual({ pos, index: 1 });\n    });\n  });\n  describe(\"commitPosition\", () => {\n    const commits = /* @__PURE__ */ new Map([\n      [\n        \"commitZero\",\n        {\n          id: \"ZERO\",\n          message: \"\",\n          seq: 0,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"commitA\",\n        {\n          id: \"A\",\n          message: \"\",\n          seq: 1,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"ZERO\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"commitB\",\n        {\n          id: \"B\",\n          message: \"\",\n          seq: 2,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"A\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"commitM\",\n        {\n          id: \"M\",\n          message: \"merged branch feature into main\",\n          seq: 3,\n          type: commitType.MERGE,\n          tags: [],\n          parents: [\"ZERO\", \"B\"],\n          branch: \"main\",\n          customId: true\n        }\n      ],\n      [\n        \"commitC\",\n        {\n          id: \"C\",\n          message: \"\",\n          seq: 4,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"ZERO\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commit5_8928ea0\",\n        {\n          id: \"5-8928ea0\",\n          message: \"cherry-picked [object Object] into release\",\n          seq: 5,\n          type: commitType.CHERRY_PICK,\n          tags: [],\n          parents: [\"C\", \"M\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commitD\",\n        {\n          id: \"D\",\n          message: \"\",\n          seq: 6,\n          type: commitType.NORMAL,\n          tags: [],\n          parents: [\"5-8928ea0\"],\n          branch: \"release\"\n        }\n      ],\n      [\n        \"commit7_ed848ba\",\n        {\n          id: \"7-ed848ba\",\n          message: \"cherry-picked [object Object] into release\",\n          seq: 7,\n          type: commitType.CHERRY_PICK,\n          tags: [],\n          parents: [\"D\", \"M\"],\n          branch: \"release\"\n        }\n      ]\n    ]);\n    let pos = 0;\n    branchPos.set(\"main\", { pos: 0, index: 0 });\n    branchPos.set(\"feature\", { pos: 107.49609375, index: 1 });\n    branchPos.set(\"release\", { pos: 224.03515625, index: 2 });\n    describe(\"TB\", () => {\n      pos = 30;\n      dir = \"TB\";\n      const expectedCommitPositionTB = /* @__PURE__ */ new Map([\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos, false);\n          expect(position).toEqual(expectedCommitPositionTB.get(key));\n          pos += 50;\n        });\n      });\n    });\n    describe(\"LR\", () => {\n      let pos2 = 30;\n      dir = \"LR\";\n      const expectedCommitPositionLR = /* @__PURE__ */ new Map([\n        [\"commitZero\", { x: 0, y: 40, posWithOffset: 40 }],\n        [\"commitA\", { x: 107.49609375, y: 90, posWithOffset: 90 }],\n        [\"commitB\", { x: 107.49609375, y: 140, posWithOffset: 140 }],\n        [\"commitM\", { x: 0, y: 190, posWithOffset: 190 }],\n        [\"commitC\", { x: 224.03515625, y: 240, posWithOffset: 240 }],\n        [\"commit5_8928ea0\", { x: 224.03515625, y: 290, posWithOffset: 290 }],\n        [\"commitD\", { x: 224.03515625, y: 340, posWithOffset: 340 }],\n        [\"commit7_ed848ba\", { x: 224.03515625, y: 390, posWithOffset: 390 }]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct position for commit ${key}`, () => {\n          const position = getCommitPosition(commit2, pos2, false);\n          expect(position).toEqual(expectedCommitPositionLR.get(key));\n          pos2 += 50;\n        });\n      });\n    });\n    describe(\"getCommitClassType\", () => {\n      const expectedCommitClassType = /* @__PURE__ */ new Map([\n        [\"commitZero\", \"commit-normal\"],\n        [\"commitA\", \"commit-normal\"],\n        [\"commitB\", \"commit-normal\"],\n        [\"commitM\", \"commit-merge\"],\n        [\"commitC\", \"commit-normal\"],\n        [\"commit5_8928ea0\", \"commit-cherry-pick\"],\n        [\"commitD\", \"commit-normal\"],\n        [\"commit7_ed848ba\", \"commit-cherry-pick\"]\n      ]);\n      commits.forEach((commit2, key) => {\n        it(`should give the correct class type for commit ${key}`, () => {\n          const classType = getCommitClassType(commit2);\n          expect(classType).toBe(expectedCommitClassType.get(key));\n        });\n      });\n    });\n  });\n  describe(\"building BT parallel commit diagram\", () => {\n    const commits = /* @__PURE__ */ new Map([\n      [\n        \"1-abcdefg\",\n        {\n          id: \"1-abcdefg\",\n          message: \"\",\n          seq: 0,\n          type: 0,\n          tags: [],\n          parents: [],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"2-abcdefg\",\n        {\n          id: \"2-abcdefg\",\n          message: \"\",\n          seq: 1,\n          type: 0,\n          tags: [],\n          parents: [\"1-abcdefg\"],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"3-abcdefg\",\n        {\n          id: \"3-abcdefg\",\n          message: \"\",\n          seq: 2,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"develop\"\n        }\n      ],\n      [\n        \"4-abcdefg\",\n        {\n          id: \"4-abcdefg\",\n          message: \"\",\n          seq: 3,\n          type: 0,\n          tags: [],\n          parents: [\"3-abcdefg\"],\n          branch: \"develop\"\n        }\n      ],\n      [\n        \"5-abcdefg\",\n        {\n          id: \"5-abcdefg\",\n          message: \"\",\n          seq: 4,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"6-abcdefg\",\n        {\n          id: \"6-abcdefg\",\n          message: \"\",\n          seq: 5,\n          type: 0,\n          tags: [],\n          parents: [\"5-abcdefg\"],\n          branch: \"feature\"\n        }\n      ],\n      [\n        \"7-abcdefg\",\n        {\n          id: \"7-abcdefg\",\n          message: \"\",\n          seq: 6,\n          type: 0,\n          tags: [],\n          parents: [\"2-abcdefg\"],\n          branch: \"main\"\n        }\n      ],\n      [\n        \"8-abcdefg\",\n        {\n          id: \"8-abcdefg\",\n          message: \"\",\n          seq: 7,\n          type: 0,\n          tags: [],\n          parents: [\"7-abcdefg\"],\n          branch: \"main\"\n        }\n      ]\n    ]);\n    const expectedCommitPosition = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", { x: 0, y: 40 }],\n      [\"2-abcdefg\", { x: 0, y: 90 }],\n      [\"3-abcdefg\", { x: 107.49609375, y: 140 }],\n      [\"4-abcdefg\", { x: 107.49609375, y: 190 }],\n      [\"5-abcdefg\", { x: 225.70703125, y: 140 }],\n      [\"6-abcdefg\", { x: 225.70703125, y: 190 }],\n      [\"7-abcdefg\", { x: 0, y: 140 }],\n      [\"8-abcdefg\", { x: 0, y: 190 }]\n    ]);\n    const expectedCommitPositionAfterParallel = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", { x: 0, y: 210 }],\n      [\"2-abcdefg\", { x: 0, y: 160 }],\n      [\"3-abcdefg\", { x: 107.49609375, y: 110 }],\n      [\"4-abcdefg\", { x: 107.49609375, y: 60 }],\n      [\"5-abcdefg\", { x: 225.70703125, y: 110 }],\n      [\"6-abcdefg\", { x: 225.70703125, y: 60 }],\n      [\"7-abcdefg\", { x: 0, y: 110 }],\n      [\"8-abcdefg\", { x: 0, y: 60 }]\n    ]);\n    const expectedCommitCurrentPosition = /* @__PURE__ */ new Map([\n      [\"1-abcdefg\", 30],\n      [\"2-abcdefg\", 80],\n      [\"3-abcdefg\", 130],\n      [\"4-abcdefg\", 180],\n      [\"5-abcdefg\", 130],\n      [\"6-abcdefg\", 180],\n      [\"7-abcdefg\", 130],\n      [\"8-abcdefg\", 180]\n    ]);\n    const sortedKeys = [...expectedCommitPosition.keys()];\n    it(\"should get the correct commit position and current position\", () => {\n      dir = \"BT\";\n      let curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", { pos: 0, index: 0 });\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\n      DEFAULT_GITGRAPH_CONFIG2.parallelCommits = true;\n      commits.forEach((commit2, key) => {\n        if (commit2.parents.length > 0) {\n          curPos = calculateCommitPosition(commit2);\n        }\n        const position = setCommitPosition(commit2, curPos);\n        expect(position).toEqual(expectedCommitPosition.get(key));\n        expect(curPos).toEqual(expectedCommitCurrentPosition.get(key));\n      });\n    });\n    it(\"should get the correct commit position after parallel commits\", () => {\n      commitPos.clear();\n      branchPos.clear();\n      dir = \"BT\";\n      const curPos = 30;\n      commitPos.clear();\n      branchPos.clear();\n      branchPos.set(\"main\", { pos: 0, index: 0 });\n      branchPos.set(\"develop\", { pos: 107.49609375, index: 1 });\n      branchPos.set(\"feature\", { pos: 225.70703125, index: 2 });\n      setParallelBTPos(sortedKeys, commits, curPos);\n      sortedKeys.forEach((commit2) => {\n        const position = commitPos.get(commit2);\n        expect(position).toEqual(expectedCommitPositionAfterParallel.get(commit2));\n      });\n    });\n  });\n  DEFAULT_GITGRAPH_CONFIG2.parallelCommits = false;\n  it(\"add\", () => {\n    commitPos.set(\"parent1\", { x: 1, y: 1 });\n    commitPos.set(\"parent2\", { x: 2, y: 2 });\n    commitPos.set(\"parent3\", { x: 3, y: 3 });\n    dir = \"LR\";\n    const parents = [\"parent1\", \"parent2\", \"parent3\"];\n    const closestParent = findClosestParent(parents);\n    expect(closestParent).toBe(\"parent3\");\n    commitPos.clear();\n  });\n}\n\n// src/diagrams/git/styles.js\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .commit-id,\n  .commit-msg,\n  .branch-label {\n    fill: lightgrey;\n    color: lightgrey;\n    font-family: 'trebuchet ms', verdana, arial, sans-serif;\n    font-family: var(--mermaid-font-family);\n  }\n  ${[0, 1, 2, 3, 4, 5, 6, 7].map(\n  (i) => `\n        .branch-label${i} { fill: ${options[\"gitBranchLabel\" + i]}; }\n        .commit${i} { stroke: ${options[\"git\" + i]}; fill: ${options[\"git\" + i]}; }\n        .commit-highlight${i} { stroke: ${options[\"gitInv\" + i]}; fill: ${options[\"gitInv\" + i]}; }\n        .label${i}  { fill: ${options[\"git\" + i]}; }\n        .arrow${i} { stroke: ${options[\"git\" + i]}; }\n        `\n).join(\"\\n\")}\n\n  .branch {\n    stroke-width: 1;\n    stroke: ${options.lineColor};\n    stroke-dasharray: 2;\n  }\n  .commit-label { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelColor};}\n  .commit-label-bkg { font-size: ${options.commitLabelFontSize}; fill: ${options.commitLabelBackground}; opacity: 0.5; }\n  .tag-label { font-size: ${options.tagLabelFontSize}; fill: ${options.tagLabelColor};}\n  .tag-label-bkg { fill: ${options.tagLabelBackground}; stroke: ${options.tagLabelBorder}; }\n  .tag-hole { fill: ${options.textColor}; }\n\n  .commit-merge {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n  .commit-reverse {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n    stroke-width: 3;\n  }\n  .commit-highlight-outer {\n  }\n  .commit-highlight-inner {\n    stroke: ${options.primaryColor};\n    fill: ${options.primaryColor};\n  }\n\n  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}\n  .gitTitleText {\n    text-anchor: middle;\n    font-size: 18px;\n    fill: ${options.textColor};\n  }\n`, \"getStyles\");\nvar styles_default = getStyles;\n\n// src/diagrams/git/gitGraphDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer: gitGraphRenderer_default,\n  styles: styles_default\n};\nexport {\n  diagram\n};\n"],"mappings":";;;;;;;AAAA,SACEA,gBAAgB,QACX,sBAAsB;AAC7B,SACEC,eAAe,QACV,sBAAsB;AAC7B,SACEC,aAAa,EACbC,MAAM,EACNC,aAAa,QACR,sBAAsB;AAC7B,SACEC,MAAM,EACNC,KAAK,EACLC,cAAc,EACdC,qBAAqB,EACrBC,iBAAiB,EACjBC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,eAAe,EACfC,GAAG,EACHC,iBAAiB,EACjBC,WAAW,EACXC,eAAe,EACfC,kBAAkB,IAAIC,iBAAiB,QAClC,sBAAsB;;AAE7B;AACA,SAASC,KAAK,QAAQ,oBAAoB;;AAE1C;AACA,IAAIC,UAAU,GAAG;EACfC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,CAAC;EACVC,SAAS,EAAE,CAAC;EACZC,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,IAAIC,uBAAuB,GAAGnB,qBAAqB,CAACoB,QAAQ;AAC5D,IAAIC,UAAU,GAAG,eAAgBxB,MAAM,CAAC,MAAM;EAC5C,MAAMyB,MAAM,GAAG5B,aAAa,CAAC;IAC3B,GAAGyB,uBAAuB;IAC1B,GAAGhB,SAAS,CAAC,CAAC,CAACiB;EACjB,CAAC,CAAC;EACF,OAAOE,MAAM;AACf,CAAC,EAAE,WAAW,CAAC;AACf,IAAIC,KAAK,GAAG,IAAI9B,eAAe,CAAC,MAAM;EACpC,MAAM6B,MAAM,GAAGD,UAAU,CAAC,CAAC;EAC3B,MAAMG,cAAc,GAAGF,MAAM,CAACE,cAAc;EAC5C,MAAMC,eAAe,GAAGH,MAAM,CAACG,eAAe;EAC9C,OAAO;IACLD,cAAc;IACdE,OAAO,EAAE,eAAgB,IAAIC,GAAG,CAAC,CAAC;IAClCC,IAAI,EAAE,IAAI;IACVC,YAAY,EAAE,eAAgB,IAAIF,GAAG,CAAC,CAAC,CAACH,cAAc,EAAE;MAAEM,IAAI,EAAEN,cAAc;MAAEO,KAAK,EAAEN;IAAgB,CAAC,CAAC,CAAC,CAAC;IAC3GO,QAAQ,EAAE,eAAgB,IAAIL,GAAG,CAAC,CAAC,CAACH,cAAc,EAAE,IAAI,CAAC,CAAC,CAAC;IAC3DS,UAAU,EAAET,cAAc;IAC1BU,SAAS,EAAE,IAAI;IACfC,GAAG,EAAE,CAAC;IACNC,OAAO,EAAE,CAAC;EACZ,CAAC;AACH,CAAC,CAAC;AACF,SAASC,KAAKA,CAAA,EAAG;EACf,OAAO1C,MAAM,CAAC;IAAE2C,MAAM,EAAE;EAAE,CAAC,CAAC;AAC9B;AACAzC,MAAM,CAACwC,KAAK,EAAE,OAAO,CAAC;AACtB,SAASE,MAAMA,CAACC,IAAI,EAAEC,EAAE,EAAE;EACxB,MAAMC,SAAS,GAAG,eAAgBC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EACrD,OAAOJ,IAAI,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAK;IAChC,MAAMC,GAAG,GAAGP,EAAE,CAACM,IAAI,CAAC;IACpB,IAAI,CAACL,SAAS,CAACM,GAAG,CAAC,EAAE;MACnBN,SAAS,CAACM,GAAG,CAAC,GAAG,IAAI;MACrBF,GAAG,CAACG,IAAI,CAACF,IAAI,CAAC;IAChB;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC;AACR;AACAjD,MAAM,CAAC0C,MAAM,EAAE,QAAQ,CAAC;AACxB,IAAIW,YAAY,GAAG,eAAgBrD,MAAM,CAAC,UAASsD,IAAI,EAAE;EACvD5B,KAAK,CAAC6B,OAAO,CAAClB,SAAS,GAAGiB,IAAI;AAChC,CAAC,EAAE,cAAc,CAAC;AAClB,IAAIE,UAAU,GAAG,eAAgBxD,MAAM,CAAC,UAASyD,YAAY,EAAE;EAC7DhD,GAAG,CAACiD,KAAK,CAAC,aAAa,EAAED,YAAY,CAAC;EACtCA,YAAY,GAAGA,YAAY,EAAEE,IAAI,CAAC,CAAC;EACnCF,YAAY,GAAGA,YAAY,IAAI,IAAI;EACnC,IAAI;IACF/B,KAAK,CAAC6B,OAAO,CAAChB,OAAO,GAAGqB,IAAI,CAAC7C,KAAK,CAAC0C,YAAY,CAAC;EAClD,CAAC,CAAC,OAAOI,CAAC,EAAE;IACVpD,GAAG,CAACqD,KAAK,CAAC,sCAAsC,EAAED,CAAC,CAACE,OAAO,CAAC;EAC9D;AACF,CAAC,EAAE,YAAY,CAAC;AAChB,IAAIC,UAAU,GAAG,eAAgBhE,MAAM,CAAC,YAAW;EACjD,OAAO0B,KAAK,CAAC6B,OAAO,CAAChB,OAAO;AAC9B,CAAC,EAAE,YAAY,CAAC;AAChB,IAAI0B,MAAM,GAAG,eAAgBjE,MAAM,CAAC,UAASkE,QAAQ,EAAE;EACrD,IAAIC,GAAG,GAAGD,QAAQ,CAACC,GAAG;EACtB,IAAIC,EAAE,GAAGF,QAAQ,CAACE,EAAE;EACpB,MAAMC,IAAI,GAAGH,QAAQ,CAACG,IAAI;EAC1B,IAAIC,IAAI,GAAGJ,QAAQ,CAACI,IAAI;EACxB7D,GAAG,CAAC8D,IAAI,CAAC,QAAQ,EAAEJ,GAAG,EAAEC,EAAE,EAAEC,IAAI,EAAEC,IAAI,CAAC;EACvC7D,GAAG,CAACiD,KAAK,CAAC,kBAAkB,EAAES,GAAG,EAAEC,EAAE,EAAEC,IAAI,EAAEC,IAAI,CAAC;EAClD,MAAM7C,MAAM,GAAGD,UAAU,CAAC,CAAC;EAC3B4C,EAAE,GAAGlE,cAAc,CAACsE,YAAY,CAACJ,EAAE,EAAE3C,MAAM,CAAC;EAC5C0C,GAAG,GAAGjE,cAAc,CAACsE,YAAY,CAACL,GAAG,EAAE1C,MAAM,CAAC;EAC9C6C,IAAI,GAAGA,IAAI,EAAEG,GAAG,CAAEC,GAAG,IAAKxE,cAAc,CAACsE,YAAY,CAACE,GAAG,EAAEjD,MAAM,CAAC,CAAC;EACnE,MAAMkD,SAAS,GAAG;IAChBP,EAAE,EAAEA,EAAE,GAAGA,EAAE,GAAG1C,KAAK,CAAC6B,OAAO,CAACjB,GAAG,GAAG,GAAG,GAAGE,KAAK,CAAC,CAAC;IAC/CuB,OAAO,EAAEI,GAAG;IACZ7B,GAAG,EAAEZ,KAAK,CAAC6B,OAAO,CAACjB,GAAG,EAAE;IACxB+B,IAAI,EAAEA,IAAI,IAAIrD,UAAU,CAACC,MAAM;IAC/BqD,IAAI,EAAEA,IAAI,IAAI,EAAE;IAChBM,OAAO,EAAElD,KAAK,CAAC6B,OAAO,CAACxB,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,CAACL,KAAK,CAAC6B,OAAO,CAACxB,IAAI,CAACqC,EAAE,CAAC;IAClES,MAAM,EAAEnD,KAAK,CAAC6B,OAAO,CAACnB;EACxB,CAAC;EACDV,KAAK,CAAC6B,OAAO,CAACxB,IAAI,GAAG4C,SAAS;EAC9BlE,GAAG,CAAC8D,IAAI,CAAC,aAAa,EAAE9C,MAAM,CAACE,cAAc,CAAC;EAC9CD,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAACiD,GAAG,CAACH,SAAS,CAACP,EAAE,EAAEO,SAAS,CAAC;EAClDjD,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC2C,GAAG,CAACpD,KAAK,CAAC6B,OAAO,CAACnB,UAAU,EAAEuC,SAAS,CAACP,EAAE,CAAC;EAClE3D,GAAG,CAACiD,KAAK,CAAC,gBAAgB,GAAGiB,SAAS,CAACP,EAAE,CAAC;AAC5C,CAAC,EAAE,QAAQ,CAAC;AACZ,IAAIS,MAAM,GAAG,eAAgB7E,MAAM,CAAC,UAAS+E,QAAQ,EAAE;EACrD,IAAI9C,IAAI,GAAG8C,QAAQ,CAAC9C,IAAI;EACxB,MAAMC,KAAK,GAAG6C,QAAQ,CAAC7C,KAAK;EAC5BD,IAAI,GAAG/B,cAAc,CAACsE,YAAY,CAACvC,IAAI,EAAET,UAAU,CAAC,CAAC,CAAC;EACtD,IAAIE,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC6C,GAAG,CAAC/C,IAAI,CAAC,EAAE;IACpC,MAAM,IAAIgD,KAAK,CACb,4HAA4HhD,IAAI,IAClI,CAAC;EACH;EACAP,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC2C,GAAG,CAAC7C,IAAI,EAAEP,KAAK,CAAC6B,OAAO,CAACxB,IAAI,IAAI,IAAI,GAAGL,KAAK,CAAC6B,OAAO,CAACxB,IAAI,CAACqC,EAAE,GAAG,IAAI,CAAC;EAC3F1C,KAAK,CAAC6B,OAAO,CAACvB,YAAY,CAAC8C,GAAG,CAAC7C,IAAI,EAAE;IAAEA,IAAI;IAAEC;EAAM,CAAC,CAAC;EACrDgD,QAAQ,CAACjD,IAAI,CAAC;EACdxB,GAAG,CAACiD,KAAK,CAAC,iBAAiB,CAAC;AAC9B,CAAC,EAAE,QAAQ,CAAC;AACZ,IAAIyB,KAAK,GAAG,eAAgBnF,MAAM,CAAEoF,OAAO,IAAK;EAC9C,IAAIC,WAAW,GAAGD,OAAO,CAACP,MAAM;EAChC,IAAIS,QAAQ,GAAGF,OAAO,CAAChB,EAAE;EACzB,MAAMmB,YAAY,GAAGH,OAAO,CAACf,IAAI;EACjC,MAAMmB,UAAU,GAAGJ,OAAO,CAACd,IAAI;EAC/B,MAAM7C,MAAM,GAAGD,UAAU,CAAC,CAAC;EAC3B6D,WAAW,GAAGnF,cAAc,CAACsE,YAAY,CAACa,WAAW,EAAE5D,MAAM,CAAC;EAC9D,IAAI6D,QAAQ,EAAE;IACZA,QAAQ,GAAGpF,cAAc,CAACsE,YAAY,CAACc,QAAQ,EAAE7D,MAAM,CAAC;EAC1D;EACA,MAAMgE,kBAAkB,GAAG/D,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAACuD,GAAG,CAAChE,KAAK,CAAC6B,OAAO,CAACnB,UAAU,CAAC;EAC/E,MAAMuD,gBAAgB,GAAGjE,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAACuD,GAAG,CAACL,WAAW,CAAC;EAChE,MAAMO,aAAa,GAAGH,kBAAkB,GAAG/D,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACD,kBAAkB,CAAC,GAAG,KAAK,CAAC;EACjG,MAAMI,WAAW,GAAGF,gBAAgB,GAAGjE,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACC,gBAAgB,CAAC,GAAG,KAAK,CAAC;EAC3F,IAAIC,aAAa,IAAIC,WAAW,IAAID,aAAa,CAACf,MAAM,KAAKQ,WAAW,EAAE;IACxE,MAAM,IAAIJ,KAAK,CAAC,wBAAwBI,WAAW,gBAAgB,CAAC;EACtE;EACA,IAAI3D,KAAK,CAAC6B,OAAO,CAACnB,UAAU,KAAKiD,WAAW,EAAE;IAC5C,MAAMvB,KAAK,GAAG,IAAImB,KAAK,CAAC,6DAA6D,CAAC;IACtFnB,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,SAASV,WAAW,EAAE;MAC5BW,KAAK,EAAE,SAASX,WAAW,EAAE;MAC7BY,QAAQ,EAAE,CAAC,YAAY;IACzB,CAAC;IACD,MAAMnC,KAAK;EACb;EACA,IAAI8B,aAAa,KAAK,KAAK,CAAC,IAAI,CAACA,aAAa,EAAE;IAC9C,MAAM9B,KAAK,GAAG,IAAImB,KAAK,CACrB,+CAA+CvD,KAAK,CAAC6B,OAAO,CAACnB,UAAU,iBACzE,CAAC;IACD0B,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,SAASV,WAAW,EAAE;MAC5BW,KAAK,EAAE,SAASX,WAAW,EAAE;MAC7BY,QAAQ,EAAE,CAAC,QAAQ;IACrB,CAAC;IACD,MAAMnC,KAAK;EACb;EACA,IAAI,CAACpC,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC6C,GAAG,CAACK,WAAW,CAAC,EAAE;IAC5C,MAAMvB,KAAK,GAAG,IAAImB,KAAK,CACrB,mDAAmD,GAAGI,WAAW,GAAG,kBACtE,CAAC;IACDvB,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,SAASV,WAAW,EAAE;MAC5BW,KAAK,EAAE,SAASX,WAAW,EAAE;MAC7BY,QAAQ,EAAE,CAAC,UAAUZ,WAAW,EAAE;IACpC,CAAC;IACD,MAAMvB,KAAK;EACb;EACA,IAAI+B,WAAW,KAAK,KAAK,CAAC,IAAI,CAACA,WAAW,EAAE;IAC1C,MAAM/B,KAAK,GAAG,IAAImB,KAAK,CACrB,mDAAmD,GAAGI,WAAW,GAAG,kBACtE,CAAC;IACDvB,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,SAASV,WAAW,EAAE;MAC5BW,KAAK,EAAE,SAASX,WAAW,EAAE;MAC7BY,QAAQ,EAAE,CAAC,UAAU;IACvB,CAAC;IACD,MAAMnC,KAAK;EACb;EACA,IAAI8B,aAAa,KAAKC,WAAW,EAAE;IACjC,MAAM/B,KAAK,GAAG,IAAImB,KAAK,CAAC,0DAA0D,CAAC;IACnFnB,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,SAASV,WAAW,EAAE;MAC5BW,KAAK,EAAE,SAASX,WAAW,EAAE;MAC7BY,QAAQ,EAAE,CAAC,YAAY;IACzB,CAAC;IACD,MAAMnC,KAAK;EACb;EACA,IAAIwB,QAAQ,IAAI5D,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAACmD,GAAG,CAACM,QAAQ,CAAC,EAAE;IACnD,MAAMxB,KAAK,GAAG,IAAImB,KAAK,CACrB,6CAA6C,GAAGK,QAAQ,GAAG,0CAC7D,CAAC;IACDxB,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,SAASV,WAAW,IAAIC,QAAQ,IAAIC,YAAY,IAAIC,UAAU,EAAEU,IAAI,CAAC,GAAG,CAAC,EAAE;MACjFF,KAAK,EAAE,SAASX,WAAW,IAAIC,QAAQ,IAAIC,YAAY,IAAIC,UAAU,EAAEU,IAAI,CAAC,GAAG,CAAC,EAAE;MAClFD,QAAQ,EAAE,CACR,SAASZ,WAAW,IAAIC,QAAQ,WAAWC,YAAY,IAAIC,UAAU,EAAEU,IAAI,CAAC,GAAG,CAAC,EAAE;IAEtF,CAAC;IACD,MAAMpC,KAAK;EACb;EACA,MAAMqC,cAAc,GAAGR,gBAAgB,GAAGA,gBAAgB,GAAG,EAAE;EAC/D,MAAMS,OAAO,GAAG;IACdhC,EAAE,EAAEkB,QAAQ,IAAI,GAAG5D,KAAK,CAAC6B,OAAO,CAACjB,GAAG,IAAIE,KAAK,CAAC,CAAC,EAAE;IACjDuB,OAAO,EAAE,iBAAiBsB,WAAW,SAAS3D,KAAK,CAAC6B,OAAO,CAACnB,UAAU,EAAE;IACxEE,GAAG,EAAEZ,KAAK,CAAC6B,OAAO,CAACjB,GAAG,EAAE;IACxBsC,OAAO,EAAElD,KAAK,CAAC6B,OAAO,CAACxB,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,CAACL,KAAK,CAAC6B,OAAO,CAACxB,IAAI,CAACqC,EAAE,EAAE+B,cAAc,CAAC;IAClFtB,MAAM,EAAEnD,KAAK,CAAC6B,OAAO,CAACnB,UAAU;IAChCiC,IAAI,EAAErD,UAAU,CAACI,KAAK;IACtBiF,UAAU,EAAEd,YAAY;IACxBD,QAAQ,EAAEA,QAAQ,GAAG,IAAI,GAAG,KAAK;IACjChB,IAAI,EAAEkB,UAAU,IAAI;EACtB,CAAC;EACD9D,KAAK,CAAC6B,OAAO,CAACxB,IAAI,GAAGqE,OAAO;EAC5B1E,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAACiD,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAEgC,OAAO,CAAC;EAC9C1E,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC2C,GAAG,CAACpD,KAAK,CAAC6B,OAAO,CAACnB,UAAU,EAAEgE,OAAO,CAAChC,EAAE,CAAC;EAChE3D,GAAG,CAACiD,KAAK,CAAChC,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC;EACjC1B,GAAG,CAACiD,KAAK,CAAC,gBAAgB,CAAC;AAC7B,CAAC,EAAE,OAAO,CAAC;AACX,IAAI4C,UAAU,GAAG,eAAgBtG,MAAM,CAAC,UAASuG,YAAY,EAAE;EAC7D,IAAIC,QAAQ,GAAGD,YAAY,CAACnC,EAAE;EAC9B,IAAIqC,QAAQ,GAAGF,YAAY,CAACE,QAAQ;EACpC,IAAInC,IAAI,GAAGiC,YAAY,CAACjC,IAAI;EAC5B,IAAIoC,cAAc,GAAGH,YAAY,CAACI,MAAM;EACxClG,GAAG,CAACiD,KAAK,CAAC,sBAAsB,EAAE8C,QAAQ,EAAEC,QAAQ,EAAEnC,IAAI,CAAC;EAC3D,MAAM7C,MAAM,GAAGD,UAAU,CAAC,CAAC;EAC3BgF,QAAQ,GAAGtG,cAAc,CAACsE,YAAY,CAACgC,QAAQ,EAAE/E,MAAM,CAAC;EACxDgF,QAAQ,GAAGvG,cAAc,CAACsE,YAAY,CAACiC,QAAQ,EAAEhF,MAAM,CAAC;EACxD6C,IAAI,GAAGA,IAAI,EAAEG,GAAG,CAAEC,GAAG,IAAKxE,cAAc,CAACsE,YAAY,CAACE,GAAG,EAAEjD,MAAM,CAAC,CAAC;EACnEiF,cAAc,GAAGxG,cAAc,CAACsE,YAAY,CAACkC,cAAc,EAAEjF,MAAM,CAAC;EACpE,IAAI,CAAC+E,QAAQ,IAAI,CAAC9E,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAACmD,GAAG,CAACwB,QAAQ,CAAC,EAAE;IACrD,MAAM1C,KAAK,GAAG,IAAImB,KAAK,CACrB,6EACF,CAAC;IACDnB,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,cAAcS,QAAQ,IAAIC,QAAQ,EAAE;MAC1CT,KAAK,EAAE,cAAcQ,QAAQ,IAAIC,QAAQ,EAAE;MAC3CR,QAAQ,EAAE,CAAC,iBAAiB;IAC9B,CAAC;IACD,MAAMnC,KAAK;EACb;EACA,MAAM8C,YAAY,GAAGlF,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACc,QAAQ,CAAC;EACxD,IAAII,YAAY,KAAK,KAAK,CAAC,IAAI,CAACA,YAAY,EAAE;IAC5C,MAAM,IAAI3B,KAAK,CAAC,6EAA6E,CAAC;EAChG;EACA,IAAIyB,cAAc,IAAI,EAAEG,KAAK,CAACC,OAAO,CAACF,YAAY,CAAChC,OAAO,CAAC,IAAIgC,YAAY,CAAChC,OAAO,CAACmC,QAAQ,CAACL,cAAc,CAAC,CAAC,EAAE;IAC7G,MAAM5C,KAAK,GAAG,IAAImB,KAAK,CACrB,wGACF,CAAC;IACD,MAAMnB,KAAK;EACb;EACA,MAAMkD,kBAAkB,GAAGJ,YAAY,CAAC/B,MAAM;EAC9C,IAAI+B,YAAY,CAACvC,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAI,CAACsF,cAAc,EAAE;IAC7D,MAAM5C,KAAK,GAAG,IAAImB,KAAK,CACrB,uHACF,CAAC;IACD,MAAMnB,KAAK;EACb;EACA,IAAI,CAAC2C,QAAQ,IAAI,CAAC/E,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAACmD,GAAG,CAACyB,QAAQ,CAAC,EAAE;IACrD,IAAIO,kBAAkB,KAAKtF,KAAK,CAAC6B,OAAO,CAACnB,UAAU,EAAE;MACnD,MAAM0B,KAAK,GAAG,IAAImB,KAAK,CACrB,6EACF,CAAC;MACDnB,KAAK,CAACgC,IAAI,GAAG;QACXC,IAAI,EAAE,cAAcS,QAAQ,IAAIC,QAAQ,EAAE;QAC1CT,KAAK,EAAE,cAAcQ,QAAQ,IAAIC,QAAQ,EAAE;QAC3CR,QAAQ,EAAE,CAAC,iBAAiB;MAC9B,CAAC;MACD,MAAMnC,KAAK;IACb;IACA,MAAMmD,eAAe,GAAGvF,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAACuD,GAAG,CAAChE,KAAK,CAAC6B,OAAO,CAACnB,UAAU,CAAC;IAC5E,IAAI6E,eAAe,KAAK,KAAK,CAAC,IAAI,CAACA,eAAe,EAAE;MAClD,MAAMnD,KAAK,GAAG,IAAImB,KAAK,CACrB,qDAAqDvD,KAAK,CAAC6B,OAAO,CAACnB,UAAU,iBAC/E,CAAC;MACD0B,KAAK,CAACgC,IAAI,GAAG;QACXC,IAAI,EAAE,cAAcS,QAAQ,IAAIC,QAAQ,EAAE;QAC1CT,KAAK,EAAE,cAAcQ,QAAQ,IAAIC,QAAQ,EAAE;QAC3CR,QAAQ,EAAE,CAAC,iBAAiB;MAC9B,CAAC;MACD,MAAMnC,KAAK;IACb;IACA,MAAM8B,aAAa,GAAGlE,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACuB,eAAe,CAAC;IAChE,IAAIrB,aAAa,KAAK,KAAK,CAAC,IAAI,CAACA,aAAa,EAAE;MAC9C,MAAM9B,KAAK,GAAG,IAAImB,KAAK,CACrB,qDAAqDvD,KAAK,CAAC6B,OAAO,CAACnB,UAAU,iBAC/E,CAAC;MACD0B,KAAK,CAACgC,IAAI,GAAG;QACXC,IAAI,EAAE,cAAcS,QAAQ,IAAIC,QAAQ,EAAE;QAC1CT,KAAK,EAAE,cAAcQ,QAAQ,IAAIC,QAAQ,EAAE;QAC3CR,QAAQ,EAAE,CAAC,iBAAiB;MAC9B,CAAC;MACD,MAAMnC,KAAK;IACb;IACA,MAAMsC,OAAO,GAAG;MACdhC,EAAE,EAAE1C,KAAK,CAAC6B,OAAO,CAACjB,GAAG,GAAG,GAAG,GAAGE,KAAK,CAAC,CAAC;MACrCuB,OAAO,EAAE,iBAAiB6C,YAAY,EAAE7C,OAAO,SAASrC,KAAK,CAAC6B,OAAO,CAACnB,UAAU,EAAE;MAClFE,GAAG,EAAEZ,KAAK,CAAC6B,OAAO,CAACjB,GAAG,EAAE;MACxBsC,OAAO,EAAElD,KAAK,CAAC6B,OAAO,CAACxB,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,CAACL,KAAK,CAAC6B,OAAO,CAACxB,IAAI,CAACqC,EAAE,EAAEwC,YAAY,CAACxC,EAAE,CAAC;MACnFS,MAAM,EAAEnD,KAAK,CAAC6B,OAAO,CAACnB,UAAU;MAChCiC,IAAI,EAAErD,UAAU,CAACK,WAAW;MAC5BiD,IAAI,EAAEA,IAAI,GAAGA,IAAI,CAAC4C,MAAM,CAACC,OAAO,CAAC,GAAG,CAClC,eAAeP,YAAY,CAACxC,EAAE,GAAGwC,YAAY,CAACvC,IAAI,KAAKrD,UAAU,CAACI,KAAK,GAAG,WAAWsF,cAAc,EAAE,GAAG,EAAE,EAAE;IAEhH,CAAC;IACDhF,KAAK,CAAC6B,OAAO,CAACxB,IAAI,GAAGqE,OAAO;IAC5B1E,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAACiD,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAEgC,OAAO,CAAC;IAC9C1E,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC2C,GAAG,CAACpD,KAAK,CAAC6B,OAAO,CAACnB,UAAU,EAAEgE,OAAO,CAAChC,EAAE,CAAC;IAChE3D,GAAG,CAACiD,KAAK,CAAChC,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC;IACjC1B,GAAG,CAACiD,KAAK,CAAC,eAAe,CAAC;EAC5B;AACF,CAAC,EAAE,YAAY,CAAC;AAChB,IAAIwB,QAAQ,GAAG,eAAgBlF,MAAM,CAAC,UAASoH,OAAO,EAAE;EACtDA,OAAO,GAAGlH,cAAc,CAACsE,YAAY,CAAC4C,OAAO,EAAE5F,UAAU,CAAC,CAAC,CAAC;EAC5D,IAAI,CAACE,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAAC6C,GAAG,CAACoC,OAAO,CAAC,EAAE;IACxC,MAAMtD,KAAK,GAAG,IAAImB,KAAK,CACrB,+EAA+EmC,OAAO,IACxF,CAAC;IACDtD,KAAK,CAACgC,IAAI,GAAG;MACXC,IAAI,EAAE,YAAYqB,OAAO,EAAE;MAC3BpB,KAAK,EAAE,YAAYoB,OAAO,EAAE;MAC5BnB,QAAQ,EAAE,CAAC,UAAUmB,OAAO,EAAE;IAChC,CAAC;IACD,MAAMtD,KAAK;EACb,CAAC,MAAM;IACLpC,KAAK,CAAC6B,OAAO,CAACnB,UAAU,GAAGgF,OAAO;IAClC,MAAMhD,EAAE,GAAG1C,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAACuD,GAAG,CAAChE,KAAK,CAAC6B,OAAO,CAACnB,UAAU,CAAC;IAC/D,IAAIgC,EAAE,KAAK,KAAK,CAAC,IAAI,CAACA,EAAE,EAAE;MACxB1C,KAAK,CAAC6B,OAAO,CAACxB,IAAI,GAAG,IAAI;IAC3B,CAAC,MAAM;MACLL,KAAK,CAAC6B,OAAO,CAACxB,IAAI,GAAGL,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACtB,EAAE,CAAC,IAAI,IAAI;IAC5D;EACF;AACF,CAAC,EAAE,UAAU,CAAC;AACd,SAASiD,MAAMA,CAACC,GAAG,EAAEnE,GAAG,EAAEoE,MAAM,EAAE;EAChC,MAAMC,KAAK,GAAGF,GAAG,CAACG,OAAO,CAACtE,GAAG,CAAC;EAC9B,IAAIqE,KAAK,KAAK,CAAC,CAAC,EAAE;IAChBF,GAAG,CAAClE,IAAI,CAACmE,MAAM,CAAC;EAClB,CAAC,MAAM;IACLD,GAAG,CAACI,MAAM,CAACF,KAAK,EAAE,CAAC,EAAED,MAAM,CAAC;EAC9B;AACF;AACAvH,MAAM,CAACqH,MAAM,EAAE,QAAQ,CAAC;AACxB,SAASM,wBAAwBA,CAACC,SAAS,EAAE;EAC3C,MAAMxB,OAAO,GAAGwB,SAAS,CAAC5E,MAAM,CAAC,CAACC,GAAG,EAAE4E,OAAO,KAAK;IACjD,IAAI5E,GAAG,CAACX,GAAG,GAAGuF,OAAO,CAACvF,GAAG,EAAE;MACzB,OAAOW,GAAG;IACZ;IACA,OAAO4E,OAAO;EAChB,CAAC,EAAED,SAAS,CAAC,CAAC,CAAC,CAAC;EAChB,IAAIE,IAAI,GAAG,EAAE;EACbF,SAAS,CAACG,OAAO,CAAC,UAASC,CAAC,EAAE;IAC5B,IAAIA,CAAC,KAAK5B,OAAO,EAAE;MACjB0B,IAAI,IAAI,IAAI;IACd,CAAC,MAAM;MACLA,IAAI,IAAI,IAAI;IACd;EACF,CAAC,CAAC;EACF,MAAMG,KAAK,GAAG,CAACH,IAAI,EAAE1B,OAAO,CAAChC,EAAE,EAAEgC,OAAO,CAAC9D,GAAG,CAAC;EAC7C,KAAK,MAAM8E,OAAO,IAAI1F,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,EAAE;IAC5C,IAAIT,KAAK,CAAC6B,OAAO,CAACpB,QAAQ,CAACuD,GAAG,CAAC0B,OAAO,CAAC,KAAKhB,OAAO,CAAChC,EAAE,EAAE;MACtD6D,KAAK,CAAC7E,IAAI,CAACgE,OAAO,CAAC;IACrB;EACF;EACA3G,GAAG,CAACiD,KAAK,CAACuE,KAAK,CAAC/B,IAAI,CAAC,GAAG,CAAC,CAAC;EAC1B,IAAIE,OAAO,CAACxB,OAAO,IAAIwB,OAAO,CAACxB,OAAO,CAACnC,MAAM,IAAI,CAAC,IAAI2D,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,IAAIwB,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,EAAE;IAC9F,MAAMD,SAAS,GAAGjD,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACU,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/DyC,MAAM,CAACO,SAAS,EAAExB,OAAO,EAAEzB,SAAS,CAAC;IACrC,IAAIyB,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,EAAE;MACtBgD,SAAS,CAACxE,IAAI,CAAC1B,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACU,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D;EACF,CAAC,MAAM,IAAIwB,OAAO,CAACxB,OAAO,CAACnC,MAAM,IAAI,CAAC,EAAE;IACtC;EACF,CAAC,MAAM;IACL,IAAI2D,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,EAAE;MACtB,MAAMD,SAAS,GAAGjD,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC6D,GAAG,CAACU,OAAO,CAACxB,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/DyC,MAAM,CAACO,SAAS,EAAExB,OAAO,EAAEzB,SAAS,CAAC;IACvC;EACF;EACAiD,SAAS,GAAGlF,MAAM,CAACkF,SAAS,EAAGI,CAAC,IAAKA,CAAC,CAAC5D,EAAE,CAAC;EAC1CuD,wBAAwB,CAACC,SAAS,CAAC;AACrC;AACA5H,MAAM,CAAC2H,wBAAwB,EAAE,0BAA0B,CAAC;AAC5D,IAAIO,WAAW,GAAG,eAAgBlI,MAAM,CAAC,YAAW;EAClDS,GAAG,CAACiD,KAAK,CAAChC,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC;EAChC,MAAMsG,IAAI,GAAGC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;EACjCT,wBAAwB,CAAC,CAACQ,IAAI,CAAC,CAAC;AAClC,CAAC,EAAE,aAAa,CAAC;AACjB,IAAIE,MAAM,GAAG,eAAgBrI,MAAM,CAAC,YAAW;EAC7C0B,KAAK,CAAC4G,KAAK,CAAC,CAAC;EACbrI,KAAK,CAAC,CAAC;AACT,CAAC,EAAE,OAAO,CAAC;AACX,IAAIsI,qBAAqB,GAAG,eAAgBvI,MAAM,CAAC,YAAW;EAC5D,MAAMwI,aAAa,GAAG,CAAC,GAAG9G,KAAK,CAAC6B,OAAO,CAACvB,YAAY,CAACyG,MAAM,CAAC,CAAC,CAAC,CAAChE,GAAG,CAAC,CAACzC,YAAY,EAAE0G,CAAC,KAAK;IACtF,IAAI1G,YAAY,CAACE,KAAK,KAAK,IAAI,IAAIF,YAAY,CAACE,KAAK,KAAK,KAAK,CAAC,EAAE;MAChE,OAAOF,YAAY;IACrB;IACA,OAAO;MACL,GAAGA,YAAY;MACfE,KAAK,EAAEyG,UAAU,CAAC,KAAKD,CAAC,EAAE;IAC5B,CAAC;EACH,CAAC,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACD,CAAC,CAAC3G,KAAK,IAAI,CAAC,KAAK4G,CAAC,CAAC5G,KAAK,IAAI,CAAC,CAAC,CAAC,CAACuC,GAAG,CAAC,CAAC;IAAExC;EAAK,CAAC,MAAM;IAAEA;EAAK,CAAC,CAAC,CAAC;EAChF,OAAOuG,aAAa;AACtB,CAAC,EAAE,uBAAuB,CAAC;AAC3B,IAAIO,WAAW,GAAG,eAAgB/I,MAAM,CAAC,YAAW;EAClD,OAAO0B,KAAK,CAAC6B,OAAO,CAACpB,QAAQ;AAC/B,CAAC,EAAE,aAAa,CAAC;AACjB,IAAI6G,UAAU,GAAG,eAAgBhJ,MAAM,CAAC,YAAW;EACjD,OAAO0B,KAAK,CAAC6B,OAAO,CAAC1B,OAAO;AAC9B,CAAC,EAAE,YAAY,CAAC;AAChB,IAAIuG,eAAe,GAAG,eAAgBpI,MAAM,CAAC,YAAW;EACtD,MAAM4H,SAAS,GAAG,CAAC,GAAGlG,KAAK,CAAC6B,OAAO,CAAC1B,OAAO,CAAC4G,MAAM,CAAC,CAAC,CAAC;EACrDb,SAAS,CAACG,OAAO,CAAC,UAASkB,CAAC,EAAE;IAC5BxI,GAAG,CAACiD,KAAK,CAACuF,CAAC,CAAC7E,EAAE,CAAC;EACjB,CAAC,CAAC;EACFwD,SAAS,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACvG,GAAG,GAAGwG,CAAC,CAACxG,GAAG,CAAC;EACvC,OAAOsF,SAAS;AAClB,CAAC,EAAE,iBAAiB,CAAC;AACrB,IAAIsB,gBAAgB,GAAG,eAAgBlJ,MAAM,CAAC,YAAW;EACvD,OAAO0B,KAAK,CAAC6B,OAAO,CAACnB,UAAU;AACjC,CAAC,EAAE,kBAAkB,CAAC;AACtB,IAAI+G,YAAY,GAAG,eAAgBnJ,MAAM,CAAC,YAAW;EACnD,OAAO0B,KAAK,CAAC6B,OAAO,CAAClB,SAAS;AAChC,CAAC,EAAE,cAAc,CAAC;AAClB,IAAI+G,OAAO,GAAG,eAAgBpJ,MAAM,CAAC,YAAW;EAC9C,OAAO0B,KAAK,CAAC6B,OAAO,CAACxB,IAAI;AAC3B,CAAC,EAAE,SAAS,CAAC;AACb,IAAIsH,EAAE,GAAG;EACPrI,UAAU;EACVV,SAAS,EAAEkB,UAAU;EACrB6B,YAAY;EACZG,UAAU;EACVQ,UAAU;EACVC,MAAM;EACNY,MAAM;EACNM,KAAK;EACLmB,UAAU;EACVpB,QAAQ;EACR;EACAgD,WAAW;EACXjI,KAAK,EAAEoI,MAAM;EACbE,qBAAqB;EACrBQ,WAAW;EACXC,UAAU;EACVZ,eAAe;EACfc,gBAAgB;EAChBC,YAAY;EACZC,OAAO;EACPzI,WAAW;EACXN,WAAW;EACXD,iBAAiB;EACjBM,iBAAiB;EACjBE,eAAe;EACfJ;AACF,CAAC;;AAED;AACA,IAAI8I,QAAQ,GAAG,eAAgBtJ,MAAM,CAAC,CAACuJ,GAAG,EAAEC,GAAG,KAAK;EAClD7J,gBAAgB,CAAC4J,GAAG,EAAEC,GAAG,CAAC;EAC1B,IAAID,GAAG,CAACE,GAAG,EAAE;IACXD,GAAG,CAACnG,YAAY,CAACkG,GAAG,CAACE,GAAG,CAAC;EAC3B;EACA,KAAK,MAAMC,SAAS,IAAIH,GAAG,CAACI,UAAU,EAAE;IACtCC,cAAc,CAACF,SAAS,EAAEF,GAAG,CAAC;EAChC;AACF,CAAC,EAAE,UAAU,CAAC;AACd,IAAII,cAAc,GAAG,eAAgB5J,MAAM,CAAC,CAAC0J,SAAS,EAAEF,GAAG,KAAK;EAC9D,MAAMK,OAAO,GAAG;IACdC,MAAM,EAAE,eAAgB9J,MAAM,CAAE+J,IAAI,IAAKP,GAAG,CAACvF,MAAM,CAAC+F,WAAW,CAACD,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC;IACjFE,MAAM,EAAE,eAAgBjK,MAAM,CAAE+J,IAAI,IAAKP,GAAG,CAAC3E,MAAM,CAACqF,WAAW,CAACH,IAAI,CAAC,CAAC,EAAE,QAAQ,CAAC;IACjFI,KAAK,EAAE,eAAgBnK,MAAM,CAAE+J,IAAI,IAAKP,GAAG,CAACrE,KAAK,CAACiF,UAAU,CAACL,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC;IAC7EM,QAAQ,EAAE,eAAgBrK,MAAM,CAAE+J,IAAI,IAAKP,GAAG,CAACtE,QAAQ,CAACoF,aAAa,CAACP,IAAI,CAAC,CAAC,EAAE,UAAU,CAAC;IACzFQ,aAAa,EAAE,eAAgBvK,MAAM,CAAE+J,IAAI,IAAKP,GAAG,CAAClD,UAAU,CAACkE,kBAAkB,CAACT,IAAI,CAAC,CAAC,EAAE,eAAe;EAC3G,CAAC;EACD,MAAMU,OAAO,GAAGZ,OAAO,CAACH,SAAS,CAACgB,KAAK,CAAC;EACxC,IAAID,OAAO,EAAE;IACXA,OAAO,CAACf,SAAS,CAAC;EACpB,CAAC,MAAM;IACLjJ,GAAG,CAACqD,KAAK,CAAC,2BAA2B4F,SAAS,CAACgB,KAAK,EAAE,CAAC;EACzD;AACF,CAAC,EAAE,gBAAgB,CAAC;AACpB,IAAIV,WAAW,GAAG,eAAgBhK,MAAM,CAAEoG,OAAO,IAAK;EACpD,MAAMlC,QAAQ,GAAG;IACfE,EAAE,EAAEgC,OAAO,CAAChC,EAAE;IACdD,GAAG,EAAEiC,OAAO,CAACrC,OAAO,IAAI,EAAE;IAC1BM,IAAI,EAAE+B,OAAO,CAAC/B,IAAI,KAAK,KAAK,CAAC,GAAGrD,UAAU,CAACoF,OAAO,CAAC/B,IAAI,CAAC,GAAGrD,UAAU,CAACC,MAAM;IAC5EqD,IAAI,EAAE8B,OAAO,CAAC9B,IAAI,IAAI,KAAK;EAC7B,CAAC;EACD,OAAOJ,QAAQ;AACjB,CAAC,EAAE,aAAa,CAAC;AACjB,IAAIgG,WAAW,GAAG,eAAgBlK,MAAM,CAAEoH,OAAO,IAAK;EACpD,MAAMrC,QAAQ,GAAG;IACf9C,IAAI,EAAEmF,OAAO,CAACnF,IAAI;IAClBC,KAAK,EAAEkF,OAAO,CAAClF,KAAK,IAAI;EAC1B,CAAC;EACD,OAAO6C,QAAQ;AACjB,CAAC,EAAE,aAAa,CAAC;AACjB,IAAIqF,UAAU,GAAG,eAAgBpK,MAAM,CAAE2K,MAAM,IAAK;EAClD,MAAMvF,OAAO,GAAG;IACdP,MAAM,EAAE8F,MAAM,CAAC9F,MAAM;IACrBT,EAAE,EAAEuG,MAAM,CAACvG,EAAE,IAAI,EAAE;IACnBC,IAAI,EAAEsG,MAAM,CAACtG,IAAI,KAAK,KAAK,CAAC,GAAGrD,UAAU,CAAC2J,MAAM,CAACtG,IAAI,CAAC,GAAG,KAAK,CAAC;IAC/DC,IAAI,EAAEqG,MAAM,CAACrG,IAAI,IAAI,KAAK;EAC5B,CAAC;EACD,OAAOc,OAAO;AAChB,CAAC,EAAE,YAAY,CAAC;AAChB,IAAIkF,aAAa,GAAG,eAAgBtK,MAAM,CAAE4K,SAAS,IAAK;EACxD,MAAMxD,OAAO,GAAGwD,SAAS,CAAC/F,MAAM;EAChC,OAAOuC,OAAO;AAChB,CAAC,EAAE,eAAe,CAAC;AACnB,IAAIoD,kBAAkB,GAAG,eAAgBxK,MAAM,CAAE6K,aAAa,IAAK;EACjE,MAAMtE,YAAY,GAAG;IACnBnC,EAAE,EAAEyG,aAAa,CAACzG,EAAE;IACpBqC,QAAQ,EAAE,EAAE;IACZnC,IAAI,EAAEuG,aAAa,CAACvG,IAAI,EAAE7B,MAAM,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGoI,aAAa,CAACvG,IAAI;IACpEqC,MAAM,EAAEkE,aAAa,CAAClE;EACxB,CAAC;EACD,OAAOJ,YAAY;AACrB,CAAC,EAAE,oBAAoB,CAAC;AACxB,IAAIuE,MAAM,GAAG;EACX/J,KAAK,EAAE,eAAgBf,MAAM,CAAC,MAAO+K,KAAK,IAAK;IAC7C,MAAMxB,GAAG,GAAG,MAAMxI,KAAK,CAAC,UAAU,EAAEgK,KAAK,CAAC;IAC1CtK,GAAG,CAACiD,KAAK,CAAC6F,GAAG,CAAC;IACdD,QAAQ,CAACC,GAAG,EAAEF,EAAE,CAAC;EACnB,CAAC,EAAE,OAAO;AACZ,CAAC;AACD,IAAI,KAAK,CAAC,EAAE;EACV,MAAM;IAAE2B,EAAE;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAG,KAAK,CAAC;EACvC,MAAMC,MAAM,GAAG;IACbnK,UAAU;IACVqC,YAAY,EAAE+H,EAAE,CAACxI,EAAE,CAAC,CAAC;IACrBqB,MAAM,EAAEmH,EAAE,CAACxI,EAAE,CAAC,CAAC;IACfiC,MAAM,EAAEuG,EAAE,CAACxI,EAAE,CAAC,CAAC;IACfuC,KAAK,EAAEiG,EAAE,CAACxI,EAAE,CAAC,CAAC;IACd0D,UAAU,EAAE8E,EAAE,CAACxI,EAAE,CAAC,CAAC;IACnBsC,QAAQ,EAAEkG,EAAE,CAACxI,EAAE,CAAC;EAClB,CAAC;EACDsI,QAAQ,CAAC,iBAAiB,EAAE,MAAM;IAChCF,EAAE,CAAC,iCAAiC,EAAE,MAAM;MAC1C,MAAM5E,OAAO,GAAG;QACdsE,KAAK,EAAE,QAAQ;QACftG,EAAE,EAAE,GAAG;QACPL,OAAO,EAAE,MAAM;QACfO,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBD,IAAI,EAAE;MACR,CAAC;MACDuF,cAAc,CAACxD,OAAO,EAAE+E,MAAM,CAAC;MAC/BF,MAAM,CAACE,MAAM,CAAClH,MAAM,CAAC,CAACoH,oBAAoB,CAAC;QACzCjH,EAAE,EAAE,GAAG;QACPD,GAAG,EAAE,MAAM;QACXG,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBD,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IACF2G,EAAE,CAAC,iCAAiC,EAAE,MAAM;MAC1C,MAAM5D,OAAO,GAAG;QACdsD,KAAK,EAAE,QAAQ;QACfzI,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE;MACT,CAAC;MACD0H,cAAc,CAACxC,OAAO,EAAE+D,MAAM,CAAC;MAC/BF,MAAM,CAACE,MAAM,CAACtG,MAAM,CAAC,CAACwG,oBAAoB,CAAC;QAAEpJ,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;IAC7E,CAAC,CAAC;IACF8I,EAAE,CAAC,mCAAmC,EAAE,MAAM;MAC5C,MAAMJ,SAAS,GAAG;QAChBF,KAAK,EAAE,UAAU;QACjB7F,MAAM,EAAE;MACV,CAAC;MACD+E,cAAc,CAACgB,SAAS,EAAEO,MAAM,CAAC;MACjCF,MAAM,CAACE,MAAM,CAACjG,QAAQ,CAAC,CAACmG,oBAAoB,CAAC,WAAW,CAAC;IAC3D,CAAC,CAAC;IACFL,EAAE,CAAC,gCAAgC,EAAE,MAAM;MACzC,MAAML,MAAM,GAAG;QACbD,KAAK,EAAE,OAAO;QACd7F,MAAM,EAAE,WAAW;QACnBT,EAAE,EAAE,GAAG;QACPE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBD,IAAI,EAAE;MACR,CAAC;MACDuF,cAAc,CAACe,MAAM,EAAEQ,MAAM,CAAC;MAC9BF,MAAM,CAACE,MAAM,CAAChG,KAAK,CAAC,CAACkG,oBAAoB,CAAC;QACxCxG,MAAM,EAAE,WAAW;QACnBT,EAAE,EAAE,GAAG;QACPE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBD,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC,CAAC;IACF2G,EAAE,CAAC,yCAAyC,EAAE,MAAM;MAClD,MAAMM,WAAW,GAAG;QAClBZ,KAAK,EAAE,eAAe;QACtBtG,EAAE,EAAE,GAAG;QACPE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBqC,MAAM,EAAE;MACV,CAAC;MACDiD,cAAc,CAAC0B,WAAW,EAAEH,MAAM,CAAC;MACnCF,MAAM,CAACE,MAAM,CAAC7E,UAAU,CAAC,CAAC+E,oBAAoB,CAAC;QAC7CjH,EAAE,EAAE,GAAG;QACPqC,QAAQ,EAAE,EAAE;QACZE,MAAM,EAAE,GAAG;QACXrC,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;IACF0G,EAAE,CAAC,+CAA+C,EAAE,MAAM;MACxD,MAAMO,KAAK,GAAG;QACZb,KAAK,EAAE,UAAU;QACjBf,UAAU,EAAE;MACd,CAAC;MACD,MAAM6B,WAAW,GAAG;QAClBd,KAAK,EAAE,UAAU;QACjBf,UAAU,EAAE,CACV;UACE8B,UAAU,EAAEF,KAAK;UACjBb,KAAK,EAAE,QAAQ;UACftG,EAAE,EAAE,GAAG;UACPL,OAAO,EAAE,MAAM;UACfO,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;UACtBD,IAAI,EAAE;QACR,CAAC,EACD;UACEoH,UAAU,EAAEF,KAAK;UACjBb,KAAK,EAAE,QAAQ;UACfzI,IAAI,EAAE,WAAW;UACjBC,KAAK,EAAE;QACT,CAAC,EACD;UACEuJ,UAAU,EAAEF,KAAK;UACjBb,KAAK,EAAE,OAAO;UACd7F,MAAM,EAAE,WAAW;UACnBT,EAAE,EAAE,GAAG;UACPE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;UACtBD,IAAI,EAAE;QACR,CAAC,EACD;UACEoH,UAAU,EAAEF,KAAK;UACjBb,KAAK,EAAE,UAAU;UACjB7F,MAAM,EAAE;QACV,CAAC,EACD;UACE4G,UAAU,EAAEF,KAAK;UACjBb,KAAK,EAAE,eAAe;UACtBtG,EAAE,EAAE,GAAG;UACPE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;UACtBqC,MAAM,EAAE;QACV,CAAC;MAEL,CAAC;MACD2C,QAAQ,CAACkC,WAAW,EAAEL,MAAM,CAAC;MAC7BF,MAAM,CAACE,MAAM,CAAClH,MAAM,CAAC,CAACoH,oBAAoB,CAAC;QACzCjH,EAAE,EAAE,GAAG;QACPD,GAAG,EAAE,MAAM;QACXG,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBD,IAAI,EAAE;MACR,CAAC,CAAC;MACF4G,MAAM,CAACE,MAAM,CAACtG,MAAM,CAAC,CAACwG,oBAAoB,CAAC;QAAEpJ,IAAI,EAAE,WAAW;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;MAC3E+I,MAAM,CAACE,MAAM,CAAChG,KAAK,CAAC,CAACkG,oBAAoB,CAAC;QACxCxG,MAAM,EAAE,WAAW;QACnBT,EAAE,EAAE,GAAG;QACPE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC;QACtBD,IAAI,EAAE;MACR,CAAC,CAAC;MACF4G,MAAM,CAACE,MAAM,CAACjG,QAAQ,CAAC,CAACmG,oBAAoB,CAAC,WAAW,CAAC;IAC3D,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;;AAEA;AACA,SAASK,MAAM,QAAQ,IAAI;AAC3B,IAAIC,cAAc,GAAGpL,UAAU,CAAC,CAAC;AACjC,IAAIqL,wBAAwB,GAAGD,cAAc,EAAEpK,QAAQ;AACvD,IAAIsK,aAAa,GAAG,EAAE;AACtB,IAAIC,WAAW,GAAG,EAAE;AACpB,IAAIC,EAAE,GAAG,CAAC;AACV,IAAIC,EAAE,GAAG,CAAC;AACV,IAAIC,iBAAiB,GAAG,CAAC;AACzB,IAAIC,SAAS,GAAG,eAAgB,IAAIpK,GAAG,CAAC,CAAC;AACzC,IAAIqK,SAAS,GAAG,eAAgB,IAAIrK,GAAG,CAAC,CAAC;AACzC,IAAIsK,UAAU,GAAG,EAAE;AACnB,IAAIC,cAAc,GAAG,eAAgB,IAAIvK,GAAG,CAAC,CAAC;AAC9C,IAAIwK,KAAK,GAAG,EAAE;AACd,IAAIC,MAAM,GAAG,CAAC;AACd,IAAI9C,GAAG,GAAG,IAAI;AACd,IAAI+C,MAAM,GAAG,eAAgBxM,MAAM,CAAC,MAAM;EACxCkM,SAAS,CAACjM,KAAK,CAAC,CAAC;EACjBkM,SAAS,CAAClM,KAAK,CAAC,CAAC;EACjBoM,cAAc,CAACpM,KAAK,CAAC,CAAC;EACtBsM,MAAM,GAAG,CAAC;EACVD,KAAK,GAAG,EAAE;EACV7C,GAAG,GAAG,IAAI;AACZ,CAAC,EAAE,OAAO,CAAC;AACX,IAAIgD,QAAQ,GAAG,eAAgBzM,MAAM,CAAE0M,GAAG,IAAK;EAC7C,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,MAAM,CAAC;EAC/E,MAAMC,IAAI,GAAG,OAAOJ,GAAG,KAAK,QAAQ,GAAGA,GAAG,CAACK,KAAK,CAAC,qBAAqB,CAAC,GAAGL,GAAG;EAC7EI,IAAI,CAAC/E,OAAO,CAAEiF,GAAG,IAAK;IACpB,MAAMC,KAAK,GAAGL,QAAQ,CAACC,eAAe,CAAC,4BAA4B,EAAE,OAAO,CAAC;IAC7EI,KAAK,CAACC,cAAc,CAAC,sCAAsC,EAAE,WAAW,EAAE,UAAU,CAAC;IACrFD,KAAK,CAACE,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC;IAC/BF,KAAK,CAACE,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC;IAC5BF,KAAK,CAACE,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC;IAClCF,KAAK,CAACG,WAAW,GAAGJ,GAAG,CAACrJ,IAAI,CAAC,CAAC;IAC9BgJ,QAAQ,CAACU,WAAW,CAACJ,KAAK,CAAC;EAC7B,CAAC,CAAC;EACF,OAAON,QAAQ;AACjB,CAAC,EAAE,UAAU,CAAC;AACd,IAAIW,iBAAiB,GAAG,eAAgBtN,MAAM,CAAE4E,OAAO,IAAK;EAC1D,IAAI2I,aAAa;EACjB,IAAIC,cAAc;EAClB,IAAIC,cAAc;EAClB,IAAIhE,GAAG,KAAK,IAAI,EAAE;IAChB+D,cAAc,GAAG,eAAgBxN,MAAM,CAAC,CAAC6I,CAAC,EAAEC,CAAC,KAAKD,CAAC,IAAIC,CAAC,EAAE,gBAAgB,CAAC;IAC3E2E,cAAc,GAAGC,QAAQ;EAC3B,CAAC,MAAM;IACLF,cAAc,GAAG,eAAgBxN,MAAM,CAAC,CAAC6I,CAAC,EAAEC,CAAC,KAAKD,CAAC,IAAIC,CAAC,EAAE,gBAAgB,CAAC;IAC3E2E,cAAc,GAAG,CAAC;EACpB;EACA7I,OAAO,CAACmD,OAAO,CAAEpB,MAAM,IAAK;IAC1B,MAAMgH,cAAc,GAAGlE,GAAG,KAAK,IAAI,IAAIA,GAAG,IAAI,IAAI,GAAG0C,SAAS,CAACzG,GAAG,CAACiB,MAAM,CAAC,EAAEiH,CAAC,GAAGzB,SAAS,CAACzG,GAAG,CAACiB,MAAM,CAAC,EAAEkH,CAAC;IACxG,IAAIF,cAAc,KAAK,KAAK,CAAC,IAAIH,cAAc,CAACG,cAAc,EAAEF,cAAc,CAAC,EAAE;MAC/EF,aAAa,GAAG5G,MAAM;MACtB8G,cAAc,GAAGE,cAAc;IACjC;EACF,CAAC,CAAC;EACF,OAAOJ,aAAa;AACtB,CAAC,EAAE,mBAAmB,CAAC;AACvB,IAAIO,mBAAmB,GAAG,eAAgB9N,MAAM,CAAE4E,OAAO,IAAK;EAC5D,IAAI2I,aAAa,GAAG,EAAE;EACtB,IAAIQ,WAAW,GAAGL,QAAQ;EAC1B9I,OAAO,CAACmD,OAAO,CAAEpB,MAAM,IAAK;IAC1B,MAAMgH,cAAc,GAAGxB,SAAS,CAACzG,GAAG,CAACiB,MAAM,CAAC,CAACiH,CAAC;IAC9C,IAAID,cAAc,IAAII,WAAW,EAAE;MACjCR,aAAa,GAAG5G,MAAM;MACtBoH,WAAW,GAAGJ,cAAc;IAC9B;EACF,CAAC,CAAC;EACF,OAAOJ,aAAa,IAAI,KAAK,CAAC;AAChC,CAAC,EAAE,qBAAqB,CAAC;AACzB,IAAIS,gBAAgB,GAAG,eAAgBhO,MAAM,CAAC,CAACiO,UAAU,EAAEpM,OAAO,EAAEqM,WAAW,KAAK;EAClF,IAAIC,MAAM,GAAGD,WAAW;EACxB,IAAIH,WAAW,GAAGG,WAAW;EAC7B,MAAME,KAAK,GAAG,EAAE;EAChBH,UAAU,CAAClG,OAAO,CAAE5E,GAAG,IAAK;IAC1B,MAAMiD,OAAO,GAAGvE,OAAO,CAAC6D,GAAG,CAACvC,GAAG,CAAC;IAChC,IAAI,CAACiD,OAAO,EAAE;MACZ,MAAM,IAAInB,KAAK,CAAC,4BAA4B9B,GAAG,EAAE,CAAC;IACpD;IACA,IAAIiD,OAAO,CAACxB,OAAO,CAACnC,MAAM,EAAE;MAC1B0L,MAAM,GAAGE,uBAAuB,CAACjI,OAAO,CAAC;MACzC2H,WAAW,GAAGO,IAAI,CAACC,GAAG,CAACJ,MAAM,EAAEJ,WAAW,CAAC;IAC7C,CAAC,MAAM;MACLK,KAAK,CAAChL,IAAI,CAACgD,OAAO,CAAC;IACrB;IACAoI,iBAAiB,CAACpI,OAAO,EAAE+H,MAAM,CAAC;EACpC,CAAC,CAAC;EACFA,MAAM,GAAGJ,WAAW;EACpBK,KAAK,CAACrG,OAAO,CAAE3B,OAAO,IAAK;IACzBqI,eAAe,CAACrI,OAAO,EAAE+H,MAAM,EAAED,WAAW,CAAC;EAC/C,CAAC,CAAC;EACFD,UAAU,CAAClG,OAAO,CAAE5E,GAAG,IAAK;IAC1B,MAAMiD,OAAO,GAAGvE,OAAO,CAAC6D,GAAG,CAACvC,GAAG,CAAC;IAChC,IAAIiD,OAAO,EAAExB,OAAO,CAACnC,MAAM,EAAE;MAC3B,MAAM8K,aAAa,GAAGO,mBAAmB,CAAC1H,OAAO,CAACxB,OAAO,CAAC;MAC1DuJ,MAAM,GAAGhC,SAAS,CAACzG,GAAG,CAAC6H,aAAa,CAAC,CAACK,CAAC,GAAG9B,WAAW;MACrD,IAAIqC,MAAM,IAAIJ,WAAW,EAAE;QACzBA,WAAW,GAAGI,MAAM;MACtB;MACA,MAAMN,CAAC,GAAG3B,SAAS,CAACxG,GAAG,CAACU,OAAO,CAACvB,MAAM,CAAC,CAAC6J,GAAG;MAC3C,MAAMd,CAAC,GAAGO,MAAM,GAAGtC,aAAa;MAChCM,SAAS,CAACrH,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAE;QAAEyJ,CAAC;QAAED;MAAE,CAAC,CAAC;IACrC;EACF,CAAC,CAAC;AACJ,CAAC,EAAE,kBAAkB,CAAC;AACtB,IAAIe,oBAAoB,GAAG,eAAgB3O,MAAM,CAAEoG,OAAO,IAAK;EAC7D,MAAMmH,aAAa,GAAGD,iBAAiB,CAAClH,OAAO,CAACxB,OAAO,CAACsC,MAAM,CAAE0H,CAAC,IAAKA,CAAC,KAAK,IAAI,CAAC,CAAC;EAClF,IAAI,CAACrB,aAAa,EAAE;IAClB,MAAM,IAAItI,KAAK,CAAC,uCAAuCmB,OAAO,CAAChC,EAAE,EAAE,CAAC;EACtE;EACA,MAAMyK,gBAAgB,GAAG1C,SAAS,CAACzG,GAAG,CAAC6H,aAAa,CAAC,EAAEK,CAAC;EACxD,IAAIiB,gBAAgB,KAAK,KAAK,CAAC,EAAE;IAC/B,MAAM,IAAI5J,KAAK,CAAC,gDAAgDmB,OAAO,CAAChC,EAAE,EAAE,CAAC;EAC/E;EACA,OAAOyK,gBAAgB;AACzB,CAAC,EAAE,sBAAsB,CAAC;AAC1B,IAAIR,uBAAuB,GAAG,eAAgBrO,MAAM,CAAEoG,OAAO,IAAK;EAChE,MAAMyI,gBAAgB,GAAGF,oBAAoB,CAACvI,OAAO,CAAC;EACtD,OAAOyI,gBAAgB,GAAG/C,WAAW;AACvC,CAAC,EAAE,yBAAyB,CAAC;AAC7B,IAAI0C,iBAAiB,GAAG,eAAgBxO,MAAM,CAAC,CAACoG,OAAO,EAAE+H,MAAM,KAAK;EAClE,MAAM/G,OAAO,GAAG8E,SAAS,CAACxG,GAAG,CAACU,OAAO,CAACvB,MAAM,CAAC;EAC7C,IAAI,CAACuC,OAAO,EAAE;IACZ,MAAM,IAAInC,KAAK,CAAC,+BAA+BmB,OAAO,CAAChC,EAAE,EAAE,CAAC;EAC9D;EACA,MAAMyJ,CAAC,GAAGzG,OAAO,CAACsH,GAAG;EACrB,MAAMd,CAAC,GAAGO,MAAM,GAAGtC,aAAa;EAChCM,SAAS,CAACrH,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAE;IAAEyJ,CAAC;IAAED;EAAE,CAAC,CAAC;EACnC,OAAO;IAAEC,CAAC;IAAED;EAAE,CAAC;AACjB,CAAC,EAAE,mBAAmB,CAAC;AACvB,IAAIa,eAAe,GAAG,eAAgBzO,MAAM,CAAC,CAACoG,OAAO,EAAE+H,MAAM,EAAED,WAAW,KAAK;EAC7E,MAAM9G,OAAO,GAAG8E,SAAS,CAACxG,GAAG,CAACU,OAAO,CAACvB,MAAM,CAAC;EAC7C,IAAI,CAACuC,OAAO,EAAE;IACZ,MAAM,IAAInC,KAAK,CAAC,+BAA+BmB,OAAO,CAAChC,EAAE,EAAE,CAAC;EAC9D;EACA,MAAMwJ,CAAC,GAAGO,MAAM,GAAGD,WAAW;EAC9B,MAAML,CAAC,GAAGzG,OAAO,CAACsH,GAAG;EACrBvC,SAAS,CAACrH,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAE;IAAEyJ,CAAC;IAAED;EAAE,CAAC,CAAC;AACrC,CAAC,EAAE,iBAAiB,CAAC;AACrB,IAAIkB,gBAAgB,GAAG,eAAgB9O,MAAM,CAAC,CAAC+O,QAAQ,EAAE3I,OAAO,EAAE4I,cAAc,EAAEC,SAAS,EAAEC,WAAW,EAAEC,gBAAgB,KAAK;EAC7H,IAAIA,gBAAgB,KAAKnO,UAAU,CAACG,SAAS,EAAE;IAC7C4N,QAAQ,CAACK,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACnB,CAAC,GAAG,EAAE,CAAC,CAACwB,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAG,EAAE,CAAC,CAACyB,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACA,IAAI,CACjI,OAAO,EACP,UAAUjJ,OAAO,CAAChC,EAAE,oBAAoB8K,WAAW,GAAGjD,iBAAiB,IAAIgD,SAAS,QACtF,CAAC;IACDF,QAAQ,CAACK,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACnB,CAAC,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAACA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACA,IAAI,CAC/H,OAAO,EACP,UAAUjJ,OAAO,CAAChC,EAAE,UAAU8K,WAAW,GAAGjD,iBAAiB,IAAIgD,SAAS,QAC5E,CAAC;EACH,CAAC,MAAM,IAAIE,gBAAgB,KAAKnO,UAAU,CAACK,WAAW,EAAE;IACtD0N,QAAQ,CAACK,MAAM,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,CAAC,CAACyB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CAACA,IAAI,CAAC,OAAO,EAAE,UAAUjJ,OAAO,CAAChC,EAAE,IAAI6K,SAAS,EAAE,CAAC;IACpJF,QAAQ,CAACK,MAAM,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAACA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAACA,IAAI,CAAC,OAAO,EAAE,UAAUjJ,OAAO,CAAChC,EAAE,IAAI6K,SAAS,EAAE,CAAC;IACnLF,QAAQ,CAACK,MAAM,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAACA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAACA,IAAI,CAAC,OAAO,EAAE,UAAUjJ,OAAO,CAAChC,EAAE,IAAI6K,SAAS,EAAE,CAAC;IACnLF,QAAQ,CAACK,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAACA,IAAI,CAAC,OAAO,EAAE,UAAUjJ,OAAO,CAAChC,EAAE,IAAI6K,SAAS,EAAE,CAAC;IACjOF,QAAQ,CAACK,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,CAAC,CAACwB,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,GAAG,CAAC,CAAC,CAACyB,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAACA,IAAI,CAAC,OAAO,EAAE,UAAUjJ,OAAO,CAAChC,EAAE,IAAI6K,SAAS,EAAE,CAAC;EACnO,CAAC,MAAM;IACL,MAAMK,MAAM,GAAGP,QAAQ,CAACK,MAAM,CAAC,QAAQ,CAAC;IACxCE,MAAM,CAACD,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,CAAC;IACnCyB,MAAM,CAACD,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,CAAC;IACnC0B,MAAM,CAACD,IAAI,CAAC,GAAG,EAAEjJ,OAAO,CAAC/B,IAAI,KAAKrD,UAAU,CAACI,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC;IAC5DkO,MAAM,CAACD,IAAI,CAAC,OAAO,EAAE,UAAUjJ,OAAO,CAAChC,EAAE,UAAU8K,WAAW,GAAGjD,iBAAiB,EAAE,CAAC;IACrF,IAAIkD,gBAAgB,KAAKnO,UAAU,CAACI,KAAK,EAAE;MACzC,MAAMmO,OAAO,GAAGR,QAAQ,CAACK,MAAM,CAAC,QAAQ,CAAC;MACzCG,OAAO,CAACF,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,CAAC;MACpC0B,OAAO,CAACF,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACpB,CAAC,CAAC;MACpC2B,OAAO,CAACF,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MACpBE,OAAO,CAACF,IAAI,CACV,OAAO,EACP,UAAUJ,SAAS,IAAI7I,OAAO,CAAChC,EAAE,UAAU8K,WAAW,GAAGjD,iBAAiB,EAC5E,CAAC;IACH;IACA,IAAIkD,gBAAgB,KAAKnO,UAAU,CAACE,OAAO,EAAE;MAC3C,MAAMsO,KAAK,GAAGT,QAAQ,CAACK,MAAM,CAAC,MAAM,CAAC;MACrCI,KAAK,CAACH,IAAI,CACR,GAAG,EACH,KAAKL,cAAc,CAACnB,CAAC,GAAG,CAAC,IAAImB,cAAc,CAACpB,CAAC,GAAG,CAAC,IAAIoB,cAAc,CAACnB,CAAC,GAAG,CAAC,IAAImB,cAAc,CAACpB,CAAC,GAAG,CAAC,IAAIoB,cAAc,CAACnB,CAAC,GAAG,CAAC,IAAImB,cAAc,CAACpB,CAAC,GAAG,CAAC,IAAIoB,cAAc,CAACnB,CAAC,GAAG,CAAC,IAAImB,cAAc,CAACpB,CAAC,GAAG,CAAC,EACnM,CAAC,CAACyB,IAAI,CAAC,OAAO,EAAE,UAAUJ,SAAS,IAAI7I,OAAO,CAAChC,EAAE,UAAU8K,WAAW,GAAGjD,iBAAiB,EAAE,CAAC;IAC/F;EACF;AACF,CAAC,EAAE,kBAAkB,CAAC;AACtB,IAAIwD,eAAe,GAAG,eAAgBzP,MAAM,CAAC,CAAC0P,OAAO,EAAEtJ,OAAO,EAAE4I,cAAc,EAAEN,GAAG,KAAK;EACtF,IAAItI,OAAO,CAAC/B,IAAI,KAAKrD,UAAU,CAACK,WAAW,KAAK+E,OAAO,CAACd,QAAQ,IAAIc,OAAO,CAAC/B,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIgF,OAAO,CAAC/B,IAAI,KAAKrD,UAAU,CAACI,KAAK,CAAC,IAAIwK,wBAAwB,EAAE+D,eAAe,EAAE;IACxL,MAAMC,OAAO,GAAGF,OAAO,CAACN,MAAM,CAAC,GAAG,CAAC;IACnC,MAAMS,QAAQ,GAAGD,OAAO,CAACE,MAAM,CAAC,MAAM,CAAC,CAACT,IAAI,CAAC,OAAO,EAAE,kBAAkB,CAAC;IACzE,MAAMtJ,IAAI,GAAG6J,OAAO,CAACR,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,EAAEX,GAAG,CAAC,CAACW,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAG,EAAE,CAAC,CAACyB,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAACtJ,IAAI,CAACK,OAAO,CAAChC,EAAE,CAAC;IAClI,MAAM2L,IAAI,GAAGhK,IAAI,CAACoC,IAAI,CAAC,CAAC,EAAE6H,OAAO,CAAC,CAAC;IACnC,IAAID,IAAI,EAAE;MACRF,QAAQ,CAACR,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACiB,aAAa,GAAGF,IAAI,CAACG,KAAK,GAAG,CAAC,GAAGlE,EAAE,CAAC,CAACqD,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAG,IAAI,CAAC,CAACyB,IAAI,CAAC,OAAO,EAAEU,IAAI,CAACG,KAAK,GAAG,CAAC,GAAGlE,EAAE,CAAC,CAACqD,IAAI,CAAC,QAAQ,EAAEU,IAAI,CAACI,MAAM,GAAG,CAAC,GAAGnE,EAAE,CAAC;MACjL,IAAIvC,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE;QAChCoG,QAAQ,CAACR,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACnB,CAAC,IAAIkC,IAAI,CAACG,KAAK,GAAG,CAAC,GAAGnE,EAAE,GAAG,CAAC,CAAC,CAAC,CAACsD,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAG,EAAE,CAAC;QACjG7H,IAAI,CAACsJ,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACnB,CAAC,IAAIkC,IAAI,CAACG,KAAK,GAAG,CAAC,GAAGnE,EAAE,CAAC,CAAC,CAACsD,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAGmC,IAAI,CAACI,MAAM,GAAG,EAAE,CAAC;MACzG,CAAC,MAAM;QACLpK,IAAI,CAACsJ,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACiB,aAAa,GAAGF,IAAI,CAACG,KAAK,GAAG,CAAC,CAAC;MAC/D;MACA,IAAItE,wBAAwB,CAACwE,iBAAiB,EAAE;QAC9C,IAAI3G,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE;UAChC1D,IAAI,CAACsJ,IAAI,CACP,WAAW,EACX,cAAc,GAAGL,cAAc,CAACnB,CAAC,GAAG,IAAI,GAAGmB,cAAc,CAACpB,CAAC,GAAG,GAChE,CAAC;UACDiC,QAAQ,CAACR,IAAI,CACX,WAAW,EACX,cAAc,GAAGL,cAAc,CAACnB,CAAC,GAAG,IAAI,GAAGmB,cAAc,CAACpB,CAAC,GAAG,GAChE,CAAC;QACH,CAAC,MAAM;UACL,MAAMyC,GAAG,GAAG,CAAC,GAAG,GAAG,CAACN,IAAI,CAACG,KAAK,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG;UAC/C,MAAMI,GAAG,GAAG,EAAE,GAAGP,IAAI,CAACG,KAAK,GAAG,EAAE,GAAG,GAAG;UACtCN,OAAO,CAACP,IAAI,CACV,WAAW,EACX,YAAY,GAAGgB,GAAG,GAAG,IAAI,GAAGC,GAAG,GAAG,gBAAgB,GAAG5B,GAAG,GAAG,IAAI,GAAGM,cAAc,CAACpB,CAAC,GAAG,GACvF,CAAC;QACH;MACF;IACF;EACF;AACF,CAAC,EAAE,iBAAiB,CAAC;AACrB,IAAI2C,cAAc,GAAG,eAAgBvQ,MAAM,CAAC,CAAC0P,OAAO,EAAEtJ,OAAO,EAAE4I,cAAc,EAAEN,GAAG,KAAK;EACrF,IAAItI,OAAO,CAAC9B,IAAI,CAAC7B,MAAM,GAAG,CAAC,EAAE;IAC3B,IAAI+N,OAAO,GAAG,CAAC;IACf,IAAIC,eAAe,GAAG,CAAC;IACvB,IAAIC,gBAAgB,GAAG,CAAC;IACxB,MAAMC,WAAW,GAAG,EAAE;IACtB,KAAK,MAAMC,QAAQ,IAAIxK,OAAO,CAAC9B,IAAI,CAACuM,OAAO,CAAC,CAAC,EAAE;MAC7C,MAAMC,IAAI,GAAGpB,OAAO,CAACI,MAAM,CAAC,SAAS,CAAC;MACtC,MAAMiB,IAAI,GAAGrB,OAAO,CAACN,MAAM,CAAC,QAAQ,CAAC;MACrC,MAAM1K,GAAG,GAAGgL,OAAO,CAACN,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACpB,CAAC,GAAG,EAAE,GAAG4C,OAAO,CAAC,CAACnB,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAACtJ,IAAI,CAAC6K,QAAQ,CAAC;MACvH,MAAMI,OAAO,GAAGtM,GAAG,CAACyD,IAAI,CAAC,CAAC,EAAE6H,OAAO,CAAC,CAAC;MACrC,IAAI,CAACgB,OAAO,EAAE;QACZ,MAAM,IAAI/L,KAAK,CAAC,oBAAoB,CAAC;MACvC;MACAwL,eAAe,GAAGnC,IAAI,CAACC,GAAG,CAACkC,eAAe,EAAEO,OAAO,CAACd,KAAK,CAAC;MAC1DQ,gBAAgB,GAAGpC,IAAI,CAACC,GAAG,CAACmC,gBAAgB,EAAEM,OAAO,CAACb,MAAM,CAAC;MAC7DzL,GAAG,CAAC2K,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACiB,aAAa,GAAGe,OAAO,CAACd,KAAK,GAAG,CAAC,CAAC;MAC/DS,WAAW,CAACvN,IAAI,CAAC;QACfsB,GAAG;QACHqM,IAAI;QACJD,IAAI;QACJN;MACF,CAAC,CAAC;MACFA,OAAO,IAAI,EAAE;IACf;IACA,KAAK,MAAM;MAAE9L,GAAG;MAAEqM,IAAI;MAAED,IAAI;MAAEN,OAAO,EAAES;IAAS,CAAC,IAAIN,WAAW,EAAE;MAChE,MAAMO,EAAE,GAAGR,gBAAgB,GAAG,CAAC;MAC/B,MAAMS,EAAE,GAAGnC,cAAc,CAACpB,CAAC,GAAG,IAAI,GAAGqD,QAAQ;MAC7CH,IAAI,CAACzB,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,CAACA,IAAI,CACtC,QAAQ,EACR;AACR,QAAQX,GAAG,GAAG+B,eAAe,GAAG,CAAC,GAAG1E,EAAE,GAAG,CAAC,IAAIoF,EAAE,GAAGnF,EAAE;AACrD,QAAQ0C,GAAG,GAAG+B,eAAe,GAAG,CAAC,GAAG1E,EAAE,GAAG,CAAC,IAAIoF,EAAE,GAAGnF,EAAE;AACrD,QAAQgD,cAAc,CAACiB,aAAa,GAAGQ,eAAe,GAAG,CAAC,GAAG1E,EAAE,IAAIoF,EAAE,GAAGD,EAAE,GAAGlF,EAAE;AAC/E,QAAQgD,cAAc,CAACiB,aAAa,GAAGQ,eAAe,GAAG,CAAC,GAAG1E,EAAE,IAAIoF,EAAE,GAAGD,EAAE,GAAGlF,EAAE;AAC/E,QAAQgD,cAAc,CAACiB,aAAa,GAAGQ,eAAe,GAAG,CAAC,GAAG1E,EAAE,IAAIoF,EAAE,GAAGD,EAAE,GAAGlF,EAAE;AAC/E,QAAQgD,cAAc,CAACiB,aAAa,GAAGQ,eAAe,GAAG,CAAC,GAAG1E,EAAE,IAAIoF,EAAE,GAAGD,EAAE,GAAGlF,EAAE,EACzE,CAAC;MACD+E,IAAI,CAAC1B,IAAI,CAAC,IAAI,EAAE8B,EAAE,CAAC,CAAC9B,IAAI,CAAC,IAAI,EAAEX,GAAG,GAAG+B,eAAe,GAAG,CAAC,GAAG1E,EAAE,GAAG,CAAC,CAAC,CAACsD,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAACA,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC;MAC3G,IAAI5F,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE;QAChC,MAAM2H,OAAO,GAAG1C,GAAG,GAAGuC,QAAQ;QAC9BH,IAAI,CAACzB,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,CAACA,IAAI,CACtC,QAAQ,EACR;AACV,UAAUL,cAAc,CAACnB,CAAC,IAAIuD,OAAO,GAAG,CAAC;AACzC,UAAUpC,cAAc,CAACnB,CAAC,IAAIuD,OAAO,GAAG,CAAC;AACzC,UAAUpC,cAAc,CAACnB,CAAC,GAAGhC,aAAa,IAAIuF,OAAO,GAAGF,EAAE,GAAG,CAAC;AAC9D,UAAUlC,cAAc,CAACnB,CAAC,GAAGhC,aAAa,GAAG4E,eAAe,GAAG,CAAC,IAAIW,OAAO,GAAGF,EAAE,GAAG,CAAC;AACpF,UAAUlC,cAAc,CAACnB,CAAC,GAAGhC,aAAa,GAAG4E,eAAe,GAAG,CAAC,IAAIW,OAAO,GAAGF,EAAE,GAAG,CAAC;AACpF,UAAUlC,cAAc,CAACnB,CAAC,GAAGhC,aAAa,IAAIuF,OAAO,GAAGF,EAAE,GAAG,CAAC,EACtD,CAAC,CAAC7B,IAAI,CAAC,WAAW,EAAE,8BAA8B,GAAGL,cAAc,CAACnB,CAAC,GAAG,GAAG,GAAGa,GAAG,GAAG,GAAG,CAAC;QACxFqC,IAAI,CAAC1B,IAAI,CAAC,IAAI,EAAEL,cAAc,CAACnB,CAAC,GAAG9B,EAAE,GAAG,CAAC,CAAC,CAACsD,IAAI,CAAC,IAAI,EAAE+B,OAAO,CAAC,CAAC/B,IAAI,CAAC,WAAW,EAAE,8BAA8B,GAAGL,cAAc,CAACnB,CAAC,GAAG,GAAG,GAAGa,GAAG,GAAG,GAAG,CAAC;QACrJhK,GAAG,CAAC2K,IAAI,CAAC,GAAG,EAAEL,cAAc,CAACnB,CAAC,GAAG,CAAC,CAAC,CAACwB,IAAI,CAAC,GAAG,EAAE+B,OAAO,GAAG,CAAC,CAAC,CAAC/B,IAAI,CAAC,WAAW,EAAE,8BAA8B,GAAGL,cAAc,CAACnB,CAAC,GAAG,GAAG,GAAGa,GAAG,GAAG,GAAG,CAAC;MACnJ;IACF;EACF;AACF,CAAC,EAAE,gBAAgB,CAAC;AACpB,IAAI2C,kBAAkB,GAAG,eAAgBrR,MAAM,CAAEoG,OAAO,IAAK;EAC3D,MAAM+I,gBAAgB,GAAG/I,OAAO,CAACC,UAAU,IAAID,OAAO,CAAC/B,IAAI;EAC3D,QAAQ8K,gBAAgB;IACtB,KAAKnO,UAAU,CAACC,MAAM;MACpB,OAAO,eAAe;IACxB,KAAKD,UAAU,CAACE,OAAO;MACrB,OAAO,gBAAgB;IACzB,KAAKF,UAAU,CAACG,SAAS;MACvB,OAAO,kBAAkB;IAC3B,KAAKH,UAAU,CAACI,KAAK;MACnB,OAAO,cAAc;IACvB,KAAKJ,UAAU,CAACK,WAAW;MACzB,OAAO,oBAAoB;IAC7B;MACE,OAAO,eAAe;EAC1B;AACF,CAAC,EAAE,oBAAoB,CAAC;AACxB,IAAIiQ,iBAAiB,GAAG,eAAgBtR,MAAM,CAAC,CAACoG,OAAO,EAAE9C,IAAI,EAAEoL,GAAG,EAAE6C,UAAU,KAAK;EACjF,MAAMC,qBAAqB,GAAG;IAAE3D,CAAC,EAAE,CAAC;IAAED,CAAC,EAAE;EAAE,CAAC;EAC5C,IAAIxH,OAAO,CAACxB,OAAO,CAACnC,MAAM,GAAG,CAAC,EAAE;IAC9B,MAAM8K,aAAa,GAAGD,iBAAiB,CAAClH,OAAO,CAACxB,OAAO,CAAC;IACxD,IAAI2I,aAAa,EAAE;MACjB,MAAMI,cAAc,GAAG4D,UAAU,CAAC7L,GAAG,CAAC6H,aAAa,CAAC,IAAIiE,qBAAqB;MAC7E,IAAIlO,IAAI,KAAK,IAAI,EAAE;QACjB,OAAOqK,cAAc,CAACC,CAAC,GAAG9B,WAAW;MACvC,CAAC,MAAM,IAAIxI,IAAI,KAAK,IAAI,EAAE;QACxB,MAAMmO,eAAe,GAAGF,UAAU,CAAC7L,GAAG,CAACU,OAAO,CAAChC,EAAE,CAAC,IAAIoN,qBAAqB;QAC3E,OAAOC,eAAe,CAAC7D,CAAC,GAAG9B,WAAW;MACxC,CAAC,MAAM;QACL,OAAO6B,cAAc,CAACE,CAAC,GAAG/B,WAAW;MACvC;IACF;EACF,CAAC,MAAM;IACL,IAAIxI,IAAI,KAAK,IAAI,EAAE;MACjB,OAAO8I,UAAU;IACnB,CAAC,MAAM,IAAI9I,IAAI,KAAK,IAAI,EAAE;MACxB,MAAMmO,eAAe,GAAGF,UAAU,CAAC7L,GAAG,CAACU,OAAO,CAAChC,EAAE,CAAC,IAAIoN,qBAAqB;MAC3E,OAAOC,eAAe,CAAC7D,CAAC,GAAG9B,WAAW;IACxC,CAAC,MAAM;MACL,OAAO,CAAC;IACV;EACF;EACA,OAAO,CAAC;AACV,CAAC,EAAE,mBAAmB,CAAC;AACvB,IAAI4F,iBAAiB,GAAG,eAAgB1R,MAAM,CAAC,CAACoG,OAAO,EAAEsI,GAAG,EAAEiD,iBAAiB,KAAK;EAClF,MAAM1B,aAAa,GAAGxG,GAAG,KAAK,IAAI,IAAIkI,iBAAiB,GAAGjD,GAAG,GAAGA,GAAG,GAAG7C,aAAa;EACnF,MAAM+B,CAAC,GAAGnE,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,GAAGwG,aAAa,GAAG/D,SAAS,CAACxG,GAAG,CAACU,OAAO,CAACvB,MAAM,CAAC,EAAE6J,GAAG;EAC3F,MAAMb,CAAC,GAAGpE,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,GAAGyC,SAAS,CAACxG,GAAG,CAACU,OAAO,CAACvB,MAAM,CAAC,EAAE6J,GAAG,GAAGuB,aAAa;EAC3F,IAAIpC,CAAC,KAAK,KAAK,CAAC,IAAID,CAAC,KAAK,KAAK,CAAC,EAAE;IAChC,MAAM,IAAI3I,KAAK,CAAC,sCAAsCmB,OAAO,CAAChC,EAAE,EAAE,CAAC;EACrE;EACA,OAAO;IAAEyJ,CAAC;IAAED,CAAC;IAAEqC;EAAc,CAAC;AAChC,CAAC,EAAE,mBAAmB,CAAC;AACvB,IAAI2B,WAAW,GAAG,eAAgB5R,MAAM,CAAC,CAAC6R,GAAG,EAAEhQ,OAAO,EAAEiQ,WAAW,KAAK;EACtE,IAAI,CAAClG,wBAAwB,EAAE;IAC7B,MAAM,IAAI3G,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,MAAM8J,QAAQ,GAAG8C,GAAG,CAACzC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,OAAO,EAAE,gBAAgB,CAAC;EAChE,MAAMK,OAAO,GAAGmC,GAAG,CAACzC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC;EAC9D,IAAIX,GAAG,GAAGjF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,GAAG2C,UAAU,GAAG,CAAC;EACvD,MAAM2F,IAAI,GAAG,CAAC,GAAGlQ,OAAO,CAACkQ,IAAI,CAAC,CAAC,CAAC;EAChC,MAAMJ,iBAAiB,GAAG/F,wBAAwB,EAAEoG,eAAe,IAAI,KAAK;EAC5E,MAAMC,QAAQ,GAAG,eAAgBjS,MAAM,CAAC,CAAC6I,CAAC,EAAEC,CAAC,KAAK;IAChD,MAAMoJ,IAAI,GAAGrQ,OAAO,CAAC6D,GAAG,CAACmD,CAAC,CAAC,EAAEvG,GAAG;IAChC,MAAM6P,IAAI,GAAGtQ,OAAO,CAAC6D,GAAG,CAACoD,CAAC,CAAC,EAAExG,GAAG;IAChC,OAAO4P,IAAI,KAAK,KAAK,CAAC,IAAIC,IAAI,KAAK,KAAK,CAAC,GAAGD,IAAI,GAAGC,IAAI,GAAG,CAAC;EAC7D,CAAC,EAAE,UAAU,CAAC;EACd,IAAIlE,UAAU,GAAG8D,IAAI,CAACnJ,IAAI,CAACqJ,QAAQ,CAAC;EACpC,IAAIxI,GAAG,KAAK,IAAI,EAAE;IAChB,IAAIkI,iBAAiB,EAAE;MACrB3D,gBAAgB,CAACC,UAAU,EAAEpM,OAAO,EAAE6M,GAAG,CAAC;IAC5C;IACAT,UAAU,GAAGA,UAAU,CAAC4C,OAAO,CAAC,CAAC;EACnC;EACA5C,UAAU,CAAClG,OAAO,CAAE5E,GAAG,IAAK;IAC1B,MAAMiD,OAAO,GAAGvE,OAAO,CAAC6D,GAAG,CAACvC,GAAG,CAAC;IAChC,IAAI,CAACiD,OAAO,EAAE;MACZ,MAAM,IAAInB,KAAK,CAAC,4BAA4B9B,GAAG,EAAE,CAAC;IACpD;IACA,IAAIwO,iBAAiB,EAAE;MACrBjD,GAAG,GAAG4C,iBAAiB,CAAClL,OAAO,EAAEqD,GAAG,EAAEiF,GAAG,EAAEvC,SAAS,CAAC;IACvD;IACA,MAAM6C,cAAc,GAAG0C,iBAAiB,CAACtL,OAAO,EAAEsI,GAAG,EAAEiD,iBAAiB,CAAC;IACzE,IAAIG,WAAW,EAAE;MACf,MAAM7C,SAAS,GAAGoC,kBAAkB,CAACjL,OAAO,CAAC;MAC7C,MAAM+I,gBAAgB,GAAG/I,OAAO,CAACC,UAAU,IAAID,OAAO,CAAC/B,IAAI;MAC3D,MAAM6K,WAAW,GAAGhD,SAAS,CAACxG,GAAG,CAACU,OAAO,CAACvB,MAAM,CAAC,EAAE2C,KAAK,IAAI,CAAC;MAC7DsH,gBAAgB,CAACC,QAAQ,EAAE3I,OAAO,EAAE4I,cAAc,EAAEC,SAAS,EAAEC,WAAW,EAAEC,gBAAgB,CAAC;MAC7FM,eAAe,CAACC,OAAO,EAAEtJ,OAAO,EAAE4I,cAAc,EAAEN,GAAG,CAAC;MACtD6B,cAAc,CAACb,OAAO,EAAEtJ,OAAO,EAAE4I,cAAc,EAAEN,GAAG,CAAC;IACvD;IACA,IAAIjF,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,EAAE;MAChC0C,SAAS,CAACrH,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAE;QAAEyJ,CAAC,EAAEmB,cAAc,CAACnB,CAAC;QAAED,CAAC,EAAEoB,cAAc,CAACiB;MAAc,CAAC,CAAC;IACrF,CAAC,MAAM;MACL9D,SAAS,CAACrH,GAAG,CAACsB,OAAO,CAAChC,EAAE,EAAE;QAAEyJ,CAAC,EAAEmB,cAAc,CAACiB,aAAa;QAAErC,CAAC,EAAEoB,cAAc,CAACpB;MAAE,CAAC,CAAC;IACrF;IACAc,GAAG,GAAGjF,GAAG,KAAK,IAAI,IAAIkI,iBAAiB,GAAGjD,GAAG,GAAG5C,WAAW,GAAG4C,GAAG,GAAG5C,WAAW,GAAGD,aAAa;IAC/F,IAAI6C,GAAG,GAAGnC,MAAM,EAAE;MAChBA,MAAM,GAAGmC,GAAG;IACd;EACF,CAAC,CAAC;AACJ,CAAC,EAAE,aAAa,CAAC;AACjB,IAAI0D,kBAAkB,GAAG,eAAgBpS,MAAM,CAAC,CAACqS,OAAO,EAAEC,OAAO,EAAEC,EAAE,EAAEC,EAAE,EAAEC,UAAU,KAAK;EACxF,MAAMC,iBAAiB,GAAGjJ,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,GAAG8I,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,GAAG0E,EAAE,CAAC3E,CAAC,GAAG4E,EAAE,CAAC5E,CAAC;EAClF,MAAM+E,gBAAgB,GAAGD,iBAAiB,GAAGJ,OAAO,CAACzN,MAAM,GAAGwN,OAAO,CAACxN,MAAM;EAC5E,MAAM+N,oBAAoB,GAAG,eAAgB5S,MAAM,CAAE6N,CAAC,IAAKA,CAAC,CAAChJ,MAAM,KAAK8N,gBAAgB,EAAE,sBAAsB,CAAC;EACjH,MAAME,gBAAgB,GAAG,eAAgB7S,MAAM,CAAE6N,CAAC,IAAKA,CAAC,CAACvL,GAAG,GAAG+P,OAAO,CAAC/P,GAAG,IAAIuL,CAAC,CAACvL,GAAG,GAAGgQ,OAAO,CAAChQ,GAAG,EAAE,kBAAkB,CAAC;EACtH,OAAO,CAAC,GAAGmQ,UAAU,CAAChK,MAAM,CAAC,CAAC,CAAC,CAACqK,IAAI,CAAEC,OAAO,IAAK;IAChD,OAAOF,gBAAgB,CAACE,OAAO,CAAC,IAAIH,oBAAoB,CAACG,OAAO,CAAC;EACnE,CAAC,CAAC;AACJ,CAAC,EAAE,oBAAoB,CAAC;AACxB,IAAIC,QAAQ,GAAG,eAAgBhT,MAAM,CAAC,CAACiT,EAAE,EAAEC,EAAE,EAAEC,KAAK,GAAG,CAAC,KAAK;EAC3D,MAAMC,SAAS,GAAGH,EAAE,GAAG3E,IAAI,CAAC+E,GAAG,CAACJ,EAAE,GAAGC,EAAE,CAAC,GAAG,CAAC;EAC5C,IAAIC,KAAK,GAAG,CAAC,EAAE;IACb,OAAOC,SAAS;EAClB;EACA,MAAME,EAAE,GAAGhH,KAAK,CAACiH,KAAK,CAAEC,IAAI,IAAKlF,IAAI,CAAC+E,GAAG,CAACG,IAAI,GAAGJ,SAAS,CAAC,IAAI,EAAE,CAAC;EAClE,IAAIE,EAAE,EAAE;IACNhH,KAAK,CAAClJ,IAAI,CAACgQ,SAAS,CAAC;IACrB,OAAOA,SAAS;EAClB;EACA,MAAMK,IAAI,GAAGnF,IAAI,CAAC+E,GAAG,CAACJ,EAAE,GAAGC,EAAE,CAAC;EAC9B,OAAOF,QAAQ,CAACC,EAAE,EAAEC,EAAE,GAAGO,IAAI,GAAG,CAAC,EAAEN,KAAK,GAAG,CAAC,CAAC;AAC/C,CAAC,EAAE,UAAU,CAAC;AACd,IAAIO,SAAS,GAAG,eAAgB1T,MAAM,CAAC,CAAC6R,GAAG,EAAEQ,OAAO,EAAEC,OAAO,EAAEG,UAAU,KAAK;EAC5E,MAAMF,EAAE,GAAGpG,SAAS,CAACzG,GAAG,CAAC2M,OAAO,CAACjO,EAAE,CAAC;EACpC,MAAMoO,EAAE,GAAGrG,SAAS,CAACzG,GAAG,CAAC4M,OAAO,CAAClO,EAAE,CAAC;EACpC,IAAImO,EAAE,KAAK,KAAK,CAAC,IAAIC,EAAE,KAAK,KAAK,CAAC,EAAE;IAClC,MAAM,IAAIvN,KAAK,CAAC,0CAA0CoN,OAAO,CAACjO,EAAE,QAAQkO,OAAO,CAAClO,EAAE,EAAE,CAAC;EAC3F;EACA,MAAMuP,mBAAmB,GAAGvB,kBAAkB,CAACC,OAAO,EAAEC,OAAO,EAAEC,EAAE,EAAEC,EAAE,EAAEC,UAAU,CAAC;EACpF,IAAImB,GAAG,GAAG,EAAE;EACZ,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,aAAa,GAAG9H,SAAS,CAACxG,GAAG,CAAC4M,OAAO,CAACzN,MAAM,CAAC,EAAE2C,KAAK;EACxD,IAAI8K,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;IAC1EoP,aAAa,GAAG9H,SAAS,CAACxG,GAAG,CAAC2M,OAAO,CAACxN,MAAM,CAAC,EAAE2C,KAAK;EACtD;EACA,IAAIyM,OAAO;EACX,IAAIN,mBAAmB,EAAE;IACvBC,GAAG,GAAG,mBAAmB;IACzBC,IAAI,GAAG,mBAAmB;IAC1BC,MAAM,GAAG,EAAE;IACXC,MAAM,GAAG,EAAE;IACX,MAAMG,KAAK,GAAG3B,EAAE,CAAC3E,CAAC,GAAG4E,EAAE,CAAC5E,CAAC,GAAGoF,QAAQ,CAACT,EAAE,CAAC3E,CAAC,EAAE4E,EAAE,CAAC5E,CAAC,CAAC,GAAGoF,QAAQ,CAACR,EAAE,CAAC5E,CAAC,EAAE2E,EAAE,CAAC3E,CAAC,CAAC;IACvE,MAAMuG,KAAK,GAAG5B,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,GAAGmF,QAAQ,CAACT,EAAE,CAAC1E,CAAC,EAAE2E,EAAE,CAAC3E,CAAC,CAAC,GAAGmF,QAAQ,CAACR,EAAE,CAAC3E,CAAC,EAAE0E,EAAE,CAAC1E,CAAC,CAAC;IACvE,IAAIpE,GAAG,KAAK,IAAI,EAAE;MAChB,IAAI8I,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,EAAE;QACfoG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAMuG,KAAK,GAAGL,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIiG,IAAI,IAAIM,KAAK,IAAI5B,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMI,KAAK,IAAI3B,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAIF,GAAG,IAAIO,KAAK,GAAGJ,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MAC5K,CAAC,MAAM;QACLoG,aAAa,GAAG9H,SAAS,CAACxG,GAAG,CAAC2M,OAAO,CAACxN,MAAM,CAAC,EAAE2C,KAAK;QACpDyM,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAMuG,KAAK,GAAGL,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIgG,GAAG,IAAIO,KAAK,IAAI5B,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMI,KAAK,IAAI3B,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAID,IAAI,IAAIM,KAAK,GAAGJ,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MAC5K;IACF,CAAC,MAAM,IAAInE,GAAG,KAAK,IAAI,EAAE;MACvB,IAAI8I,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,EAAE;QACfoG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAMuG,KAAK,GAAGL,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIgG,GAAG,IAAIO,KAAK,IAAI5B,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMI,KAAK,IAAI3B,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAID,IAAI,IAAIM,KAAK,GAAGJ,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MAC5K,CAAC,MAAM;QACLoG,aAAa,GAAG9H,SAAS,CAACxG,GAAG,CAAC2M,OAAO,CAACxN,MAAM,CAAC,EAAE2C,KAAK;QACpDyM,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAMuG,KAAK,GAAGL,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIiG,IAAI,IAAIM,KAAK,IAAI5B,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMI,KAAK,IAAI3B,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAIF,GAAG,IAAIO,KAAK,GAAGJ,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MAC5K;IACF,CAAC,MAAM;MACL,IAAI2E,EAAE,CAAC3E,CAAC,GAAG4E,EAAE,CAAC5E,CAAC,EAAE;QACfqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAIqG,KAAK,GAAGJ,MAAM,IAAIF,GAAG,IAAIrB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIG,KAAK,MAAM1B,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAII,KAAK,IAAIL,IAAI,IAAIrB,EAAE,CAAC3E,CAAC,IAAIqG,KAAK,GAAGH,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MAC5K,CAAC,MAAM;QACLoG,aAAa,GAAG9H,SAAS,CAACxG,GAAG,CAAC2M,OAAO,CAACxN,MAAM,CAAC,EAAE2C,KAAK;QACpDyM,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAIqG,KAAK,GAAGJ,MAAM,IAAID,IAAI,IAAItB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIG,KAAK,MAAM1B,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAII,KAAK,IAAIN,GAAG,IAAIpB,EAAE,CAAC3E,CAAC,IAAIqG,KAAK,GAAGH,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MAC5K;IACF;EACF,CAAC,MAAM;IACLgG,GAAG,GAAG,mBAAmB;IACzBC,IAAI,GAAG,mBAAmB;IAC1BC,MAAM,GAAG,EAAE;IACXC,MAAM,GAAG,EAAE;IACX,IAAItK,GAAG,KAAK,IAAI,EAAE;MAChB,IAAI8I,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,EAAE;QACf,IAAIyE,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1EqP,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAIF,GAAG,IAAIrB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G,CAAC,MAAM;UACLqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIiG,IAAI,IAAIrB,EAAE,CAAC3E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC7G;MACF;MACA,IAAI2E,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,EAAE;QACf+F,GAAG,GAAG,mBAAmB;QACzBC,IAAI,GAAG,mBAAmB;QAC1BC,MAAM,GAAG,EAAE;QACXC,MAAM,GAAG,EAAE;QACX,IAAIzB,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1EqP,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAID,IAAI,IAAItB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC7G,CAAC,MAAM;UACLqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIgG,GAAG,IAAIpB,EAAE,CAAC3E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G;MACF;MACA,IAAI2E,EAAE,CAAC1E,CAAC,KAAK2E,EAAE,CAAC3E,CAAC,EAAE;QACjBoG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MACjD;IACF,CAAC,MAAM,IAAInE,GAAG,KAAK,IAAI,EAAE;MACvB,IAAI8I,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,EAAE;QACf,IAAIyE,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1EqP,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAID,IAAI,IAAItB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC7G,CAAC,MAAM;UACLqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIgG,GAAG,IAAIpB,EAAE,CAAC3E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G;MACF;MACA,IAAI2E,EAAE,CAAC1E,CAAC,GAAG2E,EAAE,CAAC3E,CAAC,EAAE;QACf+F,GAAG,GAAG,mBAAmB;QACzBC,IAAI,GAAG,mBAAmB;QAC1BC,MAAM,GAAG,EAAE;QACXC,MAAM,GAAG,EAAE;QACX,IAAIzB,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1EqP,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAIF,GAAG,IAAIrB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G,CAAC,MAAM;UACLqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIgG,GAAG,IAAIpB,EAAE,CAAC3E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G;MACF;MACA,IAAI2E,EAAE,CAAC1E,CAAC,KAAK2E,EAAE,CAAC3E,CAAC,EAAE;QACjBoG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MACjD;IACF,CAAC,MAAM;MACL,IAAI2E,EAAE,CAAC3E,CAAC,GAAG4E,EAAE,CAAC5E,CAAC,EAAE;QACf,IAAI0E,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1EqP,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIiG,IAAI,IAAIrB,EAAE,CAAC3E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC7G,CAAC,MAAM;UACLqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAIF,GAAG,IAAIrB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G;MACF;MACA,IAAI2E,EAAE,CAAC3E,CAAC,GAAG4E,EAAE,CAAC5E,CAAC,EAAE;QACf,IAAI0E,OAAO,CAACjO,IAAI,KAAKrD,UAAU,CAACI,KAAK,IAAIiR,OAAO,CAACjO,EAAE,KAAKkO,OAAO,CAAC1N,OAAO,CAAC,CAAC,CAAC,EAAE;UAC1EqP,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,GAAGiG,MAAM,IAAIvB,EAAE,CAAC3E,CAAC,IAAIgG,GAAG,IAAIpB,EAAE,CAAC3E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,GAAGmG,MAAM,MAAMvB,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC5G,CAAC,MAAM;UACLqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM2E,EAAE,CAAC1E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,GAAGkG,MAAM,IAAID,IAAI,IAAItB,EAAE,CAAC1E,CAAC,GAAGkG,MAAM,IAAIvB,EAAE,CAAC5E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;QAC7G;MACF;MACA,IAAI2E,EAAE,CAAC3E,CAAC,KAAK4E,EAAE,CAAC5E,CAAC,EAAE;QACjBqG,OAAO,GAAG,KAAK1B,EAAE,CAAC1E,CAAC,IAAI0E,EAAE,CAAC3E,CAAC,MAAM4E,EAAE,CAAC3E,CAAC,IAAI2E,EAAE,CAAC5E,CAAC,EAAE;MACjD;IACF;EACF;EACA,IAAIqG,OAAO,KAAK,KAAK,CAAC,EAAE;IACtB,MAAM,IAAIhP,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA4M,GAAG,CAACzC,MAAM,CAAC,MAAM,CAAC,CAACC,IAAI,CAAC,GAAG,EAAE4E,OAAO,CAAC,CAAC5E,IAAI,CAAC,OAAO,EAAE,aAAa,GAAG2E,aAAa,GAAG/H,iBAAiB,CAAC;AACxG,CAAC,EAAE,WAAW,CAAC;AACf,IAAImI,UAAU,GAAG,eAAgBpU,MAAM,CAAC,CAAC6R,GAAG,EAAEhQ,OAAO,KAAK;EACxD,MAAMwS,OAAO,GAAGxC,GAAG,CAACzC,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC;EAC9D,CAAC,GAAGxN,OAAO,CAACkQ,IAAI,CAAC,CAAC,CAAC,CAAChK,OAAO,CAAE5E,GAAG,IAAK;IACnC,MAAMiD,OAAO,GAAGvE,OAAO,CAAC6D,GAAG,CAACvC,GAAG,CAAC;IAChC,IAAIiD,OAAO,CAACxB,OAAO,IAAIwB,OAAO,CAACxB,OAAO,CAACnC,MAAM,GAAG,CAAC,EAAE;MACjD2D,OAAO,CAACxB,OAAO,CAACmD,OAAO,CAAEpB,MAAM,IAAK;QAClC+M,SAAS,CAACW,OAAO,EAAExS,OAAO,CAAC6D,GAAG,CAACiB,MAAM,CAAC,EAAEP,OAAO,EAAEvE,OAAO,CAAC;MAC3D,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ,CAAC,EAAE,YAAY,CAAC;AAChB,IAAIyS,YAAY,GAAG,eAAgBtU,MAAM,CAAC,CAAC6R,GAAG,EAAE1P,QAAQ,KAAK;EAC3D,MAAMoS,CAAC,GAAG1C,GAAG,CAACzC,MAAM,CAAC,GAAG,CAAC;EACzBjN,QAAQ,CAAC4F,OAAO,CAAC,CAACX,OAAO,EAAEI,KAAK,KAAK;IACnC,MAAMgN,mBAAmB,GAAGhN,KAAK,GAAGyE,iBAAiB;IACrD,MAAMyC,GAAG,GAAGxC,SAAS,CAACxG,GAAG,CAAC0B,OAAO,CAACnF,IAAI,CAAC,EAAEyM,GAAG;IAC5C,IAAIA,GAAG,KAAK,KAAK,CAAC,EAAE;MAClB,MAAM,IAAIzJ,KAAK,CAAC,iCAAiCmC,OAAO,CAACnF,IAAI,EAAE,CAAC;IAClE;IACA,MAAM6F,IAAI,GAAGyM,CAAC,CAACnF,MAAM,CAAC,MAAM,CAAC;IAC7BtH,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClBvH,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEX,GAAG,CAAC;IACpB5G,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAE9C,MAAM,CAAC;IACvBzE,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEX,GAAG,CAAC;IACpB5G,IAAI,CAACuH,IAAI,CAAC,OAAO,EAAE,eAAe,GAAGmF,mBAAmB,CAAC;IACzD,IAAI/K,GAAG,KAAK,IAAI,EAAE;MAChB3B,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEjD,UAAU,CAAC;MAC3BtE,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEX,GAAG,CAAC;MACpB5G,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAE9C,MAAM,CAAC;MACvBzE,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEX,GAAG,CAAC;IACtB,CAAC,MAAM,IAAIjF,GAAG,KAAK,IAAI,EAAE;MACvB3B,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAE9C,MAAM,CAAC;MACvBzE,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEX,GAAG,CAAC;MACpB5G,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEjD,UAAU,CAAC;MAC3BtE,IAAI,CAACuH,IAAI,CAAC,IAAI,EAAEX,GAAG,CAAC;IACtB;IACApC,KAAK,CAAClJ,IAAI,CAACsL,GAAG,CAAC;IACf,MAAMzM,IAAI,GAAGmF,OAAO,CAACnF,IAAI;IACzB,MAAMwS,YAAY,GAAGhI,QAAQ,CAACxK,IAAI,CAAC;IACnC,MAAMyS,GAAG,GAAGH,CAAC,CAACzE,MAAM,CAAC,MAAM,CAAC;IAC5B,MAAM6E,WAAW,GAAGJ,CAAC,CAACzE,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC;IAC9D,MAAMpH,KAAK,GAAG0M,WAAW,CAAC7E,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAAC,OAAO,EAAE,oBAAoB,GAAGmF,mBAAmB,CAAC;IAC/FvM,KAAK,CAACE,IAAI,CAAC,CAAC,CAACkF,WAAW,CAACoH,YAAY,CAAC;IACtC,MAAM1E,IAAI,GAAG0E,YAAY,CAACzE,OAAO,CAAC,CAAC;IACnC0E,GAAG,CAACrF,IAAI,CAAC,OAAO,EAAE,sBAAsB,GAAGmF,mBAAmB,CAAC,CAACnF,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAACA,IAAI,CAAC,GAAG,EAAE,CAACU,IAAI,CAACG,KAAK,GAAG,CAAC,IAAItE,wBAAwB,EAAEwE,iBAAiB,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAACf,IAAI,CAAC,GAAG,EAAE,CAACU,IAAI,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAACd,IAAI,CAAC,OAAO,EAAEU,IAAI,CAACG,KAAK,GAAG,EAAE,CAAC,CAACb,IAAI,CAAC,QAAQ,EAAEU,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;IACvRlI,KAAK,CAACoH,IAAI,CACR,WAAW,EACX,YAAY,IAAI,CAACU,IAAI,CAACG,KAAK,GAAG,EAAE,IAAItE,wBAAwB,EAAEwE,iBAAiB,KAAK,IAAI,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI1B,GAAG,GAAGqB,IAAI,CAACI,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAC7I,CAAC;IACD,IAAI1G,GAAG,KAAK,IAAI,EAAE;MAChBiL,GAAG,CAACrF,IAAI,CAAC,GAAG,EAAEX,GAAG,GAAGqB,IAAI,CAACG,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAACb,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;MACrDpH,KAAK,CAACoH,IAAI,CAAC,WAAW,EAAE,YAAY,IAAIX,GAAG,GAAGqB,IAAI,CAACG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7E,CAAC,MAAM,IAAIzG,GAAG,KAAK,IAAI,EAAE;MACvBiL,GAAG,CAACrF,IAAI,CAAC,GAAG,EAAEX,GAAG,GAAGqB,IAAI,CAACG,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAACb,IAAI,CAAC,GAAG,EAAE9C,MAAM,CAAC;MAC1DtE,KAAK,CAACoH,IAAI,CAAC,WAAW,EAAE,YAAY,IAAIX,GAAG,GAAGqB,IAAI,CAACG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG3D,MAAM,GAAG,GAAG,CAAC;IAC1F,CAAC,MAAM;MACLmI,GAAG,CAACrF,IAAI,CAAC,WAAW,EAAE,iBAAiB,IAAIX,GAAG,GAAGqB,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IAC1E;EACF,CAAC,CAAC;AACJ,CAAC,EAAE,cAAc,CAAC;AAClB,IAAIyE,iBAAiB,GAAG,eAAgB5U,MAAM,CAAC,UAASiC,IAAI,EAAEyM,GAAG,EAAElH,KAAK,EAAEuI,IAAI,EAAEK,iBAAiB,EAAE;EACjGlE,SAAS,CAACpH,GAAG,CAAC7C,IAAI,EAAE;IAAEyM,GAAG;IAAElH;EAAM,CAAC,CAAC;EACnCkH,GAAG,IAAI,EAAE,IAAI0B,iBAAiB,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI3G,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,IAAI,GAAGsG,IAAI,CAACG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9F,OAAOxB,GAAG;AACZ,CAAC,EAAE,mBAAmB,CAAC;AACvB,IAAImG,IAAI,GAAG,eAAgB7U,MAAM,CAAC,UAAS0M,GAAG,EAAEtI,EAAE,EAAE0Q,GAAG,EAAEC,OAAO,EAAE;EAChEvI,MAAM,CAAC,CAAC;EACR/L,GAAG,CAACiD,KAAK,CAAC,sBAAsB,EAAEgJ,GAAG,GAAG,IAAI,EAAE,KAAK,EAAEtI,EAAE,EAAE0Q,GAAG,CAAC;EAC7D,IAAI,CAAClJ,wBAAwB,EAAE;IAC7B,MAAM,IAAI3G,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EACA,MAAMmL,iBAAiB,GAAGxE,wBAAwB,CAACwE,iBAAiB,IAAI,KAAK;EAC7E,MAAM5G,GAAG,GAAGuL,OAAO,CAAC1L,EAAE;EACtBgD,cAAc,GAAG7C,GAAG,CAACR,UAAU,CAAC,CAAC;EACjC,MAAM7G,QAAQ,GAAGqH,GAAG,CAACjB,qBAAqB,CAAC,CAAC;EAC5CkB,GAAG,GAAGD,GAAG,CAACL,YAAY,CAAC,CAAC;EACxB,MAAM6L,QAAQ,GAAGtJ,MAAM,CAAC,QAAQtH,EAAE,IAAI,CAAC;EACvC,IAAIsK,GAAG,GAAG,CAAC;EACXvM,QAAQ,CAAC4F,OAAO,CAAC,CAACX,OAAO,EAAEI,KAAK,KAAK;IACnC,MAAMiN,YAAY,GAAGhI,QAAQ,CAACrF,OAAO,CAACnF,IAAI,CAAC;IAC3C,MAAMsS,CAAC,GAAGS,QAAQ,CAAC5F,MAAM,CAAC,GAAG,CAAC;IAC9B,MAAMuF,WAAW,GAAGJ,CAAC,CAACzE,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC;IAC9D,MAAMpH,KAAK,GAAG0M,WAAW,CAAC7E,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAAC,OAAO,EAAE,oBAAoB,CAAC;IACzEpH,KAAK,CAACE,IAAI,CAAC,CAAC,EAAEkF,WAAW,CAACoH,YAAY,CAAC;IACvC,MAAM1E,IAAI,GAAG0E,YAAY,CAACzE,OAAO,CAAC,CAAC;IACnCtB,GAAG,GAAGkG,iBAAiB,CAACxN,OAAO,CAACnF,IAAI,EAAEyM,GAAG,EAAElH,KAAK,EAAEuI,IAAI,EAAEK,iBAAiB,CAAC;IAC1EnI,KAAK,CAACgN,MAAM,CAAC,CAAC;IACdN,WAAW,CAACM,MAAM,CAAC,CAAC;IACpBV,CAAC,CAACU,MAAM,CAAC,CAAC;EACZ,CAAC,CAAC;EACFrD,WAAW,CAACoD,QAAQ,EAAE3I,cAAc,EAAE,KAAK,CAAC;EAC5C,IAAIT,wBAAwB,CAACsJ,YAAY,EAAE;IACzCZ,YAAY,CAACU,QAAQ,EAAE7S,QAAQ,CAAC;EAClC;EACAiS,UAAU,CAACY,QAAQ,EAAE3I,cAAc,CAAC;EACpCuF,WAAW,CAACoD,QAAQ,EAAE3I,cAAc,EAAE,IAAI,CAAC;EAC3CtM,aAAa,CAACoV,WAAW,CACvBH,QAAQ,EACR,cAAc,EACdpJ,wBAAwB,CAACwJ,cAAc,IAAI,CAAC,EAC5C5L,GAAG,CAAChJ,eAAe,CAAC,CACtB,CAAC;EACDM,iBAAiB,CACf,KAAK,CAAC,EACNkU,QAAQ,EACRpJ,wBAAwB,CAACyJ,cAAc,EACvCzJ,wBAAwB,CAAC0J,WAC3B,CAAC;AACH,CAAC,EAAE,MAAM,CAAC;AACV,IAAIC,wBAAwB,GAAG;EAC7BV;AACF,CAAC;AACD,IAAI,KAAK,CAAC,EAAE;EACV,MAAM;IAAE7J,EAAE;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAG,KAAK,CAAC;EACvCA,QAAQ,CAAC,UAAU,EAAE,MAAM;IACzBF,EAAE,CAAC,iBAAiB,EAAE,MAAM;MAC1B,MAAM2B,QAAQ,GAAGF,QAAQ,CAAC,MAAM,CAAC;MACjCxB,MAAM,CAAC0B,QAAQ,CAAC,CAAC6I,WAAW,CAAC,CAAC;MAC9BvK,MAAM,CAAC0B,QAAQ,CAAC8I,QAAQ,CAAC,CAAC,CAAC,CAACC,SAAS,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC,CAAC;EACFzK,QAAQ,CAAC,gBAAgB,EAAE,MAAM;IAC/B,MAAM6E,IAAI,GAAG;MACXlC,CAAC,EAAE,CAAC;MACJD,CAAC,EAAE,CAAC;MACJsC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVyF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE,eAAgBhW,MAAM,CAAC,MAAM,EAAE,EAAE,QAAQ;IACnD,CAAC;IACDgL,EAAE,CAAC,gDAAgD,EAAE,MAAM;MACzDvB,GAAG,GAAG,IAAI;MACV,MAAMiF,GAAG,GAAGkG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE7E,IAAI,EAAE,IAAI,CAAC;MACvD9E,MAAM,CAACyD,GAAG,CAAC,CAACiH,IAAI,CAAC,EAAE,CAAC;MACpB1K,MAAM,CAACiB,SAAS,CAACxG,GAAG,CAAC,MAAM,CAAC,CAAC,CAACuQ,OAAO,CAAC;QAAEvH,GAAG,EAAE,CAAC;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MAC3D,MAAM0O,OAAO,GAAGtB,iBAAiB,CAAC,SAAS,EAAElG,GAAG,EAAE,CAAC,EAAEqB,IAAI,EAAE,IAAI,CAAC;MAChE9E,MAAM,CAACiL,OAAO,CAAC,CAACP,IAAI,CAAC,GAAG,CAAC;MACzB1K,MAAM,CAACiB,SAAS,CAACxG,GAAG,CAAC,SAAS,CAAC,CAAC,CAACuQ,OAAO,CAAC;QAAEvH,GAAG;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;IAC7D,CAAC,CAAC;IACFwD,EAAE,CAAC,gDAAgD,EAAE,MAAM;MACzDvB,GAAG,GAAG,IAAI;MACVsG,IAAI,CAACG,KAAK,GAAG,UAAU;MACvB,MAAMxB,GAAG,GAAGkG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE7E,IAAI,EAAE,IAAI,CAAC;MACvD9E,MAAM,CAACyD,GAAG,CAAC,CAACiH,IAAI,CAAC,YAAY,CAAC;MAC9B1K,MAAM,CAACiB,SAAS,CAACxG,GAAG,CAAC,MAAM,CAAC,CAAC,CAACuQ,OAAO,CAAC;QAAEvH,GAAG,EAAE,CAAC;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MAC3DuI,IAAI,CAACG,KAAK,GAAG,SAAS;MACtB,MAAMgG,OAAO,GAAGtB,iBAAiB,CAAC,SAAS,EAAElG,GAAG,EAAE,CAAC,EAAEqB,IAAI,EAAE,IAAI,CAAC;MAChE9E,MAAM,CAACiL,OAAO,CAAC,CAACP,IAAI,CAAC,YAAY,CAAC;MAClC1K,MAAM,CAACiB,SAAS,CAACxG,GAAG,CAAC,SAAS,CAAC,CAAC,CAACuQ,OAAO,CAAC;QAAEvH,GAAG;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC,CAAC;EACF0D,QAAQ,CAAC,gBAAgB,EAAE,MAAM;IAC/B,MAAMrJ,OAAO,GAAG,eAAgB,IAAIC,GAAG,CAAC,CACtC,CACE,YAAY,EACZ;MACEsC,EAAE,EAAE,MAAM;MACVL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACC,MAAM;MACvBqD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,SAAS,EACT;MACET,EAAE,EAAE,GAAG;MACPL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACC,MAAM;MACvBqD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,MAAM,CAAC;MACjBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,SAAS,EACT;MACET,EAAE,EAAE,GAAG;MACPL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACC,MAAM;MACvBqD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,GAAG,CAAC;MACdC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,SAAS,EACT;MACET,EAAE,EAAE,GAAG;MACPL,OAAO,EAAE,iCAAiC;MAC1CzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACI,KAAK;MACtBkD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC;MACtBC,MAAM,EAAE,MAAM;MACdS,QAAQ,EAAE;IACZ,CAAC,CACF,EACD,CACE,SAAS,EACT;MACElB,EAAE,EAAE,GAAG;MACPL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACC,MAAM;MACvBqD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,MAAM,CAAC;MACjBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,iBAAiB,EACjB;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,4CAA4C;MACrDzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACK,WAAW;MAC5BiD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;MACnBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,SAAS,EACT;MACET,EAAE,EAAE,GAAG;MACPL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACC,MAAM;MACvBqD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,iBAAiB,EACjB;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,4CAA4C;MACrDzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAErD,UAAU,CAACK,WAAW;MAC5BiD,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;MACnBC,MAAM,EAAE;IACV,CAAC,CACF,CACF,CAAC;IACF,IAAI6J,GAAG,GAAG,CAAC;IACXxC,SAAS,CAACpH,GAAG,CAAC,MAAM,EAAE;MAAE4J,GAAG,EAAE,CAAC;MAAElH,KAAK,EAAE;IAAE,CAAC,CAAC;IAC3C0E,SAAS,CAACpH,GAAG,CAAC,SAAS,EAAE;MAAE4J,GAAG,EAAE,YAAY;MAAElH,KAAK,EAAE;IAAE,CAAC,CAAC;IACzD0E,SAAS,CAACpH,GAAG,CAAC,SAAS,EAAE;MAAE4J,GAAG,EAAE,YAAY;MAAElH,KAAK,EAAE;IAAE,CAAC,CAAC;IACzD0D,QAAQ,CAAC,IAAI,EAAE,MAAM;MACnBwD,GAAG,GAAG,EAAE;MACRjF,GAAG,GAAG,IAAI;MACV,MAAM0M,wBAAwB,GAAG,eAAgB,IAAIrU,GAAG,CAAC,CACvD,CAAC,YAAY,EAAE;QAAE+L,CAAC,EAAE,CAAC;QAAED,CAAC,EAAE,EAAE;QAAEqC,aAAa,EAAE;MAAG,CAAC,CAAC,EAClD,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,EAAE;QAAEqC,aAAa,EAAE;MAAG,CAAC,CAAC,EAC1D,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EAC5D,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,CAAC;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EACjD,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EAC5D,CAAC,iBAAiB,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EACpE,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EAC5D,CAAC,iBAAiB,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,CACrE,CAAC;MACFpO,OAAO,CAACkG,OAAO,CAAC,CAAC3B,OAAO,EAAEjD,GAAG,KAAK;QAChC6H,EAAE,CAAC,+CAA+C7H,GAAG,EAAE,EAAE,MAAM;UAC7D,MAAMiT,QAAQ,GAAG1E,iBAAiB,CAACtL,OAAO,EAAEsI,GAAG,EAAE,KAAK,CAAC;UACvDzD,MAAM,CAACmL,QAAQ,CAAC,CAACH,OAAO,CAACE,wBAAwB,CAACzQ,GAAG,CAACvC,GAAG,CAAC,CAAC;UAC3DuL,GAAG,IAAI,EAAE;QACX,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFxD,QAAQ,CAAC,IAAI,EAAE,MAAM;MACnB,IAAImL,IAAI,GAAG,EAAE;MACb5M,GAAG,GAAG,IAAI;MACV,MAAM6M,wBAAwB,GAAG,eAAgB,IAAIxU,GAAG,CAAC,CACvD,CAAC,YAAY,EAAE;QAAE+L,CAAC,EAAE,CAAC;QAAED,CAAC,EAAE,EAAE;QAAEqC,aAAa,EAAE;MAAG,CAAC,CAAC,EAClD,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,EAAE;QAAEqC,aAAa,EAAE;MAAG,CAAC,CAAC,EAC1D,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EAC5D,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,CAAC;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EACjD,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EAC5D,CAAC,iBAAiB,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EACpE,CAAC,SAAS,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,EAC5D,CAAC,iBAAiB,EAAE;QAAEpC,CAAC,EAAE,YAAY;QAAED,CAAC,EAAE,GAAG;QAAEqC,aAAa,EAAE;MAAI,CAAC,CAAC,CACrE,CAAC;MACFpO,OAAO,CAACkG,OAAO,CAAC,CAAC3B,OAAO,EAAEjD,GAAG,KAAK;QAChC6H,EAAE,CAAC,+CAA+C7H,GAAG,EAAE,EAAE,MAAM;UAC7D,MAAMiT,QAAQ,GAAG1E,iBAAiB,CAACtL,OAAO,EAAEiQ,IAAI,EAAE,KAAK,CAAC;UACxDpL,MAAM,CAACmL,QAAQ,CAAC,CAACH,OAAO,CAACK,wBAAwB,CAAC5Q,GAAG,CAACvC,GAAG,CAAC,CAAC;UAC3DkT,IAAI,IAAI,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACFnL,QAAQ,CAAC,oBAAoB,EAAE,MAAM;MACnC,MAAMqL,uBAAuB,GAAG,eAAgB,IAAIzU,GAAG,CAAC,CACtD,CAAC,YAAY,EAAE,eAAe,CAAC,EAC/B,CAAC,SAAS,EAAE,eAAe,CAAC,EAC5B,CAAC,SAAS,EAAE,eAAe,CAAC,EAC5B,CAAC,SAAS,EAAE,cAAc,CAAC,EAC3B,CAAC,SAAS,EAAE,eAAe,CAAC,EAC5B,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,EACzC,CAAC,SAAS,EAAE,eAAe,CAAC,EAC5B,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAC1C,CAAC;MACFD,OAAO,CAACkG,OAAO,CAAC,CAAC3B,OAAO,EAAEjD,GAAG,KAAK;QAChC6H,EAAE,CAAC,iDAAiD7H,GAAG,EAAE,EAAE,MAAM;UAC/D,MAAMqT,SAAS,GAAGnF,kBAAkB,CAACjL,OAAO,CAAC;UAC7C6E,MAAM,CAACuL,SAAS,CAAC,CAACb,IAAI,CAACY,uBAAuB,CAAC7Q,GAAG,CAACvC,GAAG,CAAC,CAAC;QAC1D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACF+H,QAAQ,CAAC,qCAAqC,EAAE,MAAM;IACpD,MAAMrJ,OAAO,GAAG,eAAgB,IAAIC,GAAG,CAAC,CACtC,CACE,WAAW,EACX;MACEsC,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,EACD,CACE,WAAW,EACX;MACET,EAAE,EAAE,WAAW;MACfL,OAAO,EAAE,EAAE;MACXzB,GAAG,EAAE,CAAC;MACN+B,IAAI,EAAE,CAAC;MACPC,IAAI,EAAE,EAAE;MACRM,OAAO,EAAE,CAAC,WAAW,CAAC;MACtBC,MAAM,EAAE;IACV,CAAC,CACF,CACF,CAAC;IACF,MAAM4R,sBAAsB,GAAG,eAAgB,IAAI3U,GAAG,CAAC,CACrD,CAAC,WAAW,EAAE;MAAE+L,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAG,CAAC,CAAC,EAC9B,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAG,CAAC,CAAC,EAC9B,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC/B,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,CAChC,CAAC;IACF,MAAM8I,mCAAmC,GAAG,eAAgB,IAAI5U,GAAG,CAAC,CAClE,CAAC,WAAW,EAAE;MAAE+L,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC/B,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC/B,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAG,CAAC,CAAC,EACzC,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC1C,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,YAAY;MAAED,CAAC,EAAE;IAAG,CAAC,CAAC,EACzC,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAI,CAAC,CAAC,EAC/B,CAAC,WAAW,EAAE;MAAEC,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAG,CAAC,CAAC,CAC/B,CAAC;IACF,MAAM+I,6BAA6B,GAAG,eAAgB,IAAI7U,GAAG,CAAC,CAC5D,CAAC,WAAW,EAAE,EAAE,CAAC,EACjB,CAAC,WAAW,EAAE,EAAE,CAAC,EACjB,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,WAAW,EAAE,GAAG,CAAC,EAClB,CAAC,WAAW,EAAE,GAAG,CAAC,CACnB,CAAC;IACF,MAAMmM,UAAU,GAAG,CAAC,GAAGwI,sBAAsB,CAAC1E,IAAI,CAAC,CAAC,CAAC;IACrD/G,EAAE,CAAC,6DAA6D,EAAE,MAAM;MACtEvB,GAAG,GAAG,IAAI;MACV,IAAI0E,MAAM,GAAG,EAAE;MACfhC,SAAS,CAAClM,KAAK,CAAC,CAAC;MACjBiM,SAAS,CAACjM,KAAK,CAAC,CAAC;MACjBiM,SAAS,CAACpH,GAAG,CAAC,MAAM,EAAE;QAAE4J,GAAG,EAAE,CAAC;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MAC3C0E,SAAS,CAACpH,GAAG,CAAC,SAAS,EAAE;QAAE4J,GAAG,EAAE,YAAY;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MACzD0E,SAAS,CAACpH,GAAG,CAAC,SAAS,EAAE;QAAE4J,GAAG,EAAE,YAAY;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MACzDoE,wBAAwB,CAACoG,eAAe,GAAG,IAAI;MAC/CnQ,OAAO,CAACkG,OAAO,CAAC,CAAC3B,OAAO,EAAEjD,GAAG,KAAK;QAChC,IAAIiD,OAAO,CAACxB,OAAO,CAACnC,MAAM,GAAG,CAAC,EAAE;UAC9B0L,MAAM,GAAGE,uBAAuB,CAACjI,OAAO,CAAC;QAC3C;QACA,MAAMgQ,QAAQ,GAAG5H,iBAAiB,CAACpI,OAAO,EAAE+H,MAAM,CAAC;QACnDlD,MAAM,CAACmL,QAAQ,CAAC,CAACH,OAAO,CAACQ,sBAAsB,CAAC/Q,GAAG,CAACvC,GAAG,CAAC,CAAC;QACzD8H,MAAM,CAACkD,MAAM,CAAC,CAAC8H,OAAO,CAACU,6BAA6B,CAACjR,GAAG,CAACvC,GAAG,CAAC,CAAC;MAChE,CAAC,CAAC;IACJ,CAAC,CAAC;IACF6H,EAAE,CAAC,+DAA+D,EAAE,MAAM;MACxEmB,SAAS,CAAClM,KAAK,CAAC,CAAC;MACjBiM,SAAS,CAACjM,KAAK,CAAC,CAAC;MACjBwJ,GAAG,GAAG,IAAI;MACV,MAAM0E,MAAM,GAAG,EAAE;MACjBhC,SAAS,CAAClM,KAAK,CAAC,CAAC;MACjBiM,SAAS,CAACjM,KAAK,CAAC,CAAC;MACjBiM,SAAS,CAACpH,GAAG,CAAC,MAAM,EAAE;QAAE4J,GAAG,EAAE,CAAC;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MAC3C0E,SAAS,CAACpH,GAAG,CAAC,SAAS,EAAE;QAAE4J,GAAG,EAAE,YAAY;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MACzD0E,SAAS,CAACpH,GAAG,CAAC,SAAS,EAAE;QAAE4J,GAAG,EAAE,YAAY;QAAElH,KAAK,EAAE;MAAE,CAAC,CAAC;MACzDwG,gBAAgB,CAACC,UAAU,EAAEpM,OAAO,EAAEsM,MAAM,CAAC;MAC7CF,UAAU,CAAClG,OAAO,CAAE3B,OAAO,IAAK;QAC9B,MAAMgQ,QAAQ,GAAGjK,SAAS,CAACzG,GAAG,CAACU,OAAO,CAAC;QACvC6E,MAAM,CAACmL,QAAQ,CAAC,CAACH,OAAO,CAACS,mCAAmC,CAAChR,GAAG,CAACU,OAAO,CAAC,CAAC;MAC5E,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EACFwF,wBAAwB,CAACoG,eAAe,GAAG,KAAK;EAChDhH,EAAE,CAAC,KAAK,EAAE,MAAM;IACdmB,SAAS,CAACrH,GAAG,CAAC,SAAS,EAAE;MAAE+I,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAE,CAAC,CAAC;IACxCzB,SAAS,CAACrH,GAAG,CAAC,SAAS,EAAE;MAAE+I,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAE,CAAC,CAAC;IACxCzB,SAAS,CAACrH,GAAG,CAAC,SAAS,EAAE;MAAE+I,CAAC,EAAE,CAAC;MAAED,CAAC,EAAE;IAAE,CAAC,CAAC;IACxCnE,GAAG,GAAG,IAAI;IACV,MAAM7E,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACjD,MAAM2I,aAAa,GAAGD,iBAAiB,CAAC1I,OAAO,CAAC;IAChDqG,MAAM,CAACsC,aAAa,CAAC,CAACoI,IAAI,CAAC,SAAS,CAAC;IACrCxJ,SAAS,CAAClM,KAAK,CAAC,CAAC;EACnB,CAAC,CAAC;AACJ;;AAEA;AACA,IAAI2W,SAAS,GAAG,eAAgB5W,MAAM,CAAEuC,OAAO,IAAK;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACkC,GAAG,CAC7BiE,CAAC,IAAK;AACT,uBAAuBA,CAAC,YAAYnG,OAAO,CAAC,gBAAgB,GAAGmG,CAAC,CAAC;AACjE,iBAAiBA,CAAC,cAAcnG,OAAO,CAAC,KAAK,GAAGmG,CAAC,CAAC,WAAWnG,OAAO,CAAC,KAAK,GAAGmG,CAAC,CAAC;AAC/E,2BAA2BA,CAAC,cAAcnG,OAAO,CAAC,QAAQ,GAAGmG,CAAC,CAAC,WAAWnG,OAAO,CAAC,QAAQ,GAAGmG,CAAC,CAAC;AAC/F,gBAAgBA,CAAC,aAAanG,OAAO,CAAC,KAAK,GAAGmG,CAAC,CAAC;AAChD,gBAAgBA,CAAC,cAAcnG,OAAO,CAAC,KAAK,GAAGmG,CAAC,CAAC;AACjD,SACA,CAAC,CAACxC,IAAI,CAAC,IAAI,CAAC;AACZ;AACA;AACA;AACA,cAAc3D,OAAO,CAACsU,SAAS;AAC/B;AACA;AACA,+BAA+BtU,OAAO,CAACuU,mBAAmB,WAAWvU,OAAO,CAACwU,gBAAgB;AAC7F,mCAAmCxU,OAAO,CAACuU,mBAAmB,WAAWvU,OAAO,CAACyU,qBAAqB;AACtG,4BAA4BzU,OAAO,CAAC0U,gBAAgB,WAAW1U,OAAO,CAAC2U,aAAa;AACpF,2BAA2B3U,OAAO,CAAC4U,kBAAkB,aAAa5U,OAAO,CAAC6U,cAAc;AACxF,sBAAsB7U,OAAO,CAAC8U,SAAS;AACvC;AACA;AACA,cAAc9U,OAAO,CAAC+U,YAAY;AAClC,YAAY/U,OAAO,CAAC+U,YAAY;AAChC;AACA;AACA,cAAc/U,OAAO,CAAC+U,YAAY;AAClC,YAAY/U,OAAO,CAAC+U,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA,cAAc/U,OAAO,CAAC+U,YAAY;AAClC,YAAY/U,OAAO,CAAC+U,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY/U,OAAO,CAAC8U,SAAS;AAC7B;AACA,CAAC,EAAE,WAAW,CAAC;AACf,IAAIE,cAAc,GAAGX,SAAS;;AAE9B;AACA,IAAIY,OAAO,GAAG;EACZ1M,MAAM;EACNzB,EAAE;EACFoO,QAAQ,EAAElC,wBAAwB;EAClCmC,MAAM,EAAEH;AACV,CAAC;AACD,SACEC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}