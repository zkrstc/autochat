{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nexport { tarjan };\nfunction tarjan(g) {\n  var index = 0;\n  var stack = [];\n  var visited = {}; // node id -> { onStack, lowlink, index }\n  var results = [];\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n    g.successors(v).forEach(function (w) {\n      if (!Object.prototype.hasOwnProperty.call(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n    if (entry.lowlink === entry.index) {\n      var cmpt = [];\n      var w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n  g.nodes().forEach(function (v) {\n    if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n      dfs(v);\n    }\n  });\n  return results;\n}","map":{"version":3,"names":["tarjan","g","index","stack","visited","results","dfs","v","entry","onStack","lowlink","push","successors","forEach","w","Object","prototype","hasOwnProperty","call","Math","min","cmpt","pop","nodes"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/dagre-d3-es/src/graphlib/alg/tarjan.js"],"sourcesContent":["export { tarjan };\n\nfunction tarjan(g) {\n  var index = 0;\n  var stack = [];\n  var visited = {}; // node id -> { onStack, lowlink, index }\n  var results = [];\n\n  function dfs(v) {\n    var entry = (visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++,\n    });\n    stack.push(v);\n\n    g.successors(v).forEach(function (w) {\n      if (!Object.prototype.hasOwnProperty.call(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [];\n      var w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function (v) {\n    if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n}\n"],"mappings":";;;AAAA,SAASA,MAAM;AAEf,SAASA,MAAMA,CAACC,CAAC,EAAE;EACjB,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;EAClB,IAAIC,OAAO,GAAG,EAAE;EAEhB,SAASC,GAAGA,CAACC,CAAC,EAAE;IACd,IAAIC,KAAK,GAAIJ,OAAO,CAACG,CAAC,CAAC,GAAG;MACxBE,OAAO,EAAE,IAAI;MACbC,OAAO,EAAER,KAAK;MACdA,KAAK,EAAEA,KAAK;IACd,CAAE;IACFC,KAAK,CAACQ,IAAI,CAACJ,CAAC,CAAC;IAEbN,CAAC,CAACW,UAAU,CAACL,CAAC,CAAC,CAACM,OAAO,CAAC,UAAUC,CAAC,EAAE;MACnC,IAAI,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACd,OAAO,EAAEU,CAAC,CAAC,EAAE;QACrDR,GAAG,CAACQ,CAAC,CAAC;QACNN,KAAK,CAACE,OAAO,GAAGS,IAAI,CAACC,GAAG,CAACZ,KAAK,CAACE,OAAO,EAAEN,OAAO,CAACU,CAAC,CAAC,CAACJ,OAAO,CAAC;MAC7D,CAAC,MAAM,IAAIN,OAAO,CAACU,CAAC,CAAC,CAACL,OAAO,EAAE;QAC7BD,KAAK,CAACE,OAAO,GAAGS,IAAI,CAACC,GAAG,CAACZ,KAAK,CAACE,OAAO,EAAEN,OAAO,CAACU,CAAC,CAAC,CAACZ,KAAK,CAAC;MAC3D;IACF,CAAC,CAAC;IAEF,IAAIM,KAAK,CAACE,OAAO,KAAKF,KAAK,CAACN,KAAK,EAAE;MACjC,IAAImB,IAAI,GAAG,EAAE;MACb,IAAIP,CAAC;MACL,GAAG;QACDA,CAAC,GAAGX,KAAK,CAACmB,GAAG,CAAC,CAAC;QACflB,OAAO,CAACU,CAAC,CAAC,CAACL,OAAO,GAAG,KAAK;QAC1BY,IAAI,CAACV,IAAI,CAACG,CAAC,CAAC;MACd,CAAC,QAAQP,CAAC,KAAKO,CAAC;MAChBT,OAAO,CAACM,IAAI,CAACU,IAAI,CAAC;IACpB;EACF;EAEApB,CAAC,CAACsB,KAAK,CAAC,CAAC,CAACV,OAAO,CAAC,UAAUN,CAAC,EAAE;IAC7B,IAAI,CAACQ,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACd,OAAO,EAAEG,CAAC,CAAC,EAAE;MACrDD,GAAG,CAACC,CAAC,CAAC;IACR;EACF,CAAC,CAAC;EAEF,OAAOF,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}