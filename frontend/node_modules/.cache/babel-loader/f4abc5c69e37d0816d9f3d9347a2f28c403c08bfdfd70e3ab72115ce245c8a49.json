{"ast":null,"code":"var _Class;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.structured-clone.js\";\nimport { __name, assignWithDepth_default, common_default, detectType, directiveRegex, log, sanitizeDirective } from \"./chunk-YTJNT7DU.mjs\";\n\n// src/utils.ts\nimport { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport { curveBasis, curveBasisClosed, curveBasisOpen, curveBumpX, curveBumpY, curveBundle, curveCardinalClosed, curveCardinalOpen, curveCardinal, curveCatmullRomClosed, curveCatmullRomOpen, curveCatmullRom, curveLinear, curveLinearClosed, curveMonotoneX, curveMonotoneY, curveNatural, curveStep, curveStepAfter, curveStepBefore, select } from \"d3\";\nimport memoize from \"lodash-es/memoize.js\";\nimport merge from \"lodash-es/merge.js\";\nvar ZERO_WIDTH_SPACE = \"\\u200B\";\nvar d3CurveTypes = {\n  curveBasis,\n  curveBasisClosed,\n  curveBasisOpen,\n  curveBumpX,\n  curveBumpY,\n  curveBundle,\n  curveCardinalClosed,\n  curveCardinalOpen,\n  curveCardinal,\n  curveCatmullRomClosed,\n  curveCatmullRomOpen,\n  curveCatmullRom,\n  curveLinear,\n  curveLinearClosed,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore\n};\nvar directiveWithoutOpen = /\\s*(?:(\\w+)(?=:):|(\\w+))\\s*(?:(\\w+)|((?:(?!}%{2}).|\\r?\\n)*))?\\s*(?:}%{2})?/gi;\nvar detectInit = /* @__PURE__ */__name(function (text, config) {\n  const inits = detectDirective(text, /(?:init\\b)|(?:initialize\\b)/);\n  let results = {};\n  if (Array.isArray(inits)) {\n    const args = inits.map(init => init.args);\n    sanitizeDirective(args);\n    results = assignWithDepth_default(results, [...args]);\n  } else {\n    results = inits.args;\n  }\n  if (!results) {\n    return;\n  }\n  let type = detectType(text, config);\n  const prop = \"config\";\n  if (results[prop] !== void 0) {\n    if (type === \"flowchart-v2\") {\n      type = \"flowchart\";\n    }\n    results[type] = results[prop];\n    delete results[prop];\n  }\n  return results;\n}, \"detectInit\");\nvar detectDirective = /* @__PURE__ */__name(function (text, type = null) {\n  try {\n    const commentWithoutDirectives = new RegExp(`[%]{2}(?![{]${directiveWithoutOpen.source})(?=[}][%]{2}).*\n`, \"ig\");\n    text = text.trim().replace(commentWithoutDirectives, \"\").replace(/'/gm, '\"');\n    log.debug(`Detecting diagram directive${type !== null ? \" type:\" + type : \"\"} based on the text:${text}`);\n    let match;\n    const result = [];\n    while ((match = directiveRegex.exec(text)) !== null) {\n      if (match.index === directiveRegex.lastIndex) {\n        directiveRegex.lastIndex++;\n      }\n      if (match && !type || type && match[1]?.match(type) || type && match[2]?.match(type)) {\n        const type2 = match[1] ? match[1] : match[2];\n        const args = match[3] ? match[3].trim() : match[4] ? JSON.parse(match[4].trim()) : null;\n        result.push({\n          type: type2,\n          args\n        });\n      }\n    }\n    if (result.length === 0) {\n      return {\n        type: text,\n        args: null\n      };\n    }\n    return result.length === 1 ? result[0] : result;\n  } catch (error) {\n    log.error(`ERROR: ${error.message} - Unable to parse directive type: '${type}' based on the text: '${text}'`);\n    return {\n      type: void 0,\n      args: null\n    };\n  }\n}, \"detectDirective\");\nvar removeDirectives = /* @__PURE__ */__name(function (text) {\n  return text.replace(directiveRegex, \"\");\n}, \"removeDirectives\");\nvar isSubstringInArray = /* @__PURE__ */__name(function (str, arr) {\n  for (const [i, element] of arr.entries()) {\n    if (element.match(str)) {\n      return i;\n    }\n  }\n  return -1;\n}, \"isSubstringInArray\");\nfunction interpolateToCurve(interpolate, defaultCurve) {\n  if (!interpolate) {\n    return defaultCurve;\n  }\n  const curveName = `curve${interpolate.charAt(0).toUpperCase() + interpolate.slice(1)}`;\n  return d3CurveTypes[curveName] ?? defaultCurve;\n}\n__name(interpolateToCurve, \"interpolateToCurve\");\nfunction formatUrl(linkStr, config) {\n  const url = linkStr.trim();\n  if (!url) {\n    return void 0;\n  }\n  if (config.securityLevel !== \"loose\") {\n    return sanitizeUrl(url);\n  }\n  return url;\n}\n__name(formatUrl, \"formatUrl\");\nvar runFunc = /* @__PURE__ */__name((functionName, ...params) => {\n  const arrPaths = functionName.split(\".\");\n  const len = arrPaths.length - 1;\n  const fnName = arrPaths[len];\n  let obj = window;\n  for (let i = 0; i < len; i++) {\n    obj = obj[arrPaths[i]];\n    if (!obj) {\n      log.error(`Function name: ${functionName} not found in window`);\n      return;\n    }\n  }\n  obj[fnName](...params);\n}, \"runFunc\");\nfunction distance(p1, p2) {\n  if (!p1 || !p2) {\n    return 0;\n  }\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n__name(distance, \"distance\");\nfunction traverseEdge(points) {\n  let prevPoint;\n  let totalDistance = 0;\n  points.forEach(point => {\n    totalDistance += distance(point, prevPoint);\n    prevPoint = point;\n  });\n  const remainingDistance = totalDistance / 2;\n  return calculatePoint(points, remainingDistance);\n}\n__name(traverseEdge, \"traverseEdge\");\nfunction calcLabelPosition(points) {\n  if (points.length === 1) {\n    return points[0];\n  }\n  return traverseEdge(points);\n}\n__name(calcLabelPosition, \"calcLabelPosition\");\nvar roundNumber = /* @__PURE__ */__name((num, precision = 2) => {\n  const factor = Math.pow(10, precision);\n  return Math.round(num * factor) / factor;\n}, \"roundNumber\");\nvar calculatePoint = /* @__PURE__ */__name((points, distanceToTraverse) => {\n  let prevPoint = void 0;\n  let remainingDistance = distanceToTraverse;\n  for (const point of points) {\n    if (prevPoint) {\n      const vectorDistance = distance(point, prevPoint);\n      if (vectorDistance === 0) {\n        return prevPoint;\n      }\n      if (vectorDistance < remainingDistance) {\n        remainingDistance -= vectorDistance;\n      } else {\n        const distanceRatio = remainingDistance / vectorDistance;\n        if (distanceRatio <= 0) {\n          return prevPoint;\n        }\n        if (distanceRatio >= 1) {\n          return {\n            x: point.x,\n            y: point.y\n          };\n        }\n        if (distanceRatio > 0 && distanceRatio < 1) {\n          return {\n            x: roundNumber((1 - distanceRatio) * prevPoint.x + distanceRatio * point.x, 5),\n            y: roundNumber((1 - distanceRatio) * prevPoint.y + distanceRatio * point.y, 5)\n          };\n        }\n      }\n    }\n    prevPoint = point;\n  }\n  throw new Error(\"Could not find a suitable point for the given distance\");\n}, \"calculatePoint\");\nvar calcCardinalityPosition = /* @__PURE__ */__name((isRelationTypePresent, points, initialPosition) => {\n  log.info(`our points ${JSON.stringify(points)}`);\n  if (points[0] !== initialPosition) {\n    points = points.reverse();\n  }\n  const distanceToCardinalityPoint = 25;\n  const center = calculatePoint(points, distanceToCardinalityPoint);\n  const d = isRelationTypePresent ? 10 : 5;\n  const angle = Math.atan2(points[0].y - center.y, points[0].x - center.x);\n  const cardinalityPosition = {\n    x: 0,\n    y: 0\n  };\n  cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2;\n  cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2;\n  return cardinalityPosition;\n}, \"calcCardinalityPosition\");\nfunction calcTerminalLabelPosition(terminalMarkerSize, position, _points) {\n  const points = structuredClone(_points);\n  log.info(\"our points\", points);\n  if (position !== \"start_left\" && position !== \"start_right\") {\n    points.reverse();\n  }\n  const distanceToCardinalityPoint = 25 + terminalMarkerSize;\n  const center = calculatePoint(points, distanceToCardinalityPoint);\n  const d = 10 + terminalMarkerSize * 0.5;\n  const angle = Math.atan2(points[0].y - center.y, points[0].x - center.x);\n  const cardinalityPosition = {\n    x: 0,\n    y: 0\n  };\n  if (position === \"start_left\") {\n    cardinalityPosition.x = Math.sin(angle + Math.PI) * d + (points[0].x + center.x) / 2;\n    cardinalityPosition.y = -Math.cos(angle + Math.PI) * d + (points[0].y + center.y) / 2;\n  } else if (position === \"end_right\") {\n    cardinalityPosition.x = Math.sin(angle - Math.PI) * d + (points[0].x + center.x) / 2 - 5;\n    cardinalityPosition.y = -Math.cos(angle - Math.PI) * d + (points[0].y + center.y) / 2 - 5;\n  } else if (position === \"end_left\") {\n    cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2 - 5;\n    cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2 - 5;\n  } else {\n    cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2;\n    cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2;\n  }\n  return cardinalityPosition;\n}\n__name(calcTerminalLabelPosition, \"calcTerminalLabelPosition\");\nfunction getStylesFromArray(arr) {\n  let style = \"\";\n  let labelStyle = \"\";\n  for (const element of arr) {\n    if (element !== void 0) {\n      if (element.startsWith(\"color:\") || element.startsWith(\"text-align:\")) {\n        labelStyle = labelStyle + element + \";\";\n      } else {\n        style = style + element + \";\";\n      }\n    }\n  }\n  return {\n    style,\n    labelStyle\n  };\n}\n__name(getStylesFromArray, \"getStylesFromArray\");\nvar cnt = 0;\nvar generateId = /* @__PURE__ */__name(() => {\n  cnt++;\n  return \"id-\" + Math.random().toString(36).substr(2, 12) + \"-\" + cnt;\n}, \"generateId\");\nfunction makeRandomHex(length) {\n  let result = \"\";\n  const characters = \"0123456789abcdef\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n__name(makeRandomHex, \"makeRandomHex\");\nvar random = /* @__PURE__ */__name(options => {\n  return makeRandomHex(options.length);\n}, \"random\");\nvar getTextObj = /* @__PURE__ */__name(function () {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    anchor: \"start\",\n    style: \"#666\",\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    valign: void 0,\n    text: \"\"\n  };\n}, \"getTextObj\");\nvar drawSimpleText = /* @__PURE__ */__name(function (elem, textData) {\n  const nText = textData.text.replace(common_default.lineBreakRegex, \" \");\n  const [, _fontSizePx] = parseFontSize(textData.fontSize);\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.style(\"text-anchor\", textData.anchor);\n  textElem.style(\"font-family\", textData.fontFamily);\n  textElem.style(\"font-size\", _fontSizePx);\n  textElem.style(\"font-weight\", textData.fontWeight);\n  textElem.attr(\"fill\", textData.fill);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.attr(\"fill\", textData.fill);\n  span.text(nText);\n  return textElem;\n}, \"drawSimpleText\");\nvar wrapLabel = memoize((label, maxWidth, config) => {\n  if (!label) {\n    return label;\n  }\n  config = Object.assign({\n    fontSize: 12,\n    fontWeight: 400,\n    fontFamily: \"Arial\",\n    joinWith: \"<br/>\"\n  }, config);\n  if (common_default.lineBreakRegex.test(label)) {\n    return label;\n  }\n  const words = label.split(\" \").filter(Boolean);\n  const completedLines = [];\n  let nextLine = \"\";\n  words.forEach((word, index) => {\n    const wordLength = calculateTextWidth(`${word} `, config);\n    const nextLineLength = calculateTextWidth(nextLine, config);\n    if (wordLength > maxWidth) {\n      const {\n        hyphenatedStrings,\n        remainingWord\n      } = breakString(word, maxWidth, \"-\", config);\n      completedLines.push(nextLine, ...hyphenatedStrings);\n      nextLine = remainingWord;\n    } else if (nextLineLength + wordLength >= maxWidth) {\n      completedLines.push(nextLine);\n      nextLine = word;\n    } else {\n      nextLine = [nextLine, word].filter(Boolean).join(\" \");\n    }\n    const currentWord = index + 1;\n    const isLastWord = currentWord === words.length;\n    if (isLastWord) {\n      completedLines.push(nextLine);\n    }\n  });\n  return completedLines.filter(line => line !== \"\").join(config.joinWith);\n}, (label, maxWidth, config) => `${label}${maxWidth}${config.fontSize}${config.fontWeight}${config.fontFamily}${config.joinWith}`);\nvar breakString = memoize((word, maxWidth, hyphenCharacter = \"-\", config) => {\n  config = Object.assign({\n    fontSize: 12,\n    fontWeight: 400,\n    fontFamily: \"Arial\",\n    margin: 0\n  }, config);\n  const characters = [...word];\n  const lines = [];\n  let currentLine = \"\";\n  characters.forEach((character, index) => {\n    const nextLine = `${currentLine}${character}`;\n    const lineWidth = calculateTextWidth(nextLine, config);\n    if (lineWidth >= maxWidth) {\n      const currentCharacter = index + 1;\n      const isLastLine = characters.length === currentCharacter;\n      const hyphenatedNextLine = `${nextLine}${hyphenCharacter}`;\n      lines.push(isLastLine ? nextLine : hyphenatedNextLine);\n      currentLine = \"\";\n    } else {\n      currentLine = nextLine;\n    }\n  });\n  return {\n    hyphenatedStrings: lines,\n    remainingWord: currentLine\n  };\n}, (word, maxWidth, hyphenCharacter = \"-\", config) => `${word}${maxWidth}${hyphenCharacter}${config.fontSize}${config.fontWeight}${config.fontFamily}`);\nfunction calculateTextHeight(text, config) {\n  return calculateTextDimensions(text, config).height;\n}\n__name(calculateTextHeight, \"calculateTextHeight\");\nfunction calculateTextWidth(text, config) {\n  return calculateTextDimensions(text, config).width;\n}\n__name(calculateTextWidth, \"calculateTextWidth\");\nvar calculateTextDimensions = memoize((text, config) => {\n  const {\n    fontSize = 12,\n    fontFamily = \"Arial\",\n    fontWeight = 400\n  } = config;\n  if (!text) {\n    return {\n      width: 0,\n      height: 0\n    };\n  }\n  const [, _fontSizePx] = parseFontSize(fontSize);\n  const fontFamilies = [\"sans-serif\", fontFamily];\n  const lines = text.split(common_default.lineBreakRegex);\n  const dims = [];\n  const body = select(\"body\");\n  if (!body.remove) {\n    return {\n      width: 0,\n      height: 0,\n      lineHeight: 0\n    };\n  }\n  const g = body.append(\"svg\");\n  for (const fontFamily2 of fontFamilies) {\n    let cHeight = 0;\n    const dim = {\n      width: 0,\n      height: 0,\n      lineHeight: 0\n    };\n    for (const line of lines) {\n      const textObj = getTextObj();\n      textObj.text = line || ZERO_WIDTH_SPACE;\n      const textElem = drawSimpleText(g, textObj).style(\"font-size\", _fontSizePx).style(\"font-weight\", fontWeight).style(\"font-family\", fontFamily2);\n      const bBox = (textElem._groups || textElem)[0][0].getBBox();\n      if (bBox.width === 0 && bBox.height === 0) {\n        throw new Error(\"svg element not in render tree\");\n      }\n      dim.width = Math.round(Math.max(dim.width, bBox.width));\n      cHeight = Math.round(bBox.height);\n      dim.height += cHeight;\n      dim.lineHeight = Math.round(Math.max(dim.lineHeight, cHeight));\n    }\n    dims.push(dim);\n  }\n  g.remove();\n  const index = isNaN(dims[1].height) || isNaN(dims[1].width) || isNaN(dims[1].lineHeight) || dims[0].height > dims[1].height && dims[0].width > dims[1].width && dims[0].lineHeight > dims[1].lineHeight ? 0 : 1;\n  return dims[index];\n}, (text, config) => `${text}${config.fontSize}${config.fontWeight}${config.fontFamily}`);\nvar InitIDGenerator = (_Class = class InitIDGenerator {\n  constructor(deterministic = false, seed) {\n    this.count = 0;\n    this.count = seed ? seed.length : 0;\n    this.next = deterministic ? () => this.count++ : () => Date.now();\n  }\n}, __name(_Class, \"InitIDGenerator\"), _Class);\nvar decoder;\nvar entityDecode = /* @__PURE__ */__name(function (html) {\n  decoder = decoder || document.createElement(\"div\");\n  html = escape(html).replace(/%26/g, \"&\").replace(/%23/g, \"#\").replace(/%3B/g, \";\");\n  decoder.innerHTML = html;\n  return unescape(decoder.textContent);\n}, \"entityDecode\");\nfunction isDetailedError(error) {\n  return \"str\" in error;\n}\n__name(isDetailedError, \"isDetailedError\");\nvar insertTitle = /* @__PURE__ */__name((parent, cssClass, titleTopMargin, title) => {\n  if (!title) {\n    return;\n  }\n  const bounds = parent.node()?.getBBox();\n  if (!bounds) {\n    return;\n  }\n  parent.append(\"text\").text(title).attr(\"text-anchor\", \"middle\").attr(\"x\", bounds.x + bounds.width / 2).attr(\"y\", -titleTopMargin).attr(\"class\", cssClass);\n}, \"insertTitle\");\nvar parseFontSize = /* @__PURE__ */__name(fontSize => {\n  if (typeof fontSize === \"number\") {\n    return [fontSize, fontSize + \"px\"];\n  }\n  const fontSizeNumber = parseInt(fontSize ?? \"\", 10);\n  if (Number.isNaN(fontSizeNumber)) {\n    return [void 0, void 0];\n  } else if (fontSize === String(fontSizeNumber)) {\n    return [fontSizeNumber, fontSize + \"px\"];\n  } else {\n    return [fontSizeNumber, fontSize];\n  }\n}, \"parseFontSize\");\nfunction cleanAndMerge(defaultData, data) {\n  return merge({}, defaultData, data);\n}\n__name(cleanAndMerge, \"cleanAndMerge\");\nvar utils_default = {\n  assignWithDepth: assignWithDepth_default,\n  wrapLabel,\n  calculateTextHeight,\n  calculateTextWidth,\n  calculateTextDimensions,\n  cleanAndMerge,\n  detectInit,\n  detectDirective,\n  isSubstringInArray,\n  interpolateToCurve,\n  calcLabelPosition,\n  calcCardinalityPosition,\n  calcTerminalLabelPosition,\n  formatUrl,\n  getStylesFromArray,\n  generateId,\n  random,\n  runFunc,\n  entityDecode,\n  insertTitle,\n  parseFontSize,\n  InitIDGenerator\n};\nvar encodeEntities = /* @__PURE__ */__name(function (text) {\n  let txt = text;\n  txt = txt.replace(/style.*:\\S*#.*;/g, function (s) {\n    return s.substring(0, s.length - 1);\n  });\n  txt = txt.replace(/classDef.*:\\S*#.*;/g, function (s) {\n    return s.substring(0, s.length - 1);\n  });\n  txt = txt.replace(/#\\w+;/g, function (s) {\n    const innerTxt = s.substring(1, s.length - 1);\n    const isInt = /^\\+?\\d+$/.test(innerTxt);\n    if (isInt) {\n      return \"\\uFB02\\xB0\\xB0\" + innerTxt + \"\\xB6\\xDF\";\n    } else {\n      return \"\\uFB02\\xB0\" + innerTxt + \"\\xB6\\xDF\";\n    }\n  });\n  return txt;\n}, \"encodeEntities\");\nvar decodeEntities = /* @__PURE__ */__name(function (text) {\n  return text.replace(/ﬂ°°/g, \"&#\").replace(/ﬂ°/g, \"&\").replace(/¶ß/g, \";\");\n}, \"decodeEntities\");\nvar getEdgeId = /* @__PURE__ */__name((from, to, {\n  counter = 0,\n  prefix,\n  suffix\n}, id) => {\n  if (id) {\n    return id;\n  }\n  return `${prefix ? `${prefix}_` : \"\"}${from}_${to}_${counter}${suffix ? `_${suffix}` : \"\"}`;\n}, \"getEdgeId\");\nfunction handleUndefinedAttr(attrValue) {\n  return attrValue ?? null;\n}\n__name(handleUndefinedAttr, \"handleUndefinedAttr\");\nexport { ZERO_WIDTH_SPACE, removeDirectives, interpolateToCurve, getStylesFromArray, generateId, random, wrapLabel, calculateTextHeight, calculateTextWidth, isDetailedError, parseFontSize, cleanAndMerge, utils_default, encodeEntities, decodeEntities, getEdgeId, handleUndefinedAttr };","map":{"version":3,"names":["__name","assignWithDepth_default","common_default","detectType","directiveRegex","log","sanitizeDirective","sanitizeUrl","curveBasis","curveBasisClosed","curveBasisOpen","curveBumpX","curveBumpY","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinear","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","select","memoize","merge","ZERO_WIDTH_SPACE","d3CurveTypes","directiveWithoutOpen","detectInit","text","config","inits","detectDirective","results","Array","isArray","args","map","init","type","prop","commentWithoutDirectives","RegExp","source","trim","replace","debug","match","result","exec","index","lastIndex","type2","JSON","parse","push","length","error","message","removeDirectives","isSubstringInArray","str","arr","i","element","entries","interpolateToCurve","interpolate","defaultCurve","curveName","charAt","toUpperCase","slice","formatUrl","linkStr","url","securityLevel","runFunc","functionName","params","arrPaths","split","len","fnName","obj","window","distance","p1","p2","Math","sqrt","pow","x","y","traverseEdge","points","prevPoint","totalDistance","forEach","point","remainingDistance","calculatePoint","calcLabelPosition","roundNumber","num","precision","factor","round","distanceToTraverse","vectorDistance","distanceRatio","Error","calcCardinalityPosition","isRelationTypePresent","initialPosition","info","stringify","reverse","distanceToCardinalityPoint","center","d","angle","atan2","cardinalityPosition","sin","cos","calcTerminalLabelPosition","terminalMarkerSize","position","_points","structuredClone","PI","getStylesFromArray","style","labelStyle","startsWith","cnt","generateId","random","toString","substr","makeRandomHex","characters","charactersLength","floor","options","getTextObj","fill","anchor","width","height","textMargin","rx","ry","valign","drawSimpleText","elem","textData","nText","lineBreakRegex","_fontSizePx","parseFontSize","fontSize","textElem","append","attr","fontFamily","fontWeight","class","span","wrapLabel","label","maxWidth","Object","assign","joinWith","test","words","filter","Boolean","completedLines","nextLine","word","wordLength","calculateTextWidth","nextLineLength","hyphenatedStrings","remainingWord","breakString","join","currentWord","isLastWord","line","hyphenCharacter","margin","lines","currentLine","character","lineWidth","currentCharacter","isLastLine","hyphenatedNextLine","calculateTextHeight","calculateTextDimensions","fontFamilies","dims","body","remove","lineHeight","g","fontFamily2","cHeight","dim","textObj","bBox","_groups","getBBox","max","isNaN","InitIDGenerator","_Class","constructor","deterministic","seed","count","next","Date","now","decoder","entityDecode","html","document","createElement","escape","innerHTML","unescape","textContent","isDetailedError","insertTitle","parent","cssClass","titleTopMargin","title","bounds","node","fontSizeNumber","parseInt","Number","String","cleanAndMerge","defaultData","data","utils_default","assignWithDepth","encodeEntities","txt","s","substring","innerTxt","isInt","decodeEntities","getEdgeId","from","to","counter","prefix","suffix","id","handleUndefinedAttr","attrValue"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/mermaid/dist/chunks/mermaid.core/chunk-O4NI6UNU.mjs"],"sourcesContent":["import {\n  __name,\n  assignWithDepth_default,\n  common_default,\n  detectType,\n  directiveRegex,\n  log,\n  sanitizeDirective\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/utils.ts\nimport { sanitizeUrl } from \"@braintree/sanitize-url\";\nimport {\n  curveBasis,\n  curveBasisClosed,\n  curveBasisOpen,\n  curveBumpX,\n  curveBumpY,\n  curveBundle,\n  curveCardinalClosed,\n  curveCardinalOpen,\n  curveCardinal,\n  curveCatmullRomClosed,\n  curveCatmullRomOpen,\n  curveCatmullRom,\n  curveLinear,\n  curveLinearClosed,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore,\n  select\n} from \"d3\";\nimport memoize from \"lodash-es/memoize.js\";\nimport merge from \"lodash-es/merge.js\";\nvar ZERO_WIDTH_SPACE = \"\\u200B\";\nvar d3CurveTypes = {\n  curveBasis,\n  curveBasisClosed,\n  curveBasisOpen,\n  curveBumpX,\n  curveBumpY,\n  curveBundle,\n  curveCardinalClosed,\n  curveCardinalOpen,\n  curveCardinal,\n  curveCatmullRomClosed,\n  curveCatmullRomOpen,\n  curveCatmullRom,\n  curveLinear,\n  curveLinearClosed,\n  curveMonotoneX,\n  curveMonotoneY,\n  curveNatural,\n  curveStep,\n  curveStepAfter,\n  curveStepBefore\n};\nvar directiveWithoutOpen = /\\s*(?:(\\w+)(?=:):|(\\w+))\\s*(?:(\\w+)|((?:(?!}%{2}).|\\r?\\n)*))?\\s*(?:}%{2})?/gi;\nvar detectInit = /* @__PURE__ */ __name(function(text, config) {\n  const inits = detectDirective(text, /(?:init\\b)|(?:initialize\\b)/);\n  let results = {};\n  if (Array.isArray(inits)) {\n    const args = inits.map((init) => init.args);\n    sanitizeDirective(args);\n    results = assignWithDepth_default(results, [...args]);\n  } else {\n    results = inits.args;\n  }\n  if (!results) {\n    return;\n  }\n  let type = detectType(text, config);\n  const prop = \"config\";\n  if (results[prop] !== void 0) {\n    if (type === \"flowchart-v2\") {\n      type = \"flowchart\";\n    }\n    results[type] = results[prop];\n    delete results[prop];\n  }\n  return results;\n}, \"detectInit\");\nvar detectDirective = /* @__PURE__ */ __name(function(text, type = null) {\n  try {\n    const commentWithoutDirectives = new RegExp(\n      `[%]{2}(?![{]${directiveWithoutOpen.source})(?=[}][%]{2}).*\n`,\n      \"ig\"\n    );\n    text = text.trim().replace(commentWithoutDirectives, \"\").replace(/'/gm, '\"');\n    log.debug(\n      `Detecting diagram directive${type !== null ? \" type:\" + type : \"\"} based on the text:${text}`\n    );\n    let match;\n    const result = [];\n    while ((match = directiveRegex.exec(text)) !== null) {\n      if (match.index === directiveRegex.lastIndex) {\n        directiveRegex.lastIndex++;\n      }\n      if (match && !type || type && match[1]?.match(type) || type && match[2]?.match(type)) {\n        const type2 = match[1] ? match[1] : match[2];\n        const args = match[3] ? match[3].trim() : match[4] ? JSON.parse(match[4].trim()) : null;\n        result.push({ type: type2, args });\n      }\n    }\n    if (result.length === 0) {\n      return { type: text, args: null };\n    }\n    return result.length === 1 ? result[0] : result;\n  } catch (error) {\n    log.error(\n      `ERROR: ${error.message} - Unable to parse directive type: '${type}' based on the text: '${text}'`\n    );\n    return { type: void 0, args: null };\n  }\n}, \"detectDirective\");\nvar removeDirectives = /* @__PURE__ */ __name(function(text) {\n  return text.replace(directiveRegex, \"\");\n}, \"removeDirectives\");\nvar isSubstringInArray = /* @__PURE__ */ __name(function(str, arr) {\n  for (const [i, element] of arr.entries()) {\n    if (element.match(str)) {\n      return i;\n    }\n  }\n  return -1;\n}, \"isSubstringInArray\");\nfunction interpolateToCurve(interpolate, defaultCurve) {\n  if (!interpolate) {\n    return defaultCurve;\n  }\n  const curveName = `curve${interpolate.charAt(0).toUpperCase() + interpolate.slice(1)}`;\n  return d3CurveTypes[curveName] ?? defaultCurve;\n}\n__name(interpolateToCurve, \"interpolateToCurve\");\nfunction formatUrl(linkStr, config) {\n  const url = linkStr.trim();\n  if (!url) {\n    return void 0;\n  }\n  if (config.securityLevel !== \"loose\") {\n    return sanitizeUrl(url);\n  }\n  return url;\n}\n__name(formatUrl, \"formatUrl\");\nvar runFunc = /* @__PURE__ */ __name((functionName, ...params) => {\n  const arrPaths = functionName.split(\".\");\n  const len = arrPaths.length - 1;\n  const fnName = arrPaths[len];\n  let obj = window;\n  for (let i = 0; i < len; i++) {\n    obj = obj[arrPaths[i]];\n    if (!obj) {\n      log.error(`Function name: ${functionName} not found in window`);\n      return;\n    }\n  }\n  obj[fnName](...params);\n}, \"runFunc\");\nfunction distance(p1, p2) {\n  if (!p1 || !p2) {\n    return 0;\n  }\n  return Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2));\n}\n__name(distance, \"distance\");\nfunction traverseEdge(points) {\n  let prevPoint;\n  let totalDistance = 0;\n  points.forEach((point) => {\n    totalDistance += distance(point, prevPoint);\n    prevPoint = point;\n  });\n  const remainingDistance = totalDistance / 2;\n  return calculatePoint(points, remainingDistance);\n}\n__name(traverseEdge, \"traverseEdge\");\nfunction calcLabelPosition(points) {\n  if (points.length === 1) {\n    return points[0];\n  }\n  return traverseEdge(points);\n}\n__name(calcLabelPosition, \"calcLabelPosition\");\nvar roundNumber = /* @__PURE__ */ __name((num, precision = 2) => {\n  const factor = Math.pow(10, precision);\n  return Math.round(num * factor) / factor;\n}, \"roundNumber\");\nvar calculatePoint = /* @__PURE__ */ __name((points, distanceToTraverse) => {\n  let prevPoint = void 0;\n  let remainingDistance = distanceToTraverse;\n  for (const point of points) {\n    if (prevPoint) {\n      const vectorDistance = distance(point, prevPoint);\n      if (vectorDistance === 0) {\n        return prevPoint;\n      }\n      if (vectorDistance < remainingDistance) {\n        remainingDistance -= vectorDistance;\n      } else {\n        const distanceRatio = remainingDistance / vectorDistance;\n        if (distanceRatio <= 0) {\n          return prevPoint;\n        }\n        if (distanceRatio >= 1) {\n          return { x: point.x, y: point.y };\n        }\n        if (distanceRatio > 0 && distanceRatio < 1) {\n          return {\n            x: roundNumber((1 - distanceRatio) * prevPoint.x + distanceRatio * point.x, 5),\n            y: roundNumber((1 - distanceRatio) * prevPoint.y + distanceRatio * point.y, 5)\n          };\n        }\n      }\n    }\n    prevPoint = point;\n  }\n  throw new Error(\"Could not find a suitable point for the given distance\");\n}, \"calculatePoint\");\nvar calcCardinalityPosition = /* @__PURE__ */ __name((isRelationTypePresent, points, initialPosition) => {\n  log.info(`our points ${JSON.stringify(points)}`);\n  if (points[0] !== initialPosition) {\n    points = points.reverse();\n  }\n  const distanceToCardinalityPoint = 25;\n  const center = calculatePoint(points, distanceToCardinalityPoint);\n  const d = isRelationTypePresent ? 10 : 5;\n  const angle = Math.atan2(points[0].y - center.y, points[0].x - center.x);\n  const cardinalityPosition = { x: 0, y: 0 };\n  cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2;\n  cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2;\n  return cardinalityPosition;\n}, \"calcCardinalityPosition\");\nfunction calcTerminalLabelPosition(terminalMarkerSize, position, _points) {\n  const points = structuredClone(_points);\n  log.info(\"our points\", points);\n  if (position !== \"start_left\" && position !== \"start_right\") {\n    points.reverse();\n  }\n  const distanceToCardinalityPoint = 25 + terminalMarkerSize;\n  const center = calculatePoint(points, distanceToCardinalityPoint);\n  const d = 10 + terminalMarkerSize * 0.5;\n  const angle = Math.atan2(points[0].y - center.y, points[0].x - center.x);\n  const cardinalityPosition = { x: 0, y: 0 };\n  if (position === \"start_left\") {\n    cardinalityPosition.x = Math.sin(angle + Math.PI) * d + (points[0].x + center.x) / 2;\n    cardinalityPosition.y = -Math.cos(angle + Math.PI) * d + (points[0].y + center.y) / 2;\n  } else if (position === \"end_right\") {\n    cardinalityPosition.x = Math.sin(angle - Math.PI) * d + (points[0].x + center.x) / 2 - 5;\n    cardinalityPosition.y = -Math.cos(angle - Math.PI) * d + (points[0].y + center.y) / 2 - 5;\n  } else if (position === \"end_left\") {\n    cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2 - 5;\n    cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2 - 5;\n  } else {\n    cardinalityPosition.x = Math.sin(angle) * d + (points[0].x + center.x) / 2;\n    cardinalityPosition.y = -Math.cos(angle) * d + (points[0].y + center.y) / 2;\n  }\n  return cardinalityPosition;\n}\n__name(calcTerminalLabelPosition, \"calcTerminalLabelPosition\");\nfunction getStylesFromArray(arr) {\n  let style = \"\";\n  let labelStyle = \"\";\n  for (const element of arr) {\n    if (element !== void 0) {\n      if (element.startsWith(\"color:\") || element.startsWith(\"text-align:\")) {\n        labelStyle = labelStyle + element + \";\";\n      } else {\n        style = style + element + \";\";\n      }\n    }\n  }\n  return { style, labelStyle };\n}\n__name(getStylesFromArray, \"getStylesFromArray\");\nvar cnt = 0;\nvar generateId = /* @__PURE__ */ __name(() => {\n  cnt++;\n  return \"id-\" + Math.random().toString(36).substr(2, 12) + \"-\" + cnt;\n}, \"generateId\");\nfunction makeRandomHex(length) {\n  let result = \"\";\n  const characters = \"0123456789abcdef\";\n  const charactersLength = characters.length;\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n__name(makeRandomHex, \"makeRandomHex\");\nvar random = /* @__PURE__ */ __name((options) => {\n  return makeRandomHex(options.length);\n}, \"random\");\nvar getTextObj = /* @__PURE__ */ __name(function() {\n  return {\n    x: 0,\n    y: 0,\n    fill: void 0,\n    anchor: \"start\",\n    style: \"#666\",\n    width: 100,\n    height: 100,\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    valign: void 0,\n    text: \"\"\n  };\n}, \"getTextObj\");\nvar drawSimpleText = /* @__PURE__ */ __name(function(elem, textData) {\n  const nText = textData.text.replace(common_default.lineBreakRegex, \" \");\n  const [, _fontSizePx] = parseFontSize(textData.fontSize);\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.style(\"text-anchor\", textData.anchor);\n  textElem.style(\"font-family\", textData.fontFamily);\n  textElem.style(\"font-size\", _fontSizePx);\n  textElem.style(\"font-weight\", textData.fontWeight);\n  textElem.attr(\"fill\", textData.fill);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.attr(\"fill\", textData.fill);\n  span.text(nText);\n  return textElem;\n}, \"drawSimpleText\");\nvar wrapLabel = memoize(\n  (label, maxWidth, config) => {\n    if (!label) {\n      return label;\n    }\n    config = Object.assign(\n      { fontSize: 12, fontWeight: 400, fontFamily: \"Arial\", joinWith: \"<br/>\" },\n      config\n    );\n    if (common_default.lineBreakRegex.test(label)) {\n      return label;\n    }\n    const words = label.split(\" \").filter(Boolean);\n    const completedLines = [];\n    let nextLine = \"\";\n    words.forEach((word, index) => {\n      const wordLength = calculateTextWidth(`${word} `, config);\n      const nextLineLength = calculateTextWidth(nextLine, config);\n      if (wordLength > maxWidth) {\n        const { hyphenatedStrings, remainingWord } = breakString(word, maxWidth, \"-\", config);\n        completedLines.push(nextLine, ...hyphenatedStrings);\n        nextLine = remainingWord;\n      } else if (nextLineLength + wordLength >= maxWidth) {\n        completedLines.push(nextLine);\n        nextLine = word;\n      } else {\n        nextLine = [nextLine, word].filter(Boolean).join(\" \");\n      }\n      const currentWord = index + 1;\n      const isLastWord = currentWord === words.length;\n      if (isLastWord) {\n        completedLines.push(nextLine);\n      }\n    });\n    return completedLines.filter((line) => line !== \"\").join(config.joinWith);\n  },\n  (label, maxWidth, config) => `${label}${maxWidth}${config.fontSize}${config.fontWeight}${config.fontFamily}${config.joinWith}`\n);\nvar breakString = memoize(\n  (word, maxWidth, hyphenCharacter = \"-\", config) => {\n    config = Object.assign(\n      { fontSize: 12, fontWeight: 400, fontFamily: \"Arial\", margin: 0 },\n      config\n    );\n    const characters = [...word];\n    const lines = [];\n    let currentLine = \"\";\n    characters.forEach((character, index) => {\n      const nextLine = `${currentLine}${character}`;\n      const lineWidth = calculateTextWidth(nextLine, config);\n      if (lineWidth >= maxWidth) {\n        const currentCharacter = index + 1;\n        const isLastLine = characters.length === currentCharacter;\n        const hyphenatedNextLine = `${nextLine}${hyphenCharacter}`;\n        lines.push(isLastLine ? nextLine : hyphenatedNextLine);\n        currentLine = \"\";\n      } else {\n        currentLine = nextLine;\n      }\n    });\n    return { hyphenatedStrings: lines, remainingWord: currentLine };\n  },\n  (word, maxWidth, hyphenCharacter = \"-\", config) => `${word}${maxWidth}${hyphenCharacter}${config.fontSize}${config.fontWeight}${config.fontFamily}`\n);\nfunction calculateTextHeight(text, config) {\n  return calculateTextDimensions(text, config).height;\n}\n__name(calculateTextHeight, \"calculateTextHeight\");\nfunction calculateTextWidth(text, config) {\n  return calculateTextDimensions(text, config).width;\n}\n__name(calculateTextWidth, \"calculateTextWidth\");\nvar calculateTextDimensions = memoize(\n  (text, config) => {\n    const { fontSize = 12, fontFamily = \"Arial\", fontWeight = 400 } = config;\n    if (!text) {\n      return { width: 0, height: 0 };\n    }\n    const [, _fontSizePx] = parseFontSize(fontSize);\n    const fontFamilies = [\"sans-serif\", fontFamily];\n    const lines = text.split(common_default.lineBreakRegex);\n    const dims = [];\n    const body = select(\"body\");\n    if (!body.remove) {\n      return { width: 0, height: 0, lineHeight: 0 };\n    }\n    const g = body.append(\"svg\");\n    for (const fontFamily2 of fontFamilies) {\n      let cHeight = 0;\n      const dim = { width: 0, height: 0, lineHeight: 0 };\n      for (const line of lines) {\n        const textObj = getTextObj();\n        textObj.text = line || ZERO_WIDTH_SPACE;\n        const textElem = drawSimpleText(g, textObj).style(\"font-size\", _fontSizePx).style(\"font-weight\", fontWeight).style(\"font-family\", fontFamily2);\n        const bBox = (textElem._groups || textElem)[0][0].getBBox();\n        if (bBox.width === 0 && bBox.height === 0) {\n          throw new Error(\"svg element not in render tree\");\n        }\n        dim.width = Math.round(Math.max(dim.width, bBox.width));\n        cHeight = Math.round(bBox.height);\n        dim.height += cHeight;\n        dim.lineHeight = Math.round(Math.max(dim.lineHeight, cHeight));\n      }\n      dims.push(dim);\n    }\n    g.remove();\n    const index = isNaN(dims[1].height) || isNaN(dims[1].width) || isNaN(dims[1].lineHeight) || dims[0].height > dims[1].height && dims[0].width > dims[1].width && dims[0].lineHeight > dims[1].lineHeight ? 0 : 1;\n    return dims[index];\n  },\n  (text, config) => `${text}${config.fontSize}${config.fontWeight}${config.fontFamily}`\n);\nvar InitIDGenerator = class {\n  constructor(deterministic = false, seed) {\n    this.count = 0;\n    this.count = seed ? seed.length : 0;\n    this.next = deterministic ? () => this.count++ : () => Date.now();\n  }\n  static {\n    __name(this, \"InitIDGenerator\");\n  }\n};\nvar decoder;\nvar entityDecode = /* @__PURE__ */ __name(function(html) {\n  decoder = decoder || document.createElement(\"div\");\n  html = escape(html).replace(/%26/g, \"&\").replace(/%23/g, \"#\").replace(/%3B/g, \";\");\n  decoder.innerHTML = html;\n  return unescape(decoder.textContent);\n}, \"entityDecode\");\nfunction isDetailedError(error) {\n  return \"str\" in error;\n}\n__name(isDetailedError, \"isDetailedError\");\nvar insertTitle = /* @__PURE__ */ __name((parent, cssClass, titleTopMargin, title) => {\n  if (!title) {\n    return;\n  }\n  const bounds = parent.node()?.getBBox();\n  if (!bounds) {\n    return;\n  }\n  parent.append(\"text\").text(title).attr(\"text-anchor\", \"middle\").attr(\"x\", bounds.x + bounds.width / 2).attr(\"y\", -titleTopMargin).attr(\"class\", cssClass);\n}, \"insertTitle\");\nvar parseFontSize = /* @__PURE__ */ __name((fontSize) => {\n  if (typeof fontSize === \"number\") {\n    return [fontSize, fontSize + \"px\"];\n  }\n  const fontSizeNumber = parseInt(fontSize ?? \"\", 10);\n  if (Number.isNaN(fontSizeNumber)) {\n    return [void 0, void 0];\n  } else if (fontSize === String(fontSizeNumber)) {\n    return [fontSizeNumber, fontSize + \"px\"];\n  } else {\n    return [fontSizeNumber, fontSize];\n  }\n}, \"parseFontSize\");\nfunction cleanAndMerge(defaultData, data) {\n  return merge({}, defaultData, data);\n}\n__name(cleanAndMerge, \"cleanAndMerge\");\nvar utils_default = {\n  assignWithDepth: assignWithDepth_default,\n  wrapLabel,\n  calculateTextHeight,\n  calculateTextWidth,\n  calculateTextDimensions,\n  cleanAndMerge,\n  detectInit,\n  detectDirective,\n  isSubstringInArray,\n  interpolateToCurve,\n  calcLabelPosition,\n  calcCardinalityPosition,\n  calcTerminalLabelPosition,\n  formatUrl,\n  getStylesFromArray,\n  generateId,\n  random,\n  runFunc,\n  entityDecode,\n  insertTitle,\n  parseFontSize,\n  InitIDGenerator\n};\nvar encodeEntities = /* @__PURE__ */ __name(function(text) {\n  let txt = text;\n  txt = txt.replace(/style.*:\\S*#.*;/g, function(s) {\n    return s.substring(0, s.length - 1);\n  });\n  txt = txt.replace(/classDef.*:\\S*#.*;/g, function(s) {\n    return s.substring(0, s.length - 1);\n  });\n  txt = txt.replace(/#\\w+;/g, function(s) {\n    const innerTxt = s.substring(1, s.length - 1);\n    const isInt = /^\\+?\\d+$/.test(innerTxt);\n    if (isInt) {\n      return \"\\uFB02\\xB0\\xB0\" + innerTxt + \"\\xB6\\xDF\";\n    } else {\n      return \"\\uFB02\\xB0\" + innerTxt + \"\\xB6\\xDF\";\n    }\n  });\n  return txt;\n}, \"encodeEntities\");\nvar decodeEntities = /* @__PURE__ */ __name(function(text) {\n  return text.replace(/ﬂ°°/g, \"&#\").replace(/ﬂ°/g, \"&\").replace(/¶ß/g, \";\");\n}, \"decodeEntities\");\nvar getEdgeId = /* @__PURE__ */ __name((from, to, {\n  counter = 0,\n  prefix,\n  suffix\n}, id) => {\n  if (id) {\n    return id;\n  }\n  return `${prefix ? `${prefix}_` : \"\"}${from}_${to}_${counter}${suffix ? `_${suffix}` : \"\"}`;\n}, \"getEdgeId\");\nfunction handleUndefinedAttr(attrValue) {\n  return attrValue ?? null;\n}\n__name(handleUndefinedAttr, \"handleUndefinedAttr\");\n\nexport {\n  ZERO_WIDTH_SPACE,\n  removeDirectives,\n  interpolateToCurve,\n  getStylesFromArray,\n  generateId,\n  random,\n  wrapLabel,\n  calculateTextHeight,\n  calculateTextWidth,\n  isDetailedError,\n  parseFontSize,\n  cleanAndMerge,\n  utils_default,\n  encodeEntities,\n  decodeEntities,\n  getEdgeId,\n  handleUndefinedAttr\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}