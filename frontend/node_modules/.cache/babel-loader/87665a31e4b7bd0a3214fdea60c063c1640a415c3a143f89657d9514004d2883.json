{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useElementSize } from '@vueuse/core';\nfunction useContainer(layout) {\n  const containerEl = ref();\n  const {\n    width,\n    height\n  } = useElementSize(containerEl);\n  const containerSize = computed(() => {\n    return layout.value === \"horizontal\" ? width.value : height.value;\n  });\n  return {\n    containerEl,\n    containerSize\n  };\n}\nexport { useContainer };","map":{"version":3,"names":["useContainer","layout","containerEl","ref","width","height","useElementSize","containerSize","computed","value"],"sources":["../../../../../../../packages/components/splitter/src/hooks/useContainer.ts"],"sourcesContent":["import { computed, ref } from 'vue'\nimport { useElementSize } from '@vueuse/core'\nimport type { Ref } from 'vue'\n\nexport function useContainer(layout: Ref<'horizontal' | 'vertical'>) {\n  const containerEl = ref<HTMLDivElement>()\n  const { width, height } = useElementSize(containerEl)\n\n  const containerSize = computed(() => {\n    return layout.value === 'horizontal' ? width.value : height.value\n  })\n\n  return { containerEl, containerSize }\n}\n"],"mappings":";;AAEO,SAASA,YAAYA,CAACC,MAAM,EAAE;EACnC,MAAMC,WAAW,GAAGC,GAAG,EAAE;EACzB,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAE,GAAGC,cAAc,CAACJ,WAAW,CAAC;EACrD,MAAMK,aAAa,GAAGC,QAAQ,CAAC,MAAM;IACnC,OAAOP,MAAM,CAACQ,KAAK,KAAK,YAAY,GAAGL,KAAK,CAACK,KAAK,GAAGJ,MAAM,CAACI,KAAK;EACrE,CAAG,CAAC;EACF,OAAO;IAAEP,WAAW;IAAEK;EAAa,CAAE;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}