{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\n/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n  let opts;\n  let position;\n  if (typeof node === 'string') {\n    position = start;\n    opts = options;\n  } else {\n    position = node.range.start;\n    opts = start;\n  }\n  if (!position) {\n    position = Position.create(0, 0);\n  }\n  const lines = getLines(node);\n  const normalizedOptions = normalizeOptions(opts);\n  const tokens = tokenize({\n    lines,\n    position,\n    options: normalizedOptions\n  });\n  return parseJSDocComment({\n    index: 0,\n    tokens,\n    position\n  });\n}\nexport function isJSDoc(node, options) {\n  const normalizedOptions = normalizeOptions(options);\n  const lines = getLines(node);\n  if (lines.length === 0) {\n    return false;\n  }\n  const first = lines[0];\n  const last = lines[lines.length - 1];\n  const firstRegex = normalizedOptions.start;\n  const lastRegex = normalizedOptions.end;\n  return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n  let content = '';\n  if (typeof node === 'string') {\n    content = node;\n  } else {\n    content = node.text;\n  }\n  const lines = content.split(NEWLINE_REGEXP);\n  return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n  var _a, _b, _c;\n  const tokens = [];\n  let currentLine = context.position.line;\n  let currentCharacter = context.position.character;\n  for (let i = 0; i < context.lines.length; i++) {\n    const first = i === 0;\n    const last = i === context.lines.length - 1;\n    let line = context.lines[i];\n    let index = 0;\n    if (first && context.options.start) {\n      const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n      if (match) {\n        index = match.index + match[0].length;\n      }\n    } else {\n      const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n      if (match) {\n        index = match.index + match[0].length;\n      }\n    }\n    if (last) {\n      const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n      if (match) {\n        line = line.substring(0, match.index);\n      }\n    }\n    line = line.substring(0, lastCharacter(line));\n    const whitespaceEnd = skipWhitespace(line, index);\n    if (whitespaceEnd >= line.length) {\n      // Only create a break token when we already have previous tokens\n      if (tokens.length > 0) {\n        const position = Position.create(currentLine, currentCharacter);\n        tokens.push({\n          type: 'break',\n          content: '',\n          range: Range.create(position, position)\n        });\n      }\n    } else {\n      tagRegex.lastIndex = index;\n      const tagMatch = tagRegex.exec(line);\n      if (tagMatch) {\n        const fullMatch = tagMatch[0];\n        const value = tagMatch[1];\n        const start = Position.create(currentLine, currentCharacter + index);\n        const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n        tokens.push({\n          type: 'tag',\n          content: value,\n          range: Range.create(start, end)\n        });\n        index += fullMatch.length;\n        index = skipWhitespace(line, index);\n      }\n      if (index < line.length) {\n        const rest = line.substring(index);\n        const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n        tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n      }\n    }\n    currentLine++;\n    currentCharacter = 0;\n  }\n  // Remove last break token if there is one\n  if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n    return tokens.slice(0, -1);\n  }\n  return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n  const tokens = [];\n  if (tags.length === 0) {\n    const start = Position.create(lineIndex, characterIndex);\n    const end = Position.create(lineIndex, characterIndex + line.length);\n    tokens.push({\n      type: 'text',\n      content: line,\n      range: Range.create(start, end)\n    });\n  } else {\n    let lastIndex = 0;\n    for (const match of tags) {\n      const matchIndex = match.index;\n      const startContent = line.substring(lastIndex, matchIndex);\n      if (startContent.length > 0) {\n        tokens.push({\n          type: 'text',\n          content: line.substring(lastIndex, matchIndex),\n          range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n        });\n      }\n      let offset = startContent.length + 1;\n      const tagName = match[1];\n      tokens.push({\n        type: 'inline-tag',\n        content: tagName,\n        range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n      });\n      offset += tagName.length;\n      if (match.length === 4) {\n        offset += match[2].length;\n        const value = match[3];\n        tokens.push({\n          type: 'text',\n          content: value,\n          range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n        });\n      } else {\n        tokens.push({\n          type: 'text',\n          content: '',\n          range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n        });\n      }\n      lastIndex = matchIndex + match[0].length;\n    }\n    const endContent = line.substring(lastIndex);\n    if (endContent.length > 0) {\n      tokens.push({\n        type: 'text',\n        content: endContent,\n        range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n      });\n    }\n  }\n  return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n  const match = line.substring(index).match(nonWhitespaceRegex);\n  if (match) {\n    return index + match.index;\n  } else {\n    return line.length;\n  }\n}\nfunction lastCharacter(line) {\n  const match = line.match(whitespaceEndRegex);\n  if (match && typeof match.index === 'number') {\n    return match.index;\n  }\n  return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n  var _a, _b, _c, _d;\n  const startPosition = Position.create(context.position.line, context.position.character);\n  if (context.tokens.length === 0) {\n    return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n  }\n  const elements = [];\n  while (context.index < context.tokens.length) {\n    const element = parseJSDocElement(context, elements[elements.length - 1]);\n    if (element) {\n      elements.push(element);\n    }\n  }\n  const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n  const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n  return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n  const next = context.tokens[context.index];\n  if (next.type === 'tag') {\n    return parseJSDocTag(context, false);\n  } else if (next.type === 'text' || next.type === 'inline-tag') {\n    return parseJSDocText(context);\n  } else {\n    appendEmptyLine(next, last);\n    context.index++;\n    return undefined;\n  }\n}\nfunction appendEmptyLine(token, element) {\n  if (element) {\n    const line = new JSDocLineImpl('', token.range);\n    if ('inlines' in element) {\n      element.inlines.push(line);\n    } else {\n      element.content.inlines.push(line);\n    }\n  }\n}\nfunction parseJSDocText(context) {\n  let token = context.tokens[context.index];\n  const firstToken = token;\n  let lastToken = token;\n  const lines = [];\n  while (token && token.type !== 'break' && token.type !== 'tag') {\n    lines.push(parseJSDocInline(context));\n    lastToken = token;\n    token = context.tokens[context.index];\n  }\n  return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n  const token = context.tokens[context.index];\n  if (token.type === 'inline-tag') {\n    return parseJSDocTag(context, true);\n  } else {\n    return parseJSDocLine(context);\n  }\n}\nfunction parseJSDocTag(context, inline) {\n  const tagToken = context.tokens[context.index++];\n  const name = tagToken.content.substring(1);\n  const nextToken = context.tokens[context.index];\n  if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n    if (inline) {\n      const docLine = parseJSDocLine(context);\n      return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n    } else {\n      const textDoc = parseJSDocText(context);\n      return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n    }\n  } else {\n    const range = tagToken.range;\n    return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n  }\n}\nfunction parseJSDocLine(context) {\n  const token = context.tokens[context.index++];\n  return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n  if (!options) {\n    return normalizeOptions({\n      start: '/**',\n      end: '*/',\n      line: '*'\n    });\n  }\n  const {\n    start,\n    end,\n    line\n  } = options;\n  return {\n    start: normalizeOption(start, true),\n    end: normalizeOption(end, false),\n    line: normalizeOption(line, true)\n  };\n}\nfunction normalizeOption(option, start) {\n  if (typeof option === 'string' || typeof option === 'object') {\n    const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n    if (start) {\n      return new RegExp(`^\\\\s*${escaped}`);\n    } else {\n      return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n    }\n  } else {\n    return option;\n  }\n}\nclass JSDocCommentImpl {\n  constructor(elements, range) {\n    this.elements = elements;\n    this.range = range;\n  }\n  getTag(name) {\n    return this.getAllTags().find(e => e.name === name);\n  }\n  getTags(name) {\n    return this.getAllTags().filter(e => e.name === name);\n  }\n  getAllTags() {\n    return this.elements.filter(e => 'name' in e);\n  }\n  toString() {\n    let value = '';\n    for (const element of this.elements) {\n      if (value.length === 0) {\n        value = element.toString();\n      } else {\n        const text = element.toString();\n        value += fillNewlines(value) + text;\n      }\n    }\n    return value.trim();\n  }\n  toMarkdown(options) {\n    let value = '';\n    for (const element of this.elements) {\n      if (value.length === 0) {\n        value = element.toMarkdown(options);\n      } else {\n        const text = element.toMarkdown(options);\n        value += fillNewlines(value) + text;\n      }\n    }\n    return value.trim();\n  }\n}\nclass JSDocTagImpl {\n  constructor(name, content, inline, range) {\n    this.name = name;\n    this.content = content;\n    this.inline = inline;\n    this.range = range;\n  }\n  toString() {\n    let text = `@${this.name}`;\n    const content = this.content.toString();\n    if (this.content.inlines.length === 1) {\n      text = `${text} ${content}`;\n    } else if (this.content.inlines.length > 1) {\n      text = `${text}\\n${content}`;\n    }\n    if (this.inline) {\n      // Inline tags are surrounded by curly braces\n      return `{${text}}`;\n    } else {\n      return text;\n    }\n  }\n  toMarkdown(options) {\n    var _a, _b;\n    return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n  }\n  toMarkdownDefault(options) {\n    const content = this.content.toMarkdown(options);\n    if (this.inline) {\n      const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n      if (typeof rendered === 'string') {\n        return rendered;\n      }\n    }\n    let marker = '';\n    if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n      marker = '*';\n    } else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n      marker = '**';\n    } else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n      marker = '***';\n    }\n    let text = `${marker}@${this.name}${marker}`;\n    if (this.content.inlines.length === 1) {\n      text = `${text} — ${content}`;\n    } else if (this.content.inlines.length > 1) {\n      text = `${text}\\n${content}`;\n    }\n    if (this.inline) {\n      // Inline tags are surrounded by curly braces\n      return `{${text}}`;\n    } else {\n      return text;\n    }\n  }\n}\nfunction renderInlineTag(tag, content, options) {\n  var _a, _b;\n  if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n    const index = content.indexOf(' ');\n    let display = content;\n    if (index > 0) {\n      const displayStart = skipWhitespace(content, index);\n      display = content.substring(displayStart);\n      content = content.substring(0, index);\n    }\n    if (tag === 'linkcode' || tag === 'link' && options.link === 'code') {\n      // Surround the display value in a markdown inline code block\n      display = `\\`${display}\\``;\n    }\n    const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n    return renderedLink;\n  }\n  return undefined;\n}\nfunction renderLinkDefault(content, display) {\n  try {\n    URI.parse(content, true);\n    return `[${display}](${content})`;\n  } catch (_a) {\n    return content;\n  }\n}\nclass JSDocTextImpl {\n  constructor(lines, range) {\n    this.inlines = lines;\n    this.range = range;\n  }\n  toString() {\n    let text = '';\n    for (let i = 0; i < this.inlines.length; i++) {\n      const inline = this.inlines[i];\n      const next = this.inlines[i + 1];\n      text += inline.toString();\n      if (next && next.range.start.line > inline.range.start.line) {\n        text += '\\n';\n      }\n    }\n    return text;\n  }\n  toMarkdown(options) {\n    let text = '';\n    for (let i = 0; i < this.inlines.length; i++) {\n      const inline = this.inlines[i];\n      const next = this.inlines[i + 1];\n      text += inline.toMarkdown(options);\n      if (next && next.range.start.line > inline.range.start.line) {\n        text += '\\n';\n      }\n    }\n    return text;\n  }\n}\nclass JSDocLineImpl {\n  constructor(text, range) {\n    this.text = text;\n    this.range = range;\n  }\n  toString() {\n    return this.text;\n  }\n  toMarkdown() {\n    return this.text;\n  }\n}\nfunction fillNewlines(text) {\n  if (text.endsWith('\\n')) {\n    return '\\n';\n  } else {\n    return '\\n\\n';\n  }\n}","map":{"version":3,"names":["Position","Range","NEWLINE_REGEXP","escapeRegExp","URI","parseJSDoc","node","start","options","opts","position","range","create","lines","getLines","normalizedOptions","normalizeOptions","tokens","tokenize","parseJSDocComment","index","isJSDoc","length","first","last","firstRegex","lastRegex","end","Boolean","exec","content","text","split","tagRegex","inlineTagRegex","context","currentLine","line","currentCharacter","character","i","match","_a","_b","_c","substring","lastCharacter","whitespaceEnd","skipWhitespace","push","type","lastIndex","tagMatch","fullMatch","value","rest","inlineTagMatches","Array","from","matchAll","buildInlineTokens","slice","tags","lineIndex","characterIndex","matchIndex","startContent","offset","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","undefined","startPosition","JSDocCommentImpl","elements","element","parseJSDocElement","_d","next","parseJSDocTag","parseJSDocText","appendEmptyLine","token","JSDocLineImpl","inlines","firstToken","lastToken","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","name","nextToken","docLine","JSDocTagImpl","textDoc","normalizeOption","option","escaped","source","RegExp","constructor","getTag","getAllTags","find","e","getTags","filter","toString","fillNewlines","trim","toMarkdown","renderTag","call","toMarkdownDefault","rendered","renderInlineTag","marker","tag","indexOf","display","displayStart","link","renderedLink","renderLink","renderLinkDefault","parse","endsWith"],"sources":["../../src/documentation/jsdoc.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}