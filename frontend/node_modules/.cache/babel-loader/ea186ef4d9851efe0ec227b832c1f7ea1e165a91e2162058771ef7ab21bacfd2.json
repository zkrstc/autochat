{"ast":null,"code":"var _Class;\nimport { AbstractMermaidTokenBuilder, CommonValueConverter, InfoGeneratedModule, MermaidGeneratedSharedModule, __name } from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/info/module.ts\nimport { EmptyFileSystem, createDefaultCoreModule, createDefaultSharedCoreModule, inject } from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = (_Class = class InfoTokenBuilder extends AbstractMermaidTokenBuilder {\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n}, __name(_Class, \"InfoTokenBuilder\"), _Class);\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */__name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */__name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(createDefaultSharedCoreModule(context), MermaidGeneratedSharedModule);\n  const Info = inject(createDefaultCoreModule({\n    shared\n  }), InfoGeneratedModule, InfoModule);\n  shared.ServiceRegistry.register(Info);\n  return {\n    shared,\n    Info\n  };\n}\n__name(createInfoServices, \"createInfoServices\");\nexport { InfoModule, createInfoServices };","map":{"version":3,"names":["AbstractMermaidTokenBuilder","CommonValueConverter","InfoGeneratedModule","MermaidGeneratedSharedModule","__name","EmptyFileSystem","createDefaultCoreModule","createDefaultSharedCoreModule","inject","InfoTokenBuilder","_Class","constructor","InfoModule","parser","TokenBuilder","ValueConverter","createInfoServices","context","shared","Info","ServiceRegistry","register"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EXZZNE6F.mjs"],"sourcesContent":["import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n"],"mappings":";AAAA,SACEA,2BAA2B,EAC3BC,oBAAoB,EACpBC,mBAAmB,EACnBC,4BAA4B,EAC5BC,MAAM,QACD,sBAAsB;;AAE7B;AACA,SACEC,eAAe,EACfC,uBAAuB,EACvBC,6BAA6B,EAC7BC,MAAM,QACD,SAAS;;AAEhB;AACA,IAAIC,gBAAgB,IAAAC,MAAA,GAAG,MAAnBD,gBAAgB,SAAiBT,2BAA2B,CAAC;EAI/DW,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;EAC7B;AACF,CAAC,EALGP,MAAM,CAAAM,MAAA,EAAO,kBAAkB,CAAC,EAAAA,MAAA,CAKnC;;AAED;AACA,IAAIE,UAAU,GAAG;EACfC,MAAM,EAAE;IACNC,YAAY,EAAE,eAAgBV,MAAM,CAAC,MAAM,IAAIK,gBAAgB,CAAC,CAAC,EAAE,cAAc,CAAC;IAClFM,cAAc,EAAE,eAAgBX,MAAM,CAAC,MAAM,IAAIH,oBAAoB,CAAC,CAAC,EAAE,gBAAgB;EAC3F;AACF,CAAC;AACD,SAASe,kBAAkBA,CAACC,OAAO,GAAGZ,eAAe,EAAE;EACrD,MAAMa,MAAM,GAAGV,MAAM,CACnBD,6BAA6B,CAACU,OAAO,CAAC,EACtCd,4BACF,CAAC;EACD,MAAMgB,IAAI,GAAGX,MAAM,CACjBF,uBAAuB,CAAC;IAAEY;EAAO,CAAC,CAAC,EACnChB,mBAAmB,EACnBU,UACF,CAAC;EACDM,MAAM,CAACE,eAAe,CAACC,QAAQ,CAACF,IAAI,CAAC;EACrC,OAAO;IAAED,MAAM;IAAEC;EAAK,CAAC;AACzB;AACAf,MAAM,CAACY,kBAAkB,EAAE,oBAAoB,CAAC;AAEhD,SACEJ,UAAU,EACVI,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}