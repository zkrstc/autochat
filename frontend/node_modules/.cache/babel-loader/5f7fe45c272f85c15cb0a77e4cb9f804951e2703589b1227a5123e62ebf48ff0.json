{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport function dedent(templ) {\n  var values = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n  var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n  strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n  var indentLengths = strings.reduce(function (arr, str) {\n    var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n    if (matches) {\n      return arr.concat(matches.map(function (match) {\n        var _a, _b;\n        return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n      }));\n    }\n    return arr;\n  }, []);\n  if (indentLengths.length) {\n    var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n    strings = strings.map(function (str) {\n      return str.replace(pattern_1, '\\n');\n    });\n  }\n  strings[0] = strings[0].replace(/^\\r?\\n/, '');\n  var string = strings[0];\n  values.forEach(function (value, i) {\n    var endentations = string.match(/(?:^|\\n)( *)$/);\n    var endentation = endentations ? endentations[1] : '';\n    var indentedValue = value;\n    if (typeof value === 'string' && value.includes('\\n')) {\n      indentedValue = String(value).split('\\n').map(function (str, i) {\n        return i === 0 ? str : \"\" + endentation + str;\n      }).join('\\n');\n    }\n    string += indentedValue + strings[i + 1];\n  });\n  return string;\n}\nexport default dedent;","map":{"version":3,"names":["dedent","templ","values","_i","arguments","length","strings","Array","from","replace","indentLengths","reduce","arr","str","matches","match","concat","map","_a","_b","pattern_1","RegExp","Math","min","apply","string","forEach","value","i","endentations","endentation","indentedValue","includes","String","split","join"],"sources":["../src/index.ts"],"sourcesContent":[null],"mappings":";;;AAAA,OAAM,SAAUA,MAAMA,CACpBC,KAAoC;EACpC,IAAAC,MAAA;OAAA,IAAAC,EAAA,IAAoB,EAApBA,EAAA,GAAAC,SAAA,CAAAC,MAAoB,EAApBF,EAAA,EAAoB;IAApBD,MAAA,CAAAC,EAAA,QAAAC,SAAA,CAAAD,EAAA;;EAEA,IAAIG,OAAO,GAAGC,KAAK,CAACC,IAAI,CAAC,OAAOP,KAAK,KAAK,QAAQ,GAAG,CAACA,KAAK,CAAC,GAAGA,KAAK,CAAC;EAGrEK,OAAO,CAACA,OAAO,CAACD,MAAM,GAAG,CAAC,CAAC,GAAGC,OAAO,CAACA,OAAO,CAACD,MAAM,GAAG,CAAC,CAAC,CAACI,OAAO,CAC/D,gBAAgB,EAChB,EAAE,CACH;EAGD,IAAMC,aAAa,GAAGJ,OAAO,CAACK,MAAM,CAAC,UAACC,GAAG,EAAEC,GAAG;IAC5C,IAAMC,OAAO,GAAGD,GAAG,CAACE,KAAK,CAAC,qBAAqB,CAAC;IAChD,IAAID,OAAO,EAAE;MACX,OAAOF,GAAG,CAACI,MAAM,CACfF,OAAO,CAACG,GAAG,CAAC,UAACF,KAAK;QAAA,IAAAG,EAAA,EAAAC,EAAA;QAAK,QAAAA,EAAA,IAAAD,EAAA,GAAAH,KAAK,CAACA,KAAK,CAAC,QAAQ,CAAC,cAAAG,EAAA,uBAAAA,EAAA,CAAEb,MAAM,cAAAc,EAAA,cAAAA,EAAA,GAAI,CAAC;MAAA,EAAC,CAC3D;;IAEH,OAAOP,GAAG;EACZ,CAAC,EAAY,EAAE,CAAC;EAGhB,IAAIF,aAAa,CAACL,MAAM,EAAE;IACxB,IAAMe,SAAO,GAAG,IAAIC,MAAM,CAAC,aAAWC,IAAI,CAACC,GAAG,CAAAC,KAAA,CAARF,IAAI,EAAQZ,aAAa,OAAI,EAAE,GAAG,CAAC;IAEzEJ,OAAO,GAAGA,OAAO,CAACW,GAAG,CAAC,UAACJ,GAAG;MAAK,OAAAA,GAAG,CAACJ,OAAO,CAACW,SAAO,EAAE,IAAI,CAAC;IAA1B,CAA0B,CAAC;;EAI5Dd,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EAG7C,IAAIgB,MAAM,GAAGnB,OAAO,CAAC,CAAC,CAAC;EAEvBJ,MAAM,CAACwB,OAAO,CAAC,UAACC,KAAK,EAAEC,CAAC;IAEtB,IAAMC,YAAY,GAAGJ,MAAM,CAACV,KAAK,CAAC,eAAe,CAAC;IAClD,IAAMe,WAAW,GAAGD,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE;IACvD,IAAIE,aAAa,GAAGJ,KAAK;IAEzB,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACK,QAAQ,CAAC,IAAI,CAAC,EAAE;MACrDD,aAAa,GAAGE,MAAM,CAACN,KAAK,CAAC,CAC1BO,KAAK,CAAC,IAAI,CAAC,CACXjB,GAAG,CAAC,UAACJ,GAAG,EAAEe,CAAC;QACV,OAAOA,CAAC,KAAK,CAAC,GAAGf,GAAG,GAAG,KAAGiB,WAAW,GAAGjB,GAAK;MAC/C,CAAC,CAAC,CACDsB,IAAI,CAAC,IAAI,CAAC;;IAGfV,MAAM,IAAIM,aAAa,GAAGzB,OAAO,CAACsB,CAAC,GAAG,CAAC,CAAC;EAC1C,CAAC,CAAC;EAEF,OAAOH,MAAM;AACf;AAEA,eAAezB,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}