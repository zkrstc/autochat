{"ast":null,"code":"import * as _ from 'lodash-es';\nimport * as util from './util.js';\nexport { addBorderSegments };\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n    if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n  _.forEach(g.children(), dfs);\n}\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = {\n    width: 0,\n    height: 0,\n    rank: rank,\n    borderType: prop\n  };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, {\n      weight: 1\n    });\n  }\n}","map":{"version":3,"names":["_","util","addBorderSegments","g","dfs","v","children","node","length","forEach","Object","prototype","hasOwnProperty","call","borderLeft","borderRight","rank","minRank","maxRank","addBorderNode","prop","prefix","sg","sgNode","label","width","height","borderType","prev","curr","addDummyNode","setParent","setEdge","weight"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/dagre-d3-es/src/dagre/add-border-segments.js"],"sourcesContent":["import * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { addBorderSegments };\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (Object.prototype.hasOwnProperty.call(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = util.addDummyNode(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,CAAC,MAAM,WAAW;AAC9B,OAAO,KAAKC,IAAI,MAAM,WAAW;AAEjC,SAASC,iBAAiB;AAE1B,SAASA,iBAAiBA,CAACC,CAAC,EAAE;EAC5B,SAASC,GAAGA,CAACC,CAAC,EAAE;IACd,IAAIC,QAAQ,GAAGH,CAAC,CAACG,QAAQ,CAACD,CAAC,CAAC;IAC5B,IAAIE,IAAI,GAAGJ,CAAC,CAACI,IAAI,CAACF,CAAC,CAAC;IACpB,IAAIC,QAAQ,CAACE,MAAM,EAAE;MACnBR,CAAC,CAACS,OAAO,CAACH,QAAQ,EAAEF,GAAG,CAAC;IAC1B;IAEA,IAAIM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACN,IAAI,EAAE,SAAS,CAAC,EAAE;MACzDA,IAAI,CAACO,UAAU,GAAG,EAAE;MACpBP,IAAI,CAACQ,WAAW,GAAG,EAAE;MACrB,KAAK,IAAIC,IAAI,GAAGT,IAAI,CAACU,OAAO,EAAEC,OAAO,GAAGX,IAAI,CAACW,OAAO,GAAG,CAAC,EAAEF,IAAI,GAAGE,OAAO,EAAE,EAAEF,IAAI,EAAE;QAChFG,aAAa,CAAChB,CAAC,EAAE,YAAY,EAAE,KAAK,EAAEE,CAAC,EAAEE,IAAI,EAAES,IAAI,CAAC;QACpDG,aAAa,CAAChB,CAAC,EAAE,aAAa,EAAE,KAAK,EAAEE,CAAC,EAAEE,IAAI,EAAES,IAAI,CAAC;MACvD;IACF;EACF;EAEAhB,CAAC,CAACS,OAAO,CAACN,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAEF,GAAG,CAAC;AAC9B;AAEA,SAASe,aAAaA,CAAChB,CAAC,EAAEiB,IAAI,EAAEC,MAAM,EAAEC,EAAE,EAAEC,MAAM,EAAEP,IAAI,EAAE;EACxD,IAAIQ,KAAK,GAAG;IAAEC,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE,CAAC;IAAEV,IAAI,EAAEA,IAAI;IAAEW,UAAU,EAAEP;EAAK,CAAC;EACjE,IAAIQ,IAAI,GAAGL,MAAM,CAACH,IAAI,CAAC,CAACJ,IAAI,GAAG,CAAC,CAAC;EACjC,IAAIa,IAAI,GAAG5B,IAAI,CAAC6B,YAAY,CAAC3B,CAAC,EAAE,QAAQ,EAAEqB,KAAK,EAAEH,MAAM,CAAC;EACxDE,MAAM,CAACH,IAAI,CAAC,CAACJ,IAAI,CAAC,GAAGa,IAAI;EACzB1B,CAAC,CAAC4B,SAAS,CAACF,IAAI,EAAEP,EAAE,CAAC;EACrB,IAAIM,IAAI,EAAE;IACRzB,CAAC,CAAC6B,OAAO,CAACJ,IAAI,EAAEC,IAAI,EAAE;MAAEI,MAAM,EAAE;IAAE,CAAC,CAAC;EACtC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}