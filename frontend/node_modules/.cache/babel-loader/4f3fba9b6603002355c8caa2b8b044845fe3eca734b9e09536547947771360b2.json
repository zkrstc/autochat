{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport { emojiComponents } from '../data.mjs';\nconst nameSplit = \": \";\nconst variationSplit = \", \";\nconst ignoredVariations = /* @__PURE__ */new Set([\"person\"]);\nfunction splitEmojiNameVariations(name, sequence, componentsData) {\n  const parts = name.split(nameSplit);\n  const base = parts.shift();\n  if (!parts.length) {\n    return {\n      base,\n      key: base\n    };\n  }\n  const baseVariations = parts.join(nameSplit).split(variationSplit).filter(text => {\n    const type = componentsData.types[text];\n    if (!type) {\n      return !ignoredVariations.has(text);\n    }\n    return false;\n  });\n  const key = base + (baseVariations.length ? nameSplit + baseVariations.join(variationSplit) : \"\");\n  const result = {\n    base,\n    key\n  };\n  let components = 0;\n  const variations = [...baseVariations];\n  for (let index = 0; index < sequence.length; index++) {\n    const num = sequence[index];\n    for (const key2 in emojiComponents) {\n      const type = key2;\n      const range = emojiComponents[type];\n      if (num >= range[0] && num < range[1]) {\n        variations.push({\n          index,\n          type\n        });\n        components++;\n      }\n    }\n  }\n  if (variations.length) {\n    result.variations = variations;\n  }\n  if (components) {\n    result.components = components;\n  }\n  return result;\n}\nexport { splitEmojiNameVariations };","map":{"version":3,"names":["emojiComponents","nameSplit","variationSplit","ignoredVariations","Set","splitEmojiNameVariations","name","sequence","componentsData","parts","split","base","shift","length","key","baseVariations","join","filter","text","type","types","has","result","components","variations","index","num","key2","range","push"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@iconify/utils/lib/emoji/test/name.mjs"],"sourcesContent":["import { emojiComponents } from '../data.mjs';\n\nconst nameSplit = \": \";\nconst variationSplit = \", \";\nconst ignoredVariations = /* @__PURE__ */ new Set([\"person\"]);\nfunction splitEmojiNameVariations(name, sequence, componentsData) {\n  const parts = name.split(nameSplit);\n  const base = parts.shift();\n  if (!parts.length) {\n    return {\n      base,\n      key: base\n    };\n  }\n  const baseVariations = parts.join(nameSplit).split(variationSplit).filter((text) => {\n    const type = componentsData.types[text];\n    if (!type) {\n      return !ignoredVariations.has(text);\n    }\n    return false;\n  });\n  const key = base + (baseVariations.length ? nameSplit + baseVariations.join(variationSplit) : \"\");\n  const result = {\n    base,\n    key\n  };\n  let components = 0;\n  const variations = [\n    ...baseVariations\n  ];\n  for (let index = 0; index < sequence.length; index++) {\n    const num = sequence[index];\n    for (const key2 in emojiComponents) {\n      const type = key2;\n      const range = emojiComponents[type];\n      if (num >= range[0] && num < range[1]) {\n        variations.push({\n          index,\n          type\n        });\n        components++;\n      }\n    }\n  }\n  if (variations.length) {\n    result.variations = variations;\n  }\n  if (components) {\n    result.components = components;\n  }\n  return result;\n}\n\nexport { splitEmojiNameVariations };\n"],"mappings":";;;;;;;;;;AAAA,SAASA,eAAe,QAAQ,aAAa;AAE7C,MAAMC,SAAS,GAAG,IAAI;AACtB,MAAMC,cAAc,GAAG,IAAI;AAC3B,MAAMC,iBAAiB,GAAG,eAAgB,IAAIC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC7D,SAASC,wBAAwBA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,cAAc,EAAE;EAChE,MAAMC,KAAK,GAAGH,IAAI,CAACI,KAAK,CAACT,SAAS,CAAC;EACnC,MAAMU,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC;EAC1B,IAAI,CAACH,KAAK,CAACI,MAAM,EAAE;IACjB,OAAO;MACLF,IAAI;MACJG,GAAG,EAAEH;IACP,CAAC;EACH;EACA,MAAMI,cAAc,GAAGN,KAAK,CAACO,IAAI,CAACf,SAAS,CAAC,CAACS,KAAK,CAACR,cAAc,CAAC,CAACe,MAAM,CAAEC,IAAI,IAAK;IAClF,MAAMC,IAAI,GAAGX,cAAc,CAACY,KAAK,CAACF,IAAI,CAAC;IACvC,IAAI,CAACC,IAAI,EAAE;MACT,OAAO,CAAChB,iBAAiB,CAACkB,GAAG,CAACH,IAAI,CAAC;IACrC;IACA,OAAO,KAAK;EACd,CAAC,CAAC;EACF,MAAMJ,GAAG,GAAGH,IAAI,IAAII,cAAc,CAACF,MAAM,GAAGZ,SAAS,GAAGc,cAAc,CAACC,IAAI,CAACd,cAAc,CAAC,GAAG,EAAE,CAAC;EACjG,MAAMoB,MAAM,GAAG;IACbX,IAAI;IACJG;EACF,CAAC;EACD,IAAIS,UAAU,GAAG,CAAC;EAClB,MAAMC,UAAU,GAAG,CACjB,GAAGT,cAAc,CAClB;EACD,KAAK,IAAIU,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlB,QAAQ,CAACM,MAAM,EAAEY,KAAK,EAAE,EAAE;IACpD,MAAMC,GAAG,GAAGnB,QAAQ,CAACkB,KAAK,CAAC;IAC3B,KAAK,MAAME,IAAI,IAAI3B,eAAe,EAAE;MAClC,MAAMmB,IAAI,GAAGQ,IAAI;MACjB,MAAMC,KAAK,GAAG5B,eAAe,CAACmB,IAAI,CAAC;MACnC,IAAIO,GAAG,IAAIE,KAAK,CAAC,CAAC,CAAC,IAAIF,GAAG,GAAGE,KAAK,CAAC,CAAC,CAAC,EAAE;QACrCJ,UAAU,CAACK,IAAI,CAAC;UACdJ,KAAK;UACLN;QACF,CAAC,CAAC;QACFI,UAAU,EAAE;MACd;IACF;EACF;EACA,IAAIC,UAAU,CAACX,MAAM,EAAE;IACrBS,MAAM,CAACE,UAAU,GAAGA,UAAU;EAChC;EACA,IAAID,UAAU,EAAE;IACdD,MAAM,CAACC,UAAU,GAAGA,UAAU;EAChC;EACA,OAAOD,MAAM;AACf;AAEA,SAASjB,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}