{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { convertEmojiSequenceToUTF16, convertEmojiSequenceToUTF32 } from './convert.mjs';\nimport './data.mjs';\nconst defaultUnicodeOptions = {\n  prefix: \"\",\n  separator: \"\",\n  case: \"lower\",\n  format: \"utf-32\",\n  add0: false,\n  throwOnError: true\n};\nfunction convert(sequence, options) {\n  const prefix = options.prefix;\n  const func = options.case === \"upper\" ? \"toUpperCase\" : \"toLowerCase\";\n  const cleanSequence = options.format === \"utf-16\" ? convertEmojiSequenceToUTF16(sequence) : convertEmojiSequenceToUTF32(sequence, options.throwOnError);\n  return cleanSequence.map(code => {\n    let str = code.toString(16);\n    if (options.add0 && str.length < 4) {\n      str = \"0\".repeat(4 - str.length) + str;\n    }\n    return prefix + str[func]();\n  }).join(options.separator);\n}\nfunction getEmojiUnicodeString(code, options = {}) {\n  return convert([code], {\n    ...defaultUnicodeOptions,\n    ...options\n  });\n}\nconst defaultSequenceOptions = {\n  ...defaultUnicodeOptions,\n  separator: \"-\"\n};\nfunction getEmojiSequenceString(sequence, options = {}) {\n  return convert(sequence, {\n    ...defaultSequenceOptions,\n    ...options\n  });\n}\nfunction getEmojiSequenceKeyword(sequence) {\n  return sequence.map(code => code.toString(16)).join(\"-\");\n}\nexport { getEmojiSequenceKeyword, getEmojiSequenceString, getEmojiUnicodeString };","map":{"version":3,"names":["convertEmojiSequenceToUTF16","convertEmojiSequenceToUTF32","defaultUnicodeOptions","prefix","separator","case","format","add0","throwOnError","convert","sequence","options","func","cleanSequence","map","code","str","toString","length","repeat","join","getEmojiUnicodeString","defaultSequenceOptions","getEmojiSequenceString","getEmojiSequenceKeyword"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@iconify/utils/lib/emoji/format.mjs"],"sourcesContent":["import { convertEmojiSequenceToUTF16, convertEmojiSequenceToUTF32 } from './convert.mjs';\nimport './data.mjs';\n\nconst defaultUnicodeOptions = {\n  prefix: \"\",\n  separator: \"\",\n  case: \"lower\",\n  format: \"utf-32\",\n  add0: false,\n  throwOnError: true\n};\nfunction convert(sequence, options) {\n  const prefix = options.prefix;\n  const func = options.case === \"upper\" ? \"toUpperCase\" : \"toLowerCase\";\n  const cleanSequence = options.format === \"utf-16\" ? convertEmojiSequenceToUTF16(sequence) : convertEmojiSequenceToUTF32(sequence, options.throwOnError);\n  return cleanSequence.map((code) => {\n    let str = code.toString(16);\n    if (options.add0 && str.length < 4) {\n      str = \"0\".repeat(4 - str.length) + str;\n    }\n    return prefix + str[func]();\n  }).join(options.separator);\n}\nfunction getEmojiUnicodeString(code, options = {}) {\n  return convert([code], {\n    ...defaultUnicodeOptions,\n    ...options\n  });\n}\nconst defaultSequenceOptions = {\n  ...defaultUnicodeOptions,\n  separator: \"-\"\n};\nfunction getEmojiSequenceString(sequence, options = {}) {\n  return convert(sequence, {\n    ...defaultSequenceOptions,\n    ...options\n  });\n}\nfunction getEmojiSequenceKeyword(sequence) {\n  return sequence.map((code) => code.toString(16)).join(\"-\");\n}\n\nexport { getEmojiSequenceKeyword, getEmojiSequenceString, getEmojiUnicodeString };\n"],"mappings":";;AAAA,SAASA,2BAA2B,EAAEC,2BAA2B,QAAQ,eAAe;AACxF,OAAO,YAAY;AAEnB,MAAMC,qBAAqB,GAAG;EAC5BC,MAAM,EAAE,EAAE;EACVC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAE,KAAK;EACXC,YAAY,EAAE;AAChB,CAAC;AACD,SAASC,OAAOA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EAClC,MAAMR,MAAM,GAAGQ,OAAO,CAACR,MAAM;EAC7B,MAAMS,IAAI,GAAGD,OAAO,CAACN,IAAI,KAAK,OAAO,GAAG,aAAa,GAAG,aAAa;EACrE,MAAMQ,aAAa,GAAGF,OAAO,CAACL,MAAM,KAAK,QAAQ,GAAGN,2BAA2B,CAACU,QAAQ,CAAC,GAAGT,2BAA2B,CAACS,QAAQ,EAAEC,OAAO,CAACH,YAAY,CAAC;EACvJ,OAAOK,aAAa,CAACC,GAAG,CAAEC,IAAI,IAAK;IACjC,IAAIC,GAAG,GAAGD,IAAI,CAACE,QAAQ,CAAC,EAAE,CAAC;IAC3B,IAAIN,OAAO,CAACJ,IAAI,IAAIS,GAAG,CAACE,MAAM,GAAG,CAAC,EAAE;MAClCF,GAAG,GAAG,GAAG,CAACG,MAAM,CAAC,CAAC,GAAGH,GAAG,CAACE,MAAM,CAAC,GAAGF,GAAG;IACxC;IACA,OAAOb,MAAM,GAAGa,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,CAACQ,IAAI,CAACT,OAAO,CAACP,SAAS,CAAC;AAC5B;AACA,SAASiB,qBAAqBA,CAACN,IAAI,EAAEJ,OAAO,GAAG,CAAC,CAAC,EAAE;EACjD,OAAOF,OAAO,CAAC,CAACM,IAAI,CAAC,EAAE;IACrB,GAAGb,qBAAqB;IACxB,GAAGS;EACL,CAAC,CAAC;AACJ;AACA,MAAMW,sBAAsB,GAAG;EAC7B,GAAGpB,qBAAqB;EACxBE,SAAS,EAAE;AACb,CAAC;AACD,SAASmB,sBAAsBA,CAACb,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EACtD,OAAOF,OAAO,CAACC,QAAQ,EAAE;IACvB,GAAGY,sBAAsB;IACzB,GAAGX;EACL,CAAC,CAAC;AACJ;AACA,SAASa,uBAAuBA,CAACd,QAAQ,EAAE;EACzC,OAAOA,QAAQ,CAACI,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC;AAC5D;AAEA,SAASI,uBAAuB,EAAED,sBAAsB,EAAEF,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}