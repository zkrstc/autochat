{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nconst minDisplayHeight = 16;\nconst maxDisplayHeight = 24;\nfunction validateDisplayHeight(value) {\n  while (value < minDisplayHeight) {\n    value *= 2;\n  }\n  while (value > maxDisplayHeight) {\n    value /= 2;\n  }\n  return value === Math.round(value) && value >= minDisplayHeight && value <= maxDisplayHeight ? value : 0;\n}\nfunction convertIconSetInfo(data, expectedPrefix = \"\") {\n  if (typeof data !== \"object\" || data === null) {\n    return null;\n  }\n  const source = data;\n  const getSourceNestedString = (field, key, defaultValue = \"\") => {\n    if (typeof source[field] !== \"object\") {\n      return defaultValue;\n    }\n    const obj = source[field];\n    return typeof obj[key] === \"string\" ? obj[key] : defaultValue;\n  };\n  let name;\n  if (typeof source.name === \"string\") {\n    name = source.name;\n  } else if (typeof source.title === \"string\") {\n    name = source.title;\n  } else {\n    return null;\n  }\n  if (expectedPrefix !== \"\" && typeof source.prefix === \"string\" && source.prefix !== expectedPrefix) {\n    return null;\n  }\n  const info = {\n    name\n  };\n  switch (typeof source.total) {\n    case \"number\":\n      info.total = source.total;\n      break;\n    case \"string\":\n      {\n        const num = parseInt(source.total);\n        if (num > 0) {\n          info.total = num;\n        }\n        break;\n      }\n  }\n  if (typeof source.version === \"string\") {\n    info.version = source.version;\n  }\n  info.author = {\n    name: getSourceNestedString(\"author\", \"name\", typeof source.author === \"string\" ? source.author : \"\")\n  };\n  if (typeof source.author === \"object\") {\n    const sourceAuthor = source.author;\n    if (typeof sourceAuthor.url === \"string\") {\n      info.author.url = sourceAuthor.url;\n    }\n  }\n  info.license = {\n    title: getSourceNestedString(\"license\", \"title\", typeof source.license === \"string\" ? source.license : \"\")\n  };\n  if (typeof source.license === \"object\") {\n    const sourceLicense = source.license;\n    if (typeof sourceLicense.spdx === \"string\") {\n      info.license.spdx = sourceLicense.spdx;\n    }\n    if (typeof sourceLicense.url === \"string\") {\n      info.license.url = sourceLicense.url;\n    }\n  }\n  if (source.samples instanceof Array) {\n    const samples = [];\n    source.samples.forEach(item => {\n      if (typeof item === \"string\" && !samples.includes(item)) {\n        samples.push(item);\n      }\n    });\n    if (samples.length) {\n      info.samples = samples;\n    }\n  }\n  if (typeof source.height === \"number\" || typeof source.height === \"string\") {\n    const num = parseInt(source.height);\n    if (num > 0) {\n      info.height = num;\n    }\n  }\n  if (source.height instanceof Array) {\n    source.height.forEach(item => {\n      const num = parseInt(item);\n      if (num > 0) {\n        if (!(info.height instanceof Array)) {\n          info.height = [];\n        }\n        info.height.push(num);\n      }\n    });\n    switch (info.height.length) {\n      case 0:\n        delete info.height;\n        break;\n      case 1:\n        info.height = info.height[0];\n    }\n  }\n  if (typeof info.height === \"number\") {\n    const displayHeight = validateDisplayHeight(info.height);\n    if (displayHeight && displayHeight !== info.height) {\n      info.displayHeight = displayHeight;\n    }\n  }\n  [\"samplesHeight\", \"displayHeight\"].forEach(prop => {\n    const value = source[prop];\n    if (typeof value === \"number\" || typeof value === \"string\") {\n      const displayHeight = validateDisplayHeight(parseInt(value));\n      if (displayHeight) {\n        info.displayHeight = displayHeight;\n      }\n    }\n  });\n  if (typeof source.category === \"string\") {\n    info.category = source.category;\n  }\n  if (source.tags instanceof Array) {\n    info.tags = source.tags;\n  }\n  switch (typeof source.palette) {\n    case \"boolean\":\n      info.palette = source.palette;\n      break;\n    case \"string\":\n      switch (source.palette.toLowerCase()) {\n        case \"colorless\":\n        case \"false\":\n          info.palette = false;\n          break;\n        case \"colorful\":\n        case \"true\":\n          info.palette = true;\n      }\n      break;\n  }\n  if (source.hidden === true) {\n    info.hidden = true;\n  }\n  Object.keys(source).forEach(key => {\n    const value = source[key];\n    if (typeof value !== \"string\") {\n      return;\n    }\n    switch (key) {\n      case \"url\":\n      case \"uri\":\n        info.author.url = value;\n        break;\n      case \"licenseURL\":\n      case \"licenseURI\":\n        info.license.url = value;\n        break;\n      case \"licenseID\":\n      case \"licenseSPDX\":\n        info.license.spdx = value;\n        break;\n    }\n  });\n  return info;\n}\nexport { convertIconSetInfo };","map":{"version":3,"names":["minDisplayHeight","maxDisplayHeight","validateDisplayHeight","value","Math","round","convertIconSetInfo","data","expectedPrefix","source","getSourceNestedString","field","key","defaultValue","obj","name","title","prefix","info","total","num","parseInt","version","author","sourceAuthor","url","license","sourceLicense","spdx","samples","Array","forEach","item","includes","push","length","height","displayHeight","prop","category","tags","palette","toLowerCase","hidden","Object","keys"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@iconify/utils/lib/icon-set/convert-info.mjs"],"sourcesContent":["const minDisplayHeight = 16;\nconst maxDisplayHeight = 24;\nfunction validateDisplayHeight(value) {\n  while (value < minDisplayHeight) {\n    value *= 2;\n  }\n  while (value > maxDisplayHeight) {\n    value /= 2;\n  }\n  return value === Math.round(value) && value >= minDisplayHeight && value <= maxDisplayHeight ? value : 0;\n}\nfunction convertIconSetInfo(data, expectedPrefix = \"\") {\n  if (typeof data !== \"object\" || data === null) {\n    return null;\n  }\n  const source = data;\n  const getSourceNestedString = (field, key, defaultValue = \"\") => {\n    if (typeof source[field] !== \"object\") {\n      return defaultValue;\n    }\n    const obj = source[field];\n    return typeof obj[key] === \"string\" ? obj[key] : defaultValue;\n  };\n  let name;\n  if (typeof source.name === \"string\") {\n    name = source.name;\n  } else if (typeof source.title === \"string\") {\n    name = source.title;\n  } else {\n    return null;\n  }\n  if (expectedPrefix !== \"\" && typeof source.prefix === \"string\" && source.prefix !== expectedPrefix) {\n    return null;\n  }\n  const info = {\n    name\n  };\n  switch (typeof source.total) {\n    case \"number\":\n      info.total = source.total;\n      break;\n    case \"string\": {\n      const num = parseInt(source.total);\n      if (num > 0) {\n        info.total = num;\n      }\n      break;\n    }\n  }\n  if (typeof source.version === \"string\") {\n    info.version = source.version;\n  }\n  info.author = {\n    name: getSourceNestedString(\n      \"author\",\n      \"name\",\n      typeof source.author === \"string\" ? source.author : \"\"\n    )\n  };\n  if (typeof source.author === \"object\") {\n    const sourceAuthor = source.author;\n    if (typeof sourceAuthor.url === \"string\") {\n      info.author.url = sourceAuthor.url;\n    }\n  }\n  info.license = {\n    title: getSourceNestedString(\n      \"license\",\n      \"title\",\n      typeof source.license === \"string\" ? source.license : \"\"\n    )\n  };\n  if (typeof source.license === \"object\") {\n    const sourceLicense = source.license;\n    if (typeof sourceLicense.spdx === \"string\") {\n      info.license.spdx = sourceLicense.spdx;\n    }\n    if (typeof sourceLicense.url === \"string\") {\n      info.license.url = sourceLicense.url;\n    }\n  }\n  if (source.samples instanceof Array) {\n    const samples = [];\n    source.samples.forEach((item) => {\n      if (typeof item === \"string\" && !samples.includes(item)) {\n        samples.push(item);\n      }\n    });\n    if (samples.length) {\n      info.samples = samples;\n    }\n  }\n  if (typeof source.height === \"number\" || typeof source.height === \"string\") {\n    const num = parseInt(source.height);\n    if (num > 0) {\n      info.height = num;\n    }\n  }\n  if (source.height instanceof Array) {\n    source.height.forEach((item) => {\n      const num = parseInt(item);\n      if (num > 0) {\n        if (!(info.height instanceof Array)) {\n          info.height = [];\n        }\n        info.height.push(num);\n      }\n    });\n    switch (info.height.length) {\n      case 0:\n        delete info.height;\n        break;\n      case 1:\n        info.height = info.height[0];\n    }\n  }\n  if (typeof info.height === \"number\") {\n    const displayHeight = validateDisplayHeight(info.height);\n    if (displayHeight && displayHeight !== info.height) {\n      info.displayHeight = displayHeight;\n    }\n  }\n  [\"samplesHeight\", \"displayHeight\"].forEach((prop) => {\n    const value = source[prop];\n    if (typeof value === \"number\" || typeof value === \"string\") {\n      const displayHeight = validateDisplayHeight(\n        parseInt(value)\n      );\n      if (displayHeight) {\n        info.displayHeight = displayHeight;\n      }\n    }\n  });\n  if (typeof source.category === \"string\") {\n    info.category = source.category;\n  }\n  if (source.tags instanceof Array) {\n    info.tags = source.tags;\n  }\n  switch (typeof source.palette) {\n    case \"boolean\":\n      info.palette = source.palette;\n      break;\n    case \"string\":\n      switch (source.palette.toLowerCase()) {\n        case \"colorless\":\n        case \"false\":\n          info.palette = false;\n          break;\n        case \"colorful\":\n        case \"true\":\n          info.palette = true;\n      }\n      break;\n  }\n  if (source.hidden === true) {\n    info.hidden = true;\n  }\n  Object.keys(source).forEach((key) => {\n    const value = source[key];\n    if (typeof value !== \"string\") {\n      return;\n    }\n    switch (key) {\n      case \"url\":\n      case \"uri\":\n        info.author.url = value;\n        break;\n      case \"licenseURL\":\n      case \"licenseURI\":\n        info.license.url = value;\n        break;\n      case \"licenseID\":\n      case \"licenseSPDX\":\n        info.license.spdx = value;\n        break;\n    }\n  });\n  return info;\n}\n\nexport { convertIconSetInfo };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}