{"ast":null,"code":"/* IMPORT */\nimport { TYPE } from '../constants.js';\n/* MAIN */\nclass Type {\n  constructor() {\n    /* VARIABLES */\n    this.type = TYPE.ALL;\n  }\n  /* API */\n  get() {\n    return this.type;\n  }\n  set(type) {\n    if (this.type && this.type !== type) throw new Error('Cannot change both RGB and HSL channels at the same time');\n    this.type = type;\n  }\n  reset() {\n    this.type = TYPE.ALL;\n  }\n  is(type) {\n    return this.type === type;\n  }\n}\n/* EXPORT */\nexport default Type;","map":{"version":3,"names":["TYPE","Type","constructor","type","ALL","get","set","Error","reset","is"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/khroma/dist/channels/type.js"],"sourcesContent":["/* IMPORT */\nimport { TYPE } from '../constants.js';\n/* MAIN */\nclass Type {\n    constructor() {\n        /* VARIABLES */\n        this.type = TYPE.ALL;\n    }\n    /* API */\n    get() {\n        return this.type;\n    }\n    set(type) {\n        if (this.type && this.type !== type)\n            throw new Error('Cannot change both RGB and HSL channels at the same time');\n        this.type = type;\n    }\n    reset() {\n        this.type = TYPE.ALL;\n    }\n    is(type) {\n        return this.type === type;\n    }\n}\n/* EXPORT */\nexport default Type;\n"],"mappings":"AAAA;AACA,SAASA,IAAI,QAAQ,iBAAiB;AACtC;AACA,MAAMC,IAAI,CAAC;EACPC,WAAWA,CAAA,EAAG;IACV;IACA,IAAI,CAACC,IAAI,GAAGH,IAAI,CAACI,GAAG;EACxB;EACA;EACAC,GAAGA,CAAA,EAAG;IACF,OAAO,IAAI,CAACF,IAAI;EACpB;EACAG,GAAGA,CAACH,IAAI,EAAE;IACN,IAAI,IAAI,CAACA,IAAI,IAAI,IAAI,CAACA,IAAI,KAAKA,IAAI,EAC/B,MAAM,IAAII,KAAK,CAAC,0DAA0D,CAAC;IAC/E,IAAI,CAACJ,IAAI,GAAGA,IAAI;EACpB;EACAK,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACL,IAAI,GAAGH,IAAI,CAACI,GAAG;EACxB;EACAK,EAAEA,CAACN,IAAI,EAAE;IACL,OAAO,IAAI,CAACA,IAAI,KAAKA,IAAI;EAC7B;AACJ;AACA;AACA,eAAeF,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}