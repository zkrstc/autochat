{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as _ from 'lodash-es';\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n    visited[v] = true;\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}","map":{"version":3,"names":["_","dfs","g","vs","order","isArray","navigation","isDirected","successors","neighbors","bind","acc","visited","each","v","hasNode","Error","doDfs","postorder","Object","prototype","hasOwnProperty","call","push","w"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/dagre-d3-es/src/graphlib/alg/dfs.js"],"sourcesContent":["import * as _ from 'lodash-es';\n\nexport { dfs };\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!Object.prototype.hasOwnProperty.call(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n"],"mappings":";AAAA,OAAO,KAAKA,CAAC,MAAM,WAAW;AAE9B,SAASC,GAAG;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,GAAGA,CAACC,CAAC,EAAEC,EAAE,EAAEC,KAAK,EAAE;EACzB,IAAI,CAACJ,CAAC,CAACK,OAAO,CAACF,EAAE,CAAC,EAAE;IAClBA,EAAE,GAAG,CAACA,EAAE,CAAC;EACX;EAEA,IAAIG,UAAU,GAAG,CAACJ,CAAC,CAACK,UAAU,CAAC,CAAC,GAAGL,CAAC,CAACM,UAAU,GAAGN,CAAC,CAACO,SAAS,EAAEC,IAAI,CAACR,CAAC,CAAC;EAEtE,IAAIS,GAAG,GAAG,EAAE;EACZ,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChBZ,CAAC,CAACa,IAAI,CAACV,EAAE,EAAE,UAAUW,CAAC,EAAE;IACtB,IAAI,CAACZ,CAAC,CAACa,OAAO,CAACD,CAAC,CAAC,EAAE;MACjB,MAAM,IAAIE,KAAK,CAAC,4BAA4B,GAAGF,CAAC,CAAC;IACnD;IAEAG,KAAK,CAACf,CAAC,EAAEY,CAAC,EAAEV,KAAK,KAAK,MAAM,EAAEQ,OAAO,EAAEN,UAAU,EAAEK,GAAG,CAAC;EACzD,CAAC,CAAC;EACF,OAAOA,GAAG;AACZ;AAEA,SAASM,KAAKA,CAACf,CAAC,EAAEY,CAAC,EAAEI,SAAS,EAAEN,OAAO,EAAEN,UAAU,EAAEK,GAAG,EAAE;EACxD,IAAI,CAACQ,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACV,OAAO,EAAEE,CAAC,CAAC,EAAE;IACrDF,OAAO,CAACE,CAAC,CAAC,GAAG,IAAI;IAEjB,IAAI,CAACI,SAAS,EAAE;MACdP,GAAG,CAACY,IAAI,CAACT,CAAC,CAAC;IACb;IACAd,CAAC,CAACa,IAAI,CAACP,UAAU,CAACQ,CAAC,CAAC,EAAE,UAAUU,CAAC,EAAE;MACjCP,KAAK,CAACf,CAAC,EAAEsB,CAAC,EAAEN,SAAS,EAAEN,OAAO,EAAEN,UAAU,EAAEK,GAAG,CAAC;IAClD,CAAC,CAAC;IACF,IAAIO,SAAS,EAAE;MACbP,GAAG,CAACY,IAAI,CAACT,CAAC,CAAC;IACb;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}