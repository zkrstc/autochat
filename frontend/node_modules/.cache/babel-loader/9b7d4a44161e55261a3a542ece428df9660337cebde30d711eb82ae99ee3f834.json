{"ast":null,"code":"import _defineProperty from \"C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _Class;\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { getDiagramElement, setupViewPortForSVG } from \"./chunk-RZ5BOZE2.mjs\";\nimport { render } from \"./chunk-TYCBKAJE.mjs\";\nimport { generateId, utils_default } from \"./chunk-O4NI6UNU.mjs\";\nimport { __name, clear, common_default, getAccDescription, getAccTitle, getConfig2 as getConfig, getDiagramTitle, log, setAccDescription, setAccTitle, setDiagramTitle } from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/state/parser/stateDiagram.jison\nvar parser = function () {\n  var o = /* @__PURE__ */__name(function (k, v, o2, l) {\n      for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v);\n      return o2;\n    }, \"o\"),\n    $V0 = [1, 2],\n    $V1 = [1, 3],\n    $V2 = [1, 4],\n    $V3 = [2, 4],\n    $V4 = [1, 9],\n    $V5 = [1, 11],\n    $V6 = [1, 16],\n    $V7 = [1, 17],\n    $V8 = [1, 18],\n    $V9 = [1, 19],\n    $Va = [1, 32],\n    $Vb = [1, 20],\n    $Vc = [1, 21],\n    $Vd = [1, 22],\n    $Ve = [1, 23],\n    $Vf = [1, 24],\n    $Vg = [1, 26],\n    $Vh = [1, 27],\n    $Vi = [1, 28],\n    $Vj = [1, 29],\n    $Vk = [1, 30],\n    $Vl = [1, 31],\n    $Vm = [1, 34],\n    $Vn = [1, 35],\n    $Vo = [1, 36],\n    $Vp = [1, 37],\n    $Vq = [1, 33],\n    $Vr = [1, 4, 5, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54],\n    $Vs = [1, 4, 5, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54],\n    $Vt = [4, 5, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54];\n  var parser2 = {\n    trace: /* @__PURE__ */__name(function trace() {}, \"trace\"),\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"SPACE\": 4,\n      \"NL\": 5,\n      \"SD\": 6,\n      \"document\": 7,\n      \"line\": 8,\n      \"statement\": 9,\n      \"classDefStatement\": 10,\n      \"styleStatement\": 11,\n      \"cssClassStatement\": 12,\n      \"idStatement\": 13,\n      \"DESCR\": 14,\n      \"-->\": 15,\n      \"HIDE_EMPTY\": 16,\n      \"scale\": 17,\n      \"WIDTH\": 18,\n      \"COMPOSIT_STATE\": 19,\n      \"STRUCT_START\": 20,\n      \"STRUCT_STOP\": 21,\n      \"STATE_DESCR\": 22,\n      \"AS\": 23,\n      \"ID\": 24,\n      \"FORK\": 25,\n      \"JOIN\": 26,\n      \"CHOICE\": 27,\n      \"CONCURRENT\": 28,\n      \"note\": 29,\n      \"notePosition\": 30,\n      \"NOTE_TEXT\": 31,\n      \"direction\": 32,\n      \"acc_title\": 33,\n      \"acc_title_value\": 34,\n      \"acc_descr\": 35,\n      \"acc_descr_value\": 36,\n      \"acc_descr_multiline_value\": 37,\n      \"classDef\": 38,\n      \"CLASSDEF_ID\": 39,\n      \"CLASSDEF_STYLEOPTS\": 40,\n      \"DEFAULT\": 41,\n      \"style\": 42,\n      \"STYLE_IDS\": 43,\n      \"STYLEDEF_STYLEOPTS\": 44,\n      \"class\": 45,\n      \"CLASSENTITY_IDS\": 46,\n      \"STYLECLASS\": 47,\n      \"direction_tb\": 48,\n      \"direction_bt\": 49,\n      \"direction_rl\": 50,\n      \"direction_lr\": 51,\n      \"eol\": 52,\n      \";\": 53,\n      \"EDGE_STATE\": 54,\n      \"STYLE_SEPARATOR\": 55,\n      \"left_of\": 56,\n      \"right_of\": 57,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      4: \"SPACE\",\n      5: \"NL\",\n      6: \"SD\",\n      14: \"DESCR\",\n      15: \"-->\",\n      16: \"HIDE_EMPTY\",\n      17: \"scale\",\n      18: \"WIDTH\",\n      19: \"COMPOSIT_STATE\",\n      20: \"STRUCT_START\",\n      21: \"STRUCT_STOP\",\n      22: \"STATE_DESCR\",\n      23: \"AS\",\n      24: \"ID\",\n      25: \"FORK\",\n      26: \"JOIN\",\n      27: \"CHOICE\",\n      28: \"CONCURRENT\",\n      29: \"note\",\n      31: \"NOTE_TEXT\",\n      33: \"acc_title\",\n      34: \"acc_title_value\",\n      35: \"acc_descr\",\n      36: \"acc_descr_value\",\n      37: \"acc_descr_multiline_value\",\n      38: \"classDef\",\n      39: \"CLASSDEF_ID\",\n      40: \"CLASSDEF_STYLEOPTS\",\n      41: \"DEFAULT\",\n      42: \"style\",\n      43: \"STYLE_IDS\",\n      44: \"STYLEDEF_STYLEOPTS\",\n      45: \"class\",\n      46: \"CLASSENTITY_IDS\",\n      47: \"STYLECLASS\",\n      48: \"direction_tb\",\n      49: \"direction_bt\",\n      50: \"direction_rl\",\n      51: \"direction_lr\",\n      53: \";\",\n      54: \"EDGE_STATE\",\n      55: \"STYLE_SEPARATOR\",\n      56: \"left_of\",\n      57: \"right_of\"\n    },\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [8, 1], [8, 1], [9, 1], [9, 1], [9, 1], [9, 1], [9, 2], [9, 3], [9, 4], [9, 1], [9, 2], [9, 1], [9, 4], [9, 3], [9, 6], [9, 1], [9, 1], [9, 1], [9, 1], [9, 4], [9, 4], [9, 1], [9, 2], [9, 2], [9, 1], [10, 3], [10, 3], [11, 3], [12, 3], [32, 1], [32, 1], [32, 1], [32, 1], [52, 1], [52, 1], [13, 1], [13, 1], [13, 3], [13, 3], [30, 1], [30, 1]],\n    performAction: /* @__PURE__ */__name(function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 3:\n          yy.setRootDoc($$[$0]);\n          return $$[$0];\n          break;\n        case 4:\n          this.$ = [];\n          break;\n        case 5:\n          if ($$[$0] != \"nl\") {\n            $$[$0 - 1].push($$[$0]);\n            this.$ = $$[$0 - 1];\n          }\n          break;\n        case 6:\n        case 7:\n          this.$ = $$[$0];\n          break;\n        case 8:\n          this.$ = \"nl\";\n          break;\n        case 12:\n          this.$ = $$[$0];\n          break;\n        case 13:\n          const stateStmt = $$[$0 - 1];\n          stateStmt.description = yy.trimColon($$[$0]);\n          this.$ = stateStmt;\n          break;\n        case 14:\n          this.$ = {\n            stmt: \"relation\",\n            state1: $$[$0 - 2],\n            state2: $$[$0]\n          };\n          break;\n        case 15:\n          const relDescription = yy.trimColon($$[$0]);\n          this.$ = {\n            stmt: \"relation\",\n            state1: $$[$0 - 3],\n            state2: $$[$0 - 1],\n            description: relDescription\n          };\n          break;\n        case 19:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0 - 3],\n            type: \"default\",\n            description: \"\",\n            doc: $$[$0 - 1]\n          };\n          break;\n        case 20:\n          var id = $$[$0];\n          var description = $$[$0 - 2].trim();\n          if ($$[$0].match(\":\")) {\n            var parts = $$[$0].split(\":\");\n            id = parts[0];\n            description = [description, parts[1]];\n          }\n          this.$ = {\n            stmt: \"state\",\n            id,\n            type: \"default\",\n            description\n          };\n          break;\n        case 21:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0 - 3],\n            type: \"default\",\n            description: $$[$0 - 5],\n            doc: $$[$0 - 1]\n          };\n          break;\n        case 22:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0],\n            type: \"fork\"\n          };\n          break;\n        case 23:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0],\n            type: \"join\"\n          };\n          break;\n        case 24:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0],\n            type: \"choice\"\n          };\n          break;\n        case 25:\n          this.$ = {\n            stmt: \"state\",\n            id: yy.getDividerId(),\n            type: \"divider\"\n          };\n          break;\n        case 26:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0 - 1].trim(),\n            note: {\n              position: $$[$0 - 2].trim(),\n              text: $$[$0].trim()\n            }\n          };\n          break;\n        case 29:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 30:\n        case 31:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 32:\n        case 33:\n          this.$ = {\n            stmt: \"classDef\",\n            id: $$[$0 - 1].trim(),\n            classes: $$[$0].trim()\n          };\n          break;\n        case 34:\n          this.$ = {\n            stmt: \"style\",\n            id: $$[$0 - 1].trim(),\n            styleClass: $$[$0].trim()\n          };\n          break;\n        case 35:\n          this.$ = {\n            stmt: \"applyClass\",\n            id: $$[$0 - 1].trim(),\n            styleClass: $$[$0].trim()\n          };\n          break;\n        case 36:\n          yy.setDirection(\"TB\");\n          this.$ = {\n            stmt: \"dir\",\n            value: \"TB\"\n          };\n          break;\n        case 37:\n          yy.setDirection(\"BT\");\n          this.$ = {\n            stmt: \"dir\",\n            value: \"BT\"\n          };\n          break;\n        case 38:\n          yy.setDirection(\"RL\");\n          this.$ = {\n            stmt: \"dir\",\n            value: \"RL\"\n          };\n          break;\n        case 39:\n          yy.setDirection(\"LR\");\n          this.$ = {\n            stmt: \"dir\",\n            value: \"LR\"\n          };\n          break;\n        case 42:\n        case 43:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0].trim(),\n            type: \"default\",\n            description: \"\"\n          };\n          break;\n        case 44:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0 - 2].trim(),\n            classes: [$$[$0].trim()],\n            type: \"default\",\n            description: \"\"\n          };\n          break;\n        case 45:\n          this.$ = {\n            stmt: \"state\",\n            id: $$[$0 - 2].trim(),\n            classes: [$$[$0].trim()],\n            type: \"default\",\n            description: \"\"\n          };\n          break;\n      }\n    }, \"anonymous\"),\n    table: [{\n      3: 1,\n      4: $V0,\n      5: $V1,\n      6: $V2\n    }, {\n      1: [3]\n    }, {\n      3: 5,\n      4: $V0,\n      5: $V1,\n      6: $V2\n    }, {\n      3: 6,\n      4: $V0,\n      5: $V1,\n      6: $V2\n    }, o([1, 4, 5, 16, 17, 19, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $V3, {\n      7: 7\n    }), {\n      1: [2, 1]\n    }, {\n      1: [2, 2]\n    }, {\n      1: [2, 3],\n      4: $V4,\n      5: $V5,\n      8: 8,\n      9: 10,\n      10: 12,\n      11: 13,\n      12: 14,\n      13: 15,\n      16: $V6,\n      17: $V7,\n      19: $V8,\n      22: $V9,\n      24: $Va,\n      25: $Vb,\n      26: $Vc,\n      27: $Vd,\n      28: $Ve,\n      29: $Vf,\n      32: 25,\n      33: $Vg,\n      35: $Vh,\n      37: $Vi,\n      38: $Vj,\n      42: $Vk,\n      45: $Vl,\n      48: $Vm,\n      49: $Vn,\n      50: $Vo,\n      51: $Vp,\n      54: $Vq\n    }, o($Vr, [2, 5]), {\n      9: 38,\n      10: 12,\n      11: 13,\n      12: 14,\n      13: 15,\n      16: $V6,\n      17: $V7,\n      19: $V8,\n      22: $V9,\n      24: $Va,\n      25: $Vb,\n      26: $Vc,\n      27: $Vd,\n      28: $Ve,\n      29: $Vf,\n      32: 25,\n      33: $Vg,\n      35: $Vh,\n      37: $Vi,\n      38: $Vj,\n      42: $Vk,\n      45: $Vl,\n      48: $Vm,\n      49: $Vn,\n      50: $Vo,\n      51: $Vp,\n      54: $Vq\n    }, o($Vr, [2, 7]), o($Vr, [2, 8]), o($Vr, [2, 9]), o($Vr, [2, 10]), o($Vr, [2, 11]), o($Vr, [2, 12], {\n      14: [1, 39],\n      15: [1, 40]\n    }), o($Vr, [2, 16]), {\n      18: [1, 41]\n    }, o($Vr, [2, 18], {\n      20: [1, 42]\n    }), {\n      23: [1, 43]\n    }, o($Vr, [2, 22]), o($Vr, [2, 23]), o($Vr, [2, 24]), o($Vr, [2, 25]), {\n      30: 44,\n      31: [1, 45],\n      56: [1, 46],\n      57: [1, 47]\n    }, o($Vr, [2, 28]), {\n      34: [1, 48]\n    }, {\n      36: [1, 49]\n    }, o($Vr, [2, 31]), {\n      39: [1, 50],\n      41: [1, 51]\n    }, {\n      43: [1, 52]\n    }, {\n      46: [1, 53]\n    }, o($Vs, [2, 42], {\n      55: [1, 54]\n    }), o($Vs, [2, 43], {\n      55: [1, 55]\n    }), o($Vr, [2, 36]), o($Vr, [2, 37]), o($Vr, [2, 38]), o($Vr, [2, 39]), o($Vr, [2, 6]), o($Vr, [2, 13]), {\n      13: 56,\n      24: $Va,\n      54: $Vq\n    }, o($Vr, [2, 17]), o($Vt, $V3, {\n      7: 57\n    }), {\n      24: [1, 58]\n    }, {\n      24: [1, 59]\n    }, {\n      23: [1, 60]\n    }, {\n      24: [2, 46]\n    }, {\n      24: [2, 47]\n    }, o($Vr, [2, 29]), o($Vr, [2, 30]), {\n      40: [1, 61]\n    }, {\n      40: [1, 62]\n    }, {\n      44: [1, 63]\n    }, {\n      47: [1, 64]\n    }, {\n      24: [1, 65]\n    }, {\n      24: [1, 66]\n    }, o($Vr, [2, 14], {\n      14: [1, 67]\n    }), {\n      4: $V4,\n      5: $V5,\n      8: 8,\n      9: 10,\n      10: 12,\n      11: 13,\n      12: 14,\n      13: 15,\n      16: $V6,\n      17: $V7,\n      19: $V8,\n      21: [1, 68],\n      22: $V9,\n      24: $Va,\n      25: $Vb,\n      26: $Vc,\n      27: $Vd,\n      28: $Ve,\n      29: $Vf,\n      32: 25,\n      33: $Vg,\n      35: $Vh,\n      37: $Vi,\n      38: $Vj,\n      42: $Vk,\n      45: $Vl,\n      48: $Vm,\n      49: $Vn,\n      50: $Vo,\n      51: $Vp,\n      54: $Vq\n    }, o($Vr, [2, 20], {\n      20: [1, 69]\n    }), {\n      31: [1, 70]\n    }, {\n      24: [1, 71]\n    }, o($Vr, [2, 32]), o($Vr, [2, 33]), o($Vr, [2, 34]), o($Vr, [2, 35]), o($Vs, [2, 44]), o($Vs, [2, 45]), o($Vr, [2, 15]), o($Vr, [2, 19]), o($Vt, $V3, {\n      7: 72\n    }), o($Vr, [2, 26]), o($Vr, [2, 27]), {\n      4: $V4,\n      5: $V5,\n      8: 8,\n      9: 10,\n      10: 12,\n      11: 13,\n      12: 14,\n      13: 15,\n      16: $V6,\n      17: $V7,\n      19: $V8,\n      21: [1, 73],\n      22: $V9,\n      24: $Va,\n      25: $Vb,\n      26: $Vc,\n      27: $Vd,\n      28: $Ve,\n      29: $Vf,\n      32: 25,\n      33: $Vg,\n      35: $Vh,\n      37: $Vi,\n      38: $Vj,\n      42: $Vk,\n      45: $Vl,\n      48: $Vm,\n      49: $Vn,\n      50: $Vo,\n      51: $Vp,\n      54: $Vq\n    }, o($Vr, [2, 21])],\n    defaultActions: {\n      5: [2, 1],\n      6: [2, 2],\n      46: [2, 46],\n      47: [2, 47]\n    },\n    parseError: /* @__PURE__ */__name(function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    }, \"parseError\"),\n    parse: /* @__PURE__ */__name(function parse(input) {\n      var self = this,\n        stack = [0],\n        tstack = [],\n        vstack = [null],\n        lstack = [],\n        table = this.table,\n        yytext = \"\",\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n      __name(popStack, \"popStack\");\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      __name(lex, \"lex\");\n      var symbol,\n        preErrorSymbol,\n        state,\n        action,\n        a,\n        r,\n        yyval = {},\n        p,\n        len,\n        newState,\n        expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }, \"parse\")\n  };\n  var lexer = /* @__PURE__ */function () {\n    var lexer2 = {\n      EOF: 1,\n      parseError: /* @__PURE__ */__name(function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      }, \"parseError\"),\n      // resets the lexer, sets new input\n      setInput: /* @__PURE__ */__name(function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      }, \"setInput\"),\n      // consumes and returns one char from the input\n      input: /* @__PURE__ */__name(function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      }, \"input\"),\n      // unshifts one char (or a string) into the input\n      unput: /* @__PURE__ */__name(function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      }, \"unput\"),\n      // When called from action, caches matched text and appends it on next action\n      more: /* @__PURE__ */__name(function () {\n        this._more = true;\n        return this;\n      }, \"more\"),\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: /* @__PURE__ */__name(function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      }, \"reject\"),\n      // retain first n characters of the match\n      less: /* @__PURE__ */__name(function (n) {\n        this.unput(this.match.slice(n));\n      }, \"less\"),\n      // displays already matched input, i.e. for error messages\n      pastInput: /* @__PURE__ */__name(function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      }, \"pastInput\"),\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: /* @__PURE__ */__name(function () {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      }, \"upcomingInput\"),\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: /* @__PURE__ */__name(function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      }, \"showPosition\"),\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: /* @__PURE__ */__name(function (match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      }, \"test_match\"),\n      // return next match in input\n      next: /* @__PURE__ */__name(function () {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      }, \"next\"),\n      // return next match that has a token\n      lex: /* @__PURE__ */__name(function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      }, \"lex\"),\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: /* @__PURE__ */__name(function begin(condition) {\n        this.conditionStack.push(condition);\n      }, \"begin\"),\n      // pop the previously active lexer condition state off the condition stack\n      popState: /* @__PURE__ */__name(function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      }, \"popState\"),\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: /* @__PURE__ */__name(function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      }, \"_currentRules\"),\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: /* @__PURE__ */__name(function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      }, \"topState\"),\n      // alias for begin(condition)\n      pushState: /* @__PURE__ */__name(function pushState(condition) {\n        this.begin(condition);\n      }, \"pushState\"),\n      // return the number of states currently on the stack\n      stateStackSize: /* @__PURE__ */__name(function stateStackSize() {\n        return this.conditionStack.length;\n      }, \"stateStackSize\"),\n      options: {\n        \"case-insensitive\": true\n      },\n      performAction: /* @__PURE__ */__name(function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 41;\n            break;\n          case 1:\n            return 48;\n            break;\n          case 2:\n            return 49;\n            break;\n          case 3:\n            return 50;\n            break;\n          case 4:\n            return 51;\n            break;\n          case 5:\n            break;\n          case 6:\n            {}\n            break;\n          case 7:\n            return 5;\n            break;\n          case 8:\n            break;\n          case 9:\n            break;\n          case 10:\n            break;\n          case 11:\n            break;\n          case 12:\n            this.pushState(\"SCALE\");\n            return 17;\n            break;\n          case 13:\n            return 18;\n            break;\n          case 14:\n            this.popState();\n            break;\n          case 15:\n            this.begin(\"acc_title\");\n            return 33;\n            break;\n          case 16:\n            this.popState();\n            return \"acc_title_value\";\n            break;\n          case 17:\n            this.begin(\"acc_descr\");\n            return 35;\n            break;\n          case 18:\n            this.popState();\n            return \"acc_descr_value\";\n            break;\n          case 19:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 20:\n            this.popState();\n            break;\n          case 21:\n            return \"acc_descr_multiline_value\";\n            break;\n          case 22:\n            this.pushState(\"CLASSDEF\");\n            return 38;\n            break;\n          case 23:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return \"DEFAULT_CLASSDEF_ID\";\n            break;\n          case 24:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return 39;\n            break;\n          case 25:\n            this.popState();\n            return 40;\n            break;\n          case 26:\n            this.pushState(\"CLASS\");\n            return 45;\n            break;\n          case 27:\n            this.popState();\n            this.pushState(\"CLASS_STYLE\");\n            return 46;\n            break;\n          case 28:\n            this.popState();\n            return 47;\n            break;\n          case 29:\n            this.pushState(\"STYLE\");\n            return 42;\n            break;\n          case 30:\n            this.popState();\n            this.pushState(\"STYLEDEF_STYLES\");\n            return 43;\n            break;\n          case 31:\n            this.popState();\n            return 44;\n            break;\n          case 32:\n            this.pushState(\"SCALE\");\n            return 17;\n            break;\n          case 33:\n            return 18;\n            break;\n          case 34:\n            this.popState();\n            break;\n          case 35:\n            this.pushState(\"STATE\");\n            break;\n          case 36:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 25;\n            break;\n          case 37:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 26;\n            break;\n          case 38:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\n            return 27;\n            break;\n          case 39:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 25;\n            break;\n          case 40:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 26;\n            break;\n          case 41:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\n            return 27;\n            break;\n          case 42:\n            return 48;\n            break;\n          case 43:\n            return 49;\n            break;\n          case 44:\n            return 50;\n            break;\n          case 45:\n            return 51;\n            break;\n          case 46:\n            this.pushState(\"STATE_STRING\");\n            break;\n          case 47:\n            this.pushState(\"STATE_ID\");\n            return \"AS\";\n            break;\n          case 48:\n            this.popState();\n            return \"ID\";\n            break;\n          case 49:\n            this.popState();\n            break;\n          case 50:\n            return \"STATE_DESCR\";\n            break;\n          case 51:\n            return 19;\n            break;\n          case 52:\n            this.popState();\n            break;\n          case 53:\n            this.popState();\n            this.pushState(\"struct\");\n            return 20;\n            break;\n          case 54:\n            break;\n          case 55:\n            this.popState();\n            return 21;\n            break;\n          case 56:\n            break;\n          case 57:\n            this.begin(\"NOTE\");\n            return 29;\n            break;\n          case 58:\n            this.popState();\n            this.pushState(\"NOTE_ID\");\n            return 56;\n            break;\n          case 59:\n            this.popState();\n            this.pushState(\"NOTE_ID\");\n            return 57;\n            break;\n          case 60:\n            this.popState();\n            this.pushState(\"FLOATING_NOTE\");\n            break;\n          case 61:\n            this.popState();\n            this.pushState(\"FLOATING_NOTE_ID\");\n            return \"AS\";\n            break;\n          case 62:\n            break;\n          case 63:\n            return \"NOTE_TEXT\";\n            break;\n          case 64:\n            this.popState();\n            return \"ID\";\n            break;\n          case 65:\n            this.popState();\n            this.pushState(\"NOTE_TEXT\");\n            return 24;\n            break;\n          case 66:\n            this.popState();\n            yy_.yytext = yy_.yytext.substr(2).trim();\n            return 31;\n            break;\n          case 67:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 31;\n            break;\n          case 68:\n            return 6;\n            break;\n          case 69:\n            return 6;\n            break;\n          case 70:\n            return 16;\n            break;\n          case 71:\n            return 54;\n            break;\n          case 72:\n            return 24;\n            break;\n          case 73:\n            yy_.yytext = yy_.yytext.trim();\n            return 14;\n            break;\n          case 74:\n            return 15;\n            break;\n          case 75:\n            return 28;\n            break;\n          case 76:\n            return 55;\n            break;\n          case 77:\n            return 5;\n            break;\n          case 78:\n            return \"INVALID\";\n            break;\n        }\n      }, \"anonymous\"),\n      rules: [/^(?:default\\b)/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:[\\s]+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:classDef\\s+)/i, /^(?:DEFAULT\\s+)/i, /^(?:\\w+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:class\\s+)/i, /^(?:(\\w+)+((,\\s*\\w+)*))/i, /^(?:[^\\n]*)/i, /^(?:style\\s+)/i, /^(?:[\\w,]+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:state\\s+)/i, /^(?:.*<<fork>>)/i, /^(?:.*<<join>>)/i, /^(?:.*<<choice>>)/i, /^(?:.*\\[\\[fork\\]\\])/i, /^(?:.*\\[\\[join\\]\\])/i, /^(?:.*\\[\\[choice\\]\\])/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:[\"])/i, /^(?:\\s*as\\s+)/i, /^(?:[^\\n\\{]*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n\\s\\{]+)/i, /^(?:\\n)/i, /^(?:\\{)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:\\})/i, /^(?:[\\n])/i, /^(?:note\\s+)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:\")/i, /^(?:\\s*as\\s*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n]*)/i, /^(?:\\s*[^:\\n\\s\\-]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:[\\s\\S]*?end note\\b)/i, /^(?:stateDiagram\\s+)/i, /^(?:stateDiagram-v2\\s+)/i, /^(?:hide empty description\\b)/i, /^(?:\\[\\*\\])/i, /^(?:[^:\\n\\s\\-\\{]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:-->)/i, /^(?:--)/i, /^(?::::)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: {\n        \"LINE\": {\n          \"rules\": [9, 10],\n          \"inclusive\": false\n        },\n        \"struct\": {\n          \"rules\": [9, 10, 22, 26, 29, 35, 42, 43, 44, 45, 54, 55, 56, 57, 71, 72, 73, 74, 75],\n          \"inclusive\": false\n        },\n        \"FLOATING_NOTE_ID\": {\n          \"rules\": [64],\n          \"inclusive\": false\n        },\n        \"FLOATING_NOTE\": {\n          \"rules\": [61, 62, 63],\n          \"inclusive\": false\n        },\n        \"NOTE_TEXT\": {\n          \"rules\": [66, 67],\n          \"inclusive\": false\n        },\n        \"NOTE_ID\": {\n          \"rules\": [65],\n          \"inclusive\": false\n        },\n        \"NOTE\": {\n          \"rules\": [58, 59, 60],\n          \"inclusive\": false\n        },\n        \"STYLEDEF_STYLEOPTS\": {\n          \"rules\": [],\n          \"inclusive\": false\n        },\n        \"STYLEDEF_STYLES\": {\n          \"rules\": [31],\n          \"inclusive\": false\n        },\n        \"STYLE_IDS\": {\n          \"rules\": [],\n          \"inclusive\": false\n        },\n        \"STYLE\": {\n          \"rules\": [30],\n          \"inclusive\": false\n        },\n        \"CLASS_STYLE\": {\n          \"rules\": [28],\n          \"inclusive\": false\n        },\n        \"CLASS\": {\n          \"rules\": [27],\n          \"inclusive\": false\n        },\n        \"CLASSDEFID\": {\n          \"rules\": [25],\n          \"inclusive\": false\n        },\n        \"CLASSDEF\": {\n          \"rules\": [23, 24],\n          \"inclusive\": false\n        },\n        \"acc_descr_multiline\": {\n          \"rules\": [20, 21],\n          \"inclusive\": false\n        },\n        \"acc_descr\": {\n          \"rules\": [18],\n          \"inclusive\": false\n        },\n        \"acc_title\": {\n          \"rules\": [16],\n          \"inclusive\": false\n        },\n        \"SCALE\": {\n          \"rules\": [13, 14, 33, 34],\n          \"inclusive\": false\n        },\n        \"ALIAS\": {\n          \"rules\": [],\n          \"inclusive\": false\n        },\n        \"STATE_ID\": {\n          \"rules\": [48],\n          \"inclusive\": false\n        },\n        \"STATE_STRING\": {\n          \"rules\": [49, 50],\n          \"inclusive\": false\n        },\n        \"FORK_STATE\": {\n          \"rules\": [],\n          \"inclusive\": false\n        },\n        \"STATE\": {\n          \"rules\": [9, 10, 36, 37, 38, 39, 40, 41, 46, 47, 51, 52, 53],\n          \"inclusive\": false\n        },\n        \"ID\": {\n          \"rules\": [9, 10],\n          \"inclusive\": false\n        },\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 17, 19, 22, 26, 29, 32, 35, 53, 57, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  __name(Parser, \"Parser\");\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nvar stateDiagram_default = parser;\n\n// src/diagrams/state/stateCommon.ts\nvar DEFAULT_DIAGRAM_DIRECTION = \"TB\";\nvar DEFAULT_NESTED_DOC_DIR = \"TB\";\nvar STMT_DIRECTION = \"dir\";\nvar STMT_STATE = \"state\";\nvar STMT_RELATION = \"relation\";\nvar STMT_CLASSDEF = \"classDef\";\nvar STMT_STYLEDEF = \"style\";\nvar STMT_APPLYCLASS = \"applyClass\";\nvar DEFAULT_STATE_TYPE = \"default\";\nvar DIVIDER_TYPE = \"divider\";\nvar G_EDGE_STYLE = \"fill:none\";\nvar G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\nvar G_EDGE_LABELPOS = \"c\";\nvar G_EDGE_LABELTYPE = \"text\";\nvar G_EDGE_THICKNESS = \"normal\";\nvar SHAPE_STATE = \"rect\";\nvar SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\nvar SHAPE_START = \"stateStart\";\nvar SHAPE_END = \"stateEnd\";\nvar SHAPE_DIVIDER = \"divider\";\nvar SHAPE_GROUP = \"roundedWithTitle\";\nvar SHAPE_NOTE = \"note\";\nvar SHAPE_NOTEGROUP = \"noteGroup\";\nvar CSS_DIAGRAM = \"statediagram\";\nvar CSS_STATE = \"state\";\nvar CSS_DIAGRAM_STATE = `${CSS_DIAGRAM}-${CSS_STATE}`;\nvar CSS_EDGE = \"transition\";\nvar CSS_NOTE = \"note\";\nvar CSS_NOTE_EDGE = \"note-edge\";\nvar CSS_EDGE_NOTE_EDGE = `${CSS_EDGE} ${CSS_NOTE_EDGE}`;\nvar CSS_DIAGRAM_NOTE = `${CSS_DIAGRAM}-${CSS_NOTE}`;\nvar CSS_CLUSTER = \"cluster\";\nvar CSS_DIAGRAM_CLUSTER = `${CSS_DIAGRAM}-${CSS_CLUSTER}`;\nvar CSS_CLUSTER_ALT = \"cluster-alt\";\nvar CSS_DIAGRAM_CLUSTER_ALT = `${CSS_DIAGRAM}-${CSS_CLUSTER_ALT}`;\nvar PARENT = \"parent\";\nvar NOTE = \"note\";\nvar DOMID_STATE = \"state\";\nvar DOMID_TYPE_SPACER = \"----\";\nvar NOTE_ID = `${DOMID_TYPE_SPACER}${NOTE}`;\nvar PARENT_ID = `${DOMID_TYPE_SPACER}${PARENT}`;\n\n// src/diagrams/state/stateRenderer-v3-unified.ts\nvar getDir = /* @__PURE__ */__name((parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  if (!parsedItem.doc) {\n    return defaultDir;\n  }\n  let dir = defaultDir;\n  for (const parsedItemDoc of parsedItem.doc) {\n    if (parsedItemDoc.stmt === \"dir\") {\n      dir = parsedItemDoc.value;\n    }\n  }\n  return dir;\n}, \"getDir\");\nvar getClasses = /* @__PURE__ */__name(function (text, diagramObj) {\n  return diagramObj.db.getClasses();\n}, \"getClasses\");\nvar draw = /* @__PURE__ */__name(async function (text, id, _version, diag) {\n  log.info(\"REF0:\");\n  log.info(\"Drawing state diagram (v2)\", id);\n  const {\n    securityLevel,\n    state: conf,\n    layout\n  } = getConfig();\n  diag.db.extract(diag.db.getRootDocV2());\n  const data4Layout = diag.db.getData();\n  const svg = getDiagramElement(id, securityLevel);\n  data4Layout.type = diag.type;\n  data4Layout.layoutAlgorithm = layout;\n  data4Layout.nodeSpacing = conf?.nodeSpacing || 50;\n  data4Layout.rankSpacing = conf?.rankSpacing || 50;\n  data4Layout.markers = [\"barb\"];\n  data4Layout.diagramId = id;\n  await render(data4Layout, svg);\n  const padding = 8;\n  utils_default.insertTitle(svg, \"statediagramTitleText\", conf?.titleTopMargin ?? 25, diag.db.getDiagramTitle());\n  setupViewPortForSVG(svg, padding, CSS_DIAGRAM, conf?.useMaxWidth ?? true);\n}, \"draw\");\nvar stateRenderer_v3_unified_default = {\n  getClasses,\n  draw,\n  getDir\n};\n\n// src/diagrams/state/dataFetcher.js\nvar nodeDb = /* @__PURE__ */new Map();\nvar graphItemCount = 0;\nfunction stateDomId(itemId = \"\", counter = 0, type = \"\", typeSpacer = DOMID_TYPE_SPACER) {\n  const typeStr = type !== null && type.length > 0 ? `${typeSpacer}${type}` : \"\";\n  return `${DOMID_STATE}-${itemId}${typeStr}-${counter}`;\n}\n__name(stateDomId, \"stateDomId\");\nvar setupDoc = /* @__PURE__ */__name((parentParsedItem, doc, diagramStates, nodes, edges, altFlag, look, classes) => {\n  log.trace(\"items\", doc);\n  doc.forEach(item => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        dataFetcher(parentParsedItem, item, diagramStates, nodes, edges, altFlag, look, classes);\n        break;\n      case DEFAULT_STATE_TYPE:\n        dataFetcher(parentParsedItem, item, diagramStates, nodes, edges, altFlag, look, classes);\n        break;\n      case STMT_RELATION:\n        {\n          dataFetcher(parentParsedItem, item.state1, diagramStates, nodes, edges, altFlag, look, classes);\n          dataFetcher(parentParsedItem, item.state2, diagramStates, nodes, edges, altFlag, look, classes);\n          const edgeData = {\n            id: \"edge\" + graphItemCount,\n            start: item.state1.id,\n            end: item.state2.id,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: G_EDGE_STYLE,\n            labelStyle: \"\",\n            label: common_default.sanitizeText(item.description, getConfig()),\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n            labelpos: G_EDGE_LABELPOS,\n            labelType: G_EDGE_LABELTYPE,\n            thickness: G_EDGE_THICKNESS,\n            classes: CSS_EDGE,\n            look\n          };\n          edges.push(edgeData);\n          graphItemCount++;\n        }\n        break;\n    }\n  });\n}, \"setupDoc\");\nvar getDir2 = /* @__PURE__ */__name((parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  let dir = defaultDir;\n  if (parsedItem.doc) {\n    for (const parsedItemDoc of parsedItem.doc) {\n      if (parsedItemDoc.stmt === \"dir\") {\n        dir = parsedItemDoc.value;\n      }\n    }\n  }\n  return dir;\n}, \"getDir\");\nfunction insertOrUpdateNode(nodes, nodeData, classes) {\n  if (!nodeData.id || nodeData.id === \"</join></fork>\" || nodeData.id === \"</choice>\") {\n    return;\n  }\n  if (nodeData.cssClasses) {\n    if (!Array.isArray(nodeData.cssCompiledStyles)) {\n      nodeData.cssCompiledStyles = [];\n    }\n    nodeData.cssClasses.split(\" \").forEach(cssClass => {\n      if (classes.get(cssClass)) {\n        const classDef = classes.get(cssClass);\n        nodeData.cssCompiledStyles = [...nodeData.cssCompiledStyles, ...classDef.styles];\n      }\n    });\n  }\n  const existingNodeData = nodes.find(node => node.id === nodeData.id);\n  if (existingNodeData) {\n    Object.assign(existingNodeData, nodeData);\n  } else {\n    nodes.push(nodeData);\n  }\n}\n__name(insertOrUpdateNode, \"insertOrUpdateNode\");\nfunction getClassesFromDbInfo(dbInfoItem) {\n  return dbInfoItem?.classes?.join(\" \") ?? \"\";\n}\n__name(getClassesFromDbInfo, \"getClassesFromDbInfo\");\nfunction getStylesFromDbInfo(dbInfoItem) {\n  return dbInfoItem?.styles ?? [];\n}\n__name(getStylesFromDbInfo, \"getStylesFromDbInfo\");\nvar dataFetcher = /* @__PURE__ */__name((parent, parsedItem, diagramStates, nodes, edges, altFlag, look, classes) => {\n  const itemId = parsedItem.id;\n  const dbState = diagramStates.get(itemId);\n  const classStr = getClassesFromDbInfo(dbState);\n  const style = getStylesFromDbInfo(dbState);\n  log.info(\"dataFetcher parsedItem\", parsedItem, dbState, style);\n  if (itemId !== \"root\") {\n    let shape = SHAPE_STATE;\n    if (parsedItem.start === true) {\n      shape = SHAPE_START;\n    } else if (parsedItem.start === false) {\n      shape = SHAPE_END;\n    }\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\n      shape = parsedItem.type;\n    }\n    if (!nodeDb.get(itemId)) {\n      nodeDb.set(itemId, {\n        id: itemId,\n        shape,\n        description: common_default.sanitizeText(itemId, getConfig()),\n        cssClasses: `${classStr} ${CSS_DIAGRAM_STATE}`,\n        cssStyles: style\n      });\n    }\n    const newNode = nodeDb.get(itemId);\n    if (parsedItem.description) {\n      if (Array.isArray(newNode.description)) {\n        newNode.shape = SHAPE_STATE_WITH_DESC;\n        newNode.description.push(parsedItem.description);\n      } else {\n        if (newNode.description?.length > 0) {\n          newNode.shape = SHAPE_STATE_WITH_DESC;\n          if (newNode.description === itemId) {\n            newNode.description = [parsedItem.description];\n          } else {\n            newNode.description = [newNode.description, parsedItem.description];\n          }\n        } else {\n          newNode.shape = SHAPE_STATE;\n          newNode.description = parsedItem.description;\n        }\n      }\n      newNode.description = common_default.sanitizeTextOrArray(newNode.description, getConfig());\n    }\n    if (newNode.description?.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\n      if (newNode.type === \"group\") {\n        newNode.shape = SHAPE_GROUP;\n      } else {\n        newNode.shape = SHAPE_STATE;\n      }\n    }\n    if (!newNode.type && parsedItem.doc) {\n      log.info(\"Setting cluster for XCX\", itemId, getDir2(parsedItem));\n      newNode.type = \"group\";\n      newNode.isGroup = true;\n      newNode.dir = getDir2(parsedItem);\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\n      newNode.cssClasses = `${newNode.cssClasses} ${CSS_DIAGRAM_CLUSTER} ${altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\"}`;\n    }\n    const nodeData = {\n      labelStyle: \"\",\n      shape: newNode.shape,\n      label: newNode.description,\n      cssClasses: newNode.cssClasses,\n      cssCompiledStyles: [],\n      cssStyles: newNode.cssStyles,\n      id: itemId,\n      dir: newNode.dir,\n      domId: stateDomId(itemId, graphItemCount),\n      type: newNode.type,\n      isGroup: newNode.type === \"group\",\n      padding: 8,\n      rx: 10,\n      ry: 10,\n      look\n    };\n    if (nodeData.shape === SHAPE_DIVIDER) {\n      nodeData.label = \"\";\n    }\n    if (parent && parent.id !== \"root\") {\n      log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\n      nodeData.parentId = parent.id;\n    }\n    nodeData.centerLabel = true;\n    if (parsedItem.note) {\n      const noteData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTE,\n        label: parsedItem.note.text,\n        cssClasses: CSS_DIAGRAM_NOTE,\n        // useHtmlLabels: false,\n        cssStyles: [],\n        cssCompilesStyles: [],\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\n        domId: stateDomId(itemId, graphItemCount, NOTE),\n        type: newNode.type,\n        isGroup: newNode.type === \"group\",\n        padding: getConfig().flowchart.padding,\n        look,\n        position: parsedItem.note.position\n      };\n      const parentNodeId = itemId + PARENT_ID;\n      const groupData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTEGROUP,\n        label: parsedItem.note.text,\n        cssClasses: newNode.cssClasses,\n        cssStyles: [],\n        id: itemId + PARENT_ID,\n        domId: stateDomId(itemId, graphItemCount, PARENT),\n        type: \"group\",\n        isGroup: true,\n        padding: 16,\n        //getConfig().flowchart.padding\n        look,\n        position: parsedItem.note.position\n      };\n      graphItemCount++;\n      groupData.id = parentNodeId;\n      noteData.parentId = parentNodeId;\n      insertOrUpdateNode(nodes, groupData, classes);\n      insertOrUpdateNode(nodes, noteData, classes);\n      insertOrUpdateNode(nodes, nodeData, classes);\n      let from = itemId;\n      let to = noteData.id;\n      if (parsedItem.note.position === \"left of\") {\n        from = noteData.id;\n        to = itemId;\n      }\n      edges.push({\n        id: from + \"-\" + to,\n        start: from,\n        end: to,\n        arrowhead: \"none\",\n        arrowTypeEnd: \"\",\n        style: G_EDGE_STYLE,\n        labelStyle: \"\",\n        classes: CSS_EDGE_NOTE_EDGE,\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n        labelpos: G_EDGE_LABELPOS,\n        labelType: G_EDGE_LABELTYPE,\n        thickness: G_EDGE_THICKNESS,\n        look\n      });\n    } else {\n      insertOrUpdateNode(nodes, nodeData, classes);\n    }\n  }\n  if (parsedItem.doc) {\n    log.trace(\"Adding nodes children \");\n    setupDoc(parsedItem, parsedItem.doc, diagramStates, nodes, edges, !altFlag, look, classes);\n  }\n}, \"dataFetcher\");\nvar reset = /* @__PURE__ */__name(() => {\n  nodeDb.clear();\n  graphItemCount = 0;\n}, \"reset\");\n\n// src/diagrams/state/stateDb.js\nvar START_NODE = \"[*]\";\nvar START_TYPE = \"start\";\nvar END_NODE = START_NODE;\nvar END_TYPE = \"end\";\nvar COLOR_KEYWORD = \"color\";\nvar FILL_KEYWORD = \"fill\";\nvar BG_FILL = \"bgFill\";\nvar STYLECLASS_SEP = \",\";\nfunction newClassesList() {\n  return /* @__PURE__ */new Map();\n}\n__name(newClassesList, \"newClassesList\");\nvar newDoc = /* @__PURE__ */__name(() => {\n  return {\n    /** @type {{ id1: string, id2: string, relationTitle: string }[]} */\n    relations: [],\n    states: /* @__PURE__ */new Map(),\n    documents: {}\n  };\n}, \"newDoc\");\nvar clone = /* @__PURE__ */__name(o => JSON.parse(JSON.stringify(o)), \"clone\");\nvar StateDB = (_Class = class StateDB {\n  /**\n   * @param {1 | 2} version - v1 renderer or v2 renderer.\n   */\n  constructor(version) {\n    /**\n     * @private\n     * @type {1 | 2}\n     */\n    _defineProperty(this, \"version\", void 0);\n    /**\n     * @private\n     * @type {Array}\n     */\n    _defineProperty(this, \"nodes\", []);\n    /**\n     * @private\n     * @type {Array}\n     */\n    _defineProperty(this, \"edges\", []);\n    /**\n     * @private\n     * @type {Array}\n     */\n    _defineProperty(this, \"rootDoc\", []);\n    /**\n     * @private\n     * @type {Map<string, any>}\n     */\n    _defineProperty(this, \"classes\", newClassesList());\n    // style classes defined by a classDef\n    /**\n     * @private\n     * @type {Object}\n     */\n    _defineProperty(this, \"documents\", {\n      root: newDoc()\n    });\n    /**\n     * @private\n     * @type {Object}\n     */\n    _defineProperty(this, \"currentDocument\", this.documents.root);\n    /**\n     * @private\n     * @type {number}\n     */\n    _defineProperty(this, \"startEndCount\", 0);\n    /**\n     * @private\n     * @type {number}\n     */\n    _defineProperty(this, \"dividerCnt\", 0);\n    _defineProperty(this, \"getAccTitle\", getAccTitle);\n    _defineProperty(this, \"setAccTitle\", setAccTitle);\n    _defineProperty(this, \"getAccDescription\", getAccDescription);\n    _defineProperty(this, \"setAccDescription\", setAccDescription);\n    _defineProperty(this, \"setDiagramTitle\", setDiagramTitle);\n    _defineProperty(this, \"getDiagramTitle\", getDiagramTitle);\n    this.clear();\n    this.version = version;\n    this.setRootDoc = this.setRootDoc.bind(this);\n    this.getDividerId = this.getDividerId.bind(this);\n    this.setDirection = this.setDirection.bind(this);\n    this.trimColon = this.trimColon.bind(this);\n  }\n  setRootDoc(o) {\n    log.info(\"Setting root doc\", o);\n    this.rootDoc = o;\n    if (this.version === 1) {\n      this.extract(o);\n    } else {\n      this.extract(this.getRootDocV2());\n    }\n  }\n  getRootDoc() {\n    return this.rootDoc;\n  }\n  /**\n   * @private\n   * @param {Object} parent\n   * @param {Object} node\n   * @param {boolean} first\n   */\n  docTranslator(parent, node, first) {\n    if (node.stmt === STMT_RELATION) {\n      this.docTranslator(parent, node.state1, true);\n      this.docTranslator(parent, node.state2, false);\n    } else {\n      if (node.stmt === STMT_STATE) {\n        if (node.id === \"[*]\") {\n          node.id = first ? parent.id + \"_start\" : parent.id + \"_end\";\n          node.start = first;\n        } else {\n          node.id = node.id.trim();\n        }\n      }\n      if (node.doc) {\n        const doc = [];\n        let currentDoc = [];\n        let i;\n        for (i = 0; i < node.doc.length; i++) {\n          if (node.doc[i].type === DIVIDER_TYPE) {\n            const newNode = clone(node.doc[i]);\n            newNode.doc = clone(currentDoc);\n            doc.push(newNode);\n            currentDoc = [];\n          } else {\n            currentDoc.push(node.doc[i]);\n          }\n        }\n        if (doc.length > 0 && currentDoc.length > 0) {\n          const newNode = {\n            stmt: STMT_STATE,\n            id: generateId(),\n            type: \"divider\",\n            doc: clone(currentDoc)\n          };\n          doc.push(clone(newNode));\n          node.doc = doc;\n        }\n        node.doc.forEach(docNode => this.docTranslator(node, docNode, true));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n  getRootDocV2() {\n    this.docTranslator({\n      id: \"root\"\n    }, {\n      id: \"root\",\n      doc: this.rootDoc\n    }, true);\n    return {\n      id: \"root\",\n      doc: this.rootDoc\n    };\n  }\n  /**\n   * Convert all of the statements (stmts) that were parsed into states and relationships.\n   * This is done because a state diagram may have nested sections,\n   * where each section is a 'document' and has its own set of statements.\n   * Ex: the section within a fork has its own statements, and incoming and outgoing statements\n   * refer to the fork as a whole (document).\n   * See the parser grammar:  the definition of a document is a document then a 'line', where a line can be a statement.\n   * This will push the statement into the list of statements for the current document.\n   * @private\n   * @param _doc\n   */\n  extract(_doc) {\n    let doc;\n    if (_doc.doc) {\n      doc = _doc.doc;\n    } else {\n      doc = _doc;\n    }\n    log.info(doc);\n    this.clear(true);\n    log.info(\"Extract initial document:\", doc);\n    doc.forEach(item => {\n      log.warn(\"Statement\", item.stmt);\n      switch (item.stmt) {\n        case STMT_STATE:\n          this.addState(item.id.trim(), item.type, item.doc, item.description, item.note, item.classes, item.styles, item.textStyles);\n          break;\n        case STMT_RELATION:\n          this.addRelation(item.state1, item.state2, item.description);\n          break;\n        case STMT_CLASSDEF:\n          this.addStyleClass(item.id.trim(), item.classes);\n          break;\n        case STMT_STYLEDEF:\n          {\n            const ids = item.id.trim().split(\",\");\n            const styles = item.styleClass.split(\",\");\n            ids.forEach(id => {\n              let foundState = this.getState(id);\n              if (foundState === void 0) {\n                const trimmedId = id.trim();\n                this.addState(trimmedId);\n                foundState = this.getState(trimmedId);\n              }\n              foundState.styles = styles.map(s => s.replace(/;/g, \"\")?.trim());\n            });\n          }\n          break;\n        case STMT_APPLYCLASS:\n          this.setCssClass(item.id.trim(), item.styleClass);\n          break;\n      }\n    });\n    const diagramStates = this.getStates();\n    const config = getConfig();\n    const look = config.look;\n    reset();\n    dataFetcher(void 0, this.getRootDocV2(), diagramStates, this.nodes, this.edges, true, look, this.classes);\n    this.nodes.forEach(node => {\n      if (Array.isArray(node.label)) {\n        node.description = node.label.slice(1);\n        if (node.isGroup && node.description.length > 0) {\n          throw new Error(\"Group nodes can only have label. Remove the additional description for node [\" + node.id + \"]\");\n        }\n        node.label = node.label[0];\n      }\n    });\n  }\n  /**\n   * Function called by parser when a node definition has been found.\n   *\n   * @param {null | string} id\n   * @param {null | string} type\n   * @param {null | string} doc\n   * @param {null | string | string[]} descr - description for the state. Can be a string or a list or strings\n   * @param {null | string} note\n   * @param {null | string | string[]} classes - class styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 class, convert it to an array of that 1 class.\n   * @param {null | string | string[]} styles - styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 style, convert it to an array of that 1 style.\n   * @param {null | string | string[]} textStyles - text styles to apply to this state. Can be a string (1 text test) or an array of text styles. If it's just 1 text style, convert it to an array of that 1 text style.\n   */\n  addState(id, type = DEFAULT_STATE_TYPE, doc = null, descr = null, note = null, classes = null, styles = null, textStyles = null) {\n    const trimmedId = id?.trim();\n    if (!this.currentDocument.states.has(trimmedId)) {\n      log.info(\"Adding state \", trimmedId, descr);\n      this.currentDocument.states.set(trimmedId, {\n        id: trimmedId,\n        descriptions: [],\n        type,\n        doc,\n        note,\n        classes: [],\n        styles: [],\n        textStyles: []\n      });\n    } else {\n      if (!this.currentDocument.states.get(trimmedId).doc) {\n        this.currentDocument.states.get(trimmedId).doc = doc;\n      }\n      if (!this.currentDocument.states.get(trimmedId).type) {\n        this.currentDocument.states.get(trimmedId).type = type;\n      }\n    }\n    if (descr) {\n      log.info(\"Setting state description\", trimmedId, descr);\n      if (typeof descr === \"string\") {\n        this.addDescription(trimmedId, descr.trim());\n      }\n      if (typeof descr === \"object\") {\n        descr.forEach(des => this.addDescription(trimmedId, des.trim()));\n      }\n    }\n    if (note) {\n      const doc2 = this.currentDocument.states.get(trimmedId);\n      doc2.note = note;\n      doc2.note.text = common_default.sanitizeText(doc2.note.text, getConfig());\n    }\n    if (classes) {\n      log.info(\"Setting state classes\", trimmedId, classes);\n      const classesList = typeof classes === \"string\" ? [classes] : classes;\n      classesList.forEach(cssClass => this.setCssClass(trimmedId, cssClass.trim()));\n    }\n    if (styles) {\n      log.info(\"Setting state styles\", trimmedId, styles);\n      const stylesList = typeof styles === \"string\" ? [styles] : styles;\n      stylesList.forEach(style => this.setStyle(trimmedId, style.trim()));\n    }\n    if (textStyles) {\n      log.info(\"Setting state styles\", trimmedId, styles);\n      const textStylesList = typeof textStyles === \"string\" ? [textStyles] : textStyles;\n      textStylesList.forEach(textStyle => this.setTextStyle(trimmedId, textStyle.trim()));\n    }\n  }\n  clear(saveCommon) {\n    this.nodes = [];\n    this.edges = [];\n    this.documents = {\n      root: newDoc()\n    };\n    this.currentDocument = this.documents.root;\n    this.startEndCount = 0;\n    this.classes = newClassesList();\n    if (!saveCommon) {\n      clear();\n    }\n  }\n  getState(id) {\n    return this.currentDocument.states.get(id);\n  }\n  getStates() {\n    return this.currentDocument.states;\n  }\n  logDocuments() {\n    log.info(\"Documents = \", this.documents);\n  }\n  getRelations() {\n    return this.currentDocument.relations;\n  }\n  /**\n   * If the id is a start node ( [*] ), then return a new id constructed from\n   * the start node name and the current start node count.\n   * else return the given id\n   *\n   * @param {string} id\n   * @returns {string} - the id (original or constructed)\n   * @private\n   */\n  startIdIfNeeded(id = \"\") {\n    let fixedId = id;\n    if (id === START_NODE) {\n      this.startEndCount++;\n      fixedId = `${START_TYPE}${this.startEndCount}`;\n    }\n    return fixedId;\n  }\n  /**\n   * If the id is a start node ( [*] ), then return the start type ('start')\n   * else return the given type\n   *\n   * @param {string} id\n   * @param {string} type\n   * @returns {string} - the type that should be used\n   * @private\n   */\n  startTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\n    return id === START_NODE ? START_TYPE : type;\n  }\n  /**\n   * If the id is an end node ( [*] ), then return a new id constructed from\n   * the end node name and the current start_end node count.\n   * else return the given id\n   *\n   * @param {string} id\n   * @returns {string} - the id (original or constructed)\n   * @private\n   */\n  endIdIfNeeded(id = \"\") {\n    let fixedId = id;\n    if (id === END_NODE) {\n      this.startEndCount++;\n      fixedId = `${END_TYPE}${this.startEndCount}`;\n    }\n    return fixedId;\n  }\n  /**\n   * If the id is an end node ( [*] ), then return the end type\n   * else return the given type\n   *\n   * @param {string} id\n   * @param {string} type\n   * @returns {string} - the type that should be used\n   * @private\n   */\n  endTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\n    return id === END_NODE ? END_TYPE : type;\n  }\n  /**\n   *\n   * @param item1\n   * @param item2\n   * @param relationTitle\n   */\n  addRelationObjs(item1, item2, relationTitle) {\n    let id1 = this.startIdIfNeeded(item1.id.trim());\n    let type1 = this.startTypeIfNeeded(item1.id.trim(), item1.type);\n    let id2 = this.startIdIfNeeded(item2.id.trim());\n    let type2 = this.startTypeIfNeeded(item2.id.trim(), item2.type);\n    this.addState(id1, type1, item1.doc, item1.description, item1.note, item1.classes, item1.styles, item1.textStyles);\n    this.addState(id2, type2, item2.doc, item2.description, item2.note, item2.classes, item2.styles, item2.textStyles);\n    this.currentDocument.relations.push({\n      id1,\n      id2,\n      relationTitle: common_default.sanitizeText(relationTitle, getConfig())\n    });\n  }\n  /**\n   * Add a relation between two items.  The items may be full objects or just the string id of a state.\n   *\n   * @param {string | object} item1\n   * @param {string | object} item2\n   * @param {string} title\n   */\n  addRelation(item1, item2, title) {\n    if (typeof item1 === \"object\") {\n      this.addRelationObjs(item1, item2, title);\n    } else {\n      const id1 = this.startIdIfNeeded(item1.trim());\n      const type1 = this.startTypeIfNeeded(item1);\n      const id2 = this.endIdIfNeeded(item2.trim());\n      const type2 = this.endTypeIfNeeded(item2);\n      this.addState(id1, type1);\n      this.addState(id2, type2);\n      this.currentDocument.relations.push({\n        id1,\n        id2,\n        title: common_default.sanitizeText(title, getConfig())\n      });\n    }\n  }\n  addDescription(id, descr) {\n    const theState = this.currentDocument.states.get(id);\n    const _descr = descr.startsWith(\":\") ? descr.replace(\":\", \"\").trim() : descr;\n    theState.descriptions.push(common_default.sanitizeText(_descr, getConfig()));\n  }\n  cleanupLabel(label) {\n    if (label.substring(0, 1) === \":\") {\n      return label.substr(2).trim();\n    } else {\n      return label.trim();\n    }\n  }\n  getDividerId() {\n    this.dividerCnt++;\n    return \"divider-id-\" + this.dividerCnt;\n  }\n  /**\n   * Called when the parser comes across a (style) class definition\n   * @example classDef my-style fill:#f96;\n   *\n   * @param {string} id - the id of this (style) class\n   * @param  {string | null} styleAttributes - the string with 1 or more style attributes (each separated by a comma)\n   */\n  addStyleClass(id, styleAttributes = \"\") {\n    if (!this.classes.has(id)) {\n      this.classes.set(id, {\n        id,\n        styles: [],\n        textStyles: []\n      });\n    }\n    const foundClass = this.classes.get(id);\n    if (styleAttributes !== void 0 && styleAttributes !== null) {\n      styleAttributes.split(STYLECLASS_SEP).forEach(attrib => {\n        const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\n        if (RegExp(COLOR_KEYWORD).exec(attrib)) {\n          const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n          const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n          foundClass.textStyles.push(newStyle2);\n        }\n        foundClass.styles.push(fixedAttrib);\n      });\n    }\n  }\n  /**\n   * Return all of the style classes\n   * @returns {{} | any | classes}\n   */\n  getClasses() {\n    return this.classes;\n  }\n  /**\n   * Add a (style) class or css class to a state with the given id.\n   * If the state isn't already in the list of known states, add it.\n   * Might be called by parser when a style class or CSS class should be applied to a state\n   *\n   * @param {string | string[]} itemIds The id or a list of ids of the item(s) to apply the css class to\n   * @param {string} cssClassName CSS class name\n   */\n  setCssClass(itemIds, cssClassName) {\n    itemIds.split(\",\").forEach(id => {\n      let foundState = this.getState(id);\n      if (foundState === void 0) {\n        const trimmedId = id.trim();\n        this.addState(trimmedId);\n        foundState = this.getState(trimmedId);\n      }\n      foundState.classes.push(cssClassName);\n    });\n  }\n  /**\n   * Add a style to a state with the given id.\n   * @example style stateId fill:#f9f,stroke:#333,stroke-width:4px\n   *   where 'style' is the keyword\n   *   stateId is the id of a state\n   *   the rest of the string is the styleText (all of the attributes to be applied to the state)\n   *\n   * @param itemId The id of item to apply the style to\n   * @param styleText - the text of the attributes for the style\n   */\n  setStyle(itemId, styleText) {\n    const item = this.getState(itemId);\n    if (item !== void 0) {\n      item.styles.push(styleText);\n    }\n  }\n  /**\n   * Add a text style to a state with the given id\n   *\n   * @param itemId The id of item to apply the css class to\n   * @param cssClassName CSS class name\n   */\n  setTextStyle(itemId, cssClassName) {\n    const item = this.getState(itemId);\n    if (item !== void 0) {\n      item.textStyles.push(cssClassName);\n    }\n  }\n  /**\n   * Finds the direction statement in the root document.\n   * @private\n   * @returns {{ value: string } | undefined} - the direction statement if present\n   */\n  getDirectionStatement() {\n    return this.rootDoc.find(doc => doc.stmt === STMT_DIRECTION);\n  }\n  getDirection() {\n    return this.getDirectionStatement()?.value ?? DEFAULT_DIAGRAM_DIRECTION;\n  }\n  setDirection(dir) {\n    const doc = this.getDirectionStatement();\n    if (doc) {\n      doc.value = dir;\n    } else {\n      this.rootDoc.unshift({\n        stmt: STMT_DIRECTION,\n        value: dir\n      });\n    }\n  }\n  trimColon(str) {\n    return str && str[0] === \":\" ? str.substr(1).trim() : str.trim();\n  }\n  getData() {\n    const config = getConfig();\n    return {\n      nodes: this.nodes,\n      edges: this.edges,\n      other: {},\n      config,\n      direction: getDir(this.getRootDocV2())\n    };\n  }\n  getConfig() {\n    return getConfig().state;\n  }\n}, __name(_Class, \"StateDB\"), _defineProperty(_Class, \"relationType\", {\n  AGGREGATION: 0,\n  EXTENSION: 1,\n  COMPOSITION: 2,\n  DEPENDENCY: 3\n}), _Class);\n\n// src/diagrams/state/styles.js\nvar getStyles = /* @__PURE__ */__name(options => `\ndefs #statediagram-barbEnd {\n    fill: ${options.transitionColor};\n    stroke: ${options.transitionColor};\n  }\ng.stateGroup text {\n  fill: ${options.nodeBorder};\n  stroke: none;\n  font-size: 10px;\n}\ng.stateGroup text {\n  fill: ${options.textColor};\n  stroke: none;\n  font-size: 10px;\n\n}\ng.stateGroup .state-title {\n  font-weight: bolder;\n  fill: ${options.stateLabelColor};\n}\n\ng.stateGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.stateGroup line {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.transition {\n  stroke: ${options.transitionColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.stateGroup .composit {\n  fill: ${options.background};\n  border-bottom: 1px\n}\n\n.stateGroup .alt-composit {\n  fill: #e0e0e0;\n  border-bottom: 1px\n}\n\n.state-note {\n  stroke: ${options.noteBorderColor};\n  fill: ${options.noteBkgColor};\n\n  text {\n    fill: ${options.noteTextColor};\n    stroke: none;\n    font-size: 10px;\n  }\n}\n\n.stateLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.edgeLabel .label rect {\n  fill: ${options.labelBackgroundColor};\n  opacity: 0.5;\n}\n.edgeLabel {\n  background-color: ${options.edgeLabelBackground};\n  p {\n    background-color: ${options.edgeLabelBackground};\n  }\n  rect {\n    opacity: 0.5;\n    background-color: ${options.edgeLabelBackground};\n    fill: ${options.edgeLabelBackground};\n  }\n  text-align: center;\n}\n.edgeLabel .label text {\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n.label div .edgeLabel {\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n\n.stateLabel text {\n  fill: ${options.stateLabelColor};\n  font-size: 10px;\n  font-weight: bold;\n}\n\n.node circle.state-start {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node .fork-join {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node circle.state-end {\n  fill: ${options.innerEndBackground};\n  stroke: ${options.background};\n  stroke-width: 1.5\n}\n.end-state-inner {\n  fill: ${options.compositeBackground || options.background};\n  // stroke: ${options.background};\n  stroke-width: 1.5\n}\n\n.node rect {\n  fill: ${options.stateBkg || options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n.node polygon {\n  fill: ${options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};;\n  stroke-width: 1px;\n}\n#statediagram-barbEnd {\n  fill: ${options.lineColor};\n}\n\n.statediagram-cluster rect {\n  fill: ${options.compositeTitleBackground};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n\n.cluster-label, .nodeLabel {\n  color: ${options.stateLabelColor};\n  // line-height: 1;\n}\n\n.statediagram-cluster rect.outer {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state .divider {\n  stroke: ${options.stateBorder || options.nodeBorder};\n}\n\n.statediagram-state .title-state {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-cluster.statediagram-cluster .inner {\n  fill: ${options.compositeBackground || options.background};\n}\n.statediagram-cluster.statediagram-cluster-alt .inner {\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\n}\n\n.statediagram-cluster .inner {\n  rx:0;\n  ry:0;\n}\n\n.statediagram-state rect.basic {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state rect.divider {\n  stroke-dasharray: 10,10;\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\n}\n\n.note-edge {\n  stroke-dasharray: 5;\n}\n\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n\n.statediagram-note text {\n  fill: ${options.noteTextColor};\n}\n\n.statediagram-note .nodeLabel {\n  color: ${options.noteTextColor};\n}\n.statediagram .edgeLabel {\n  color: red; // ${options.noteTextColor};\n}\n\n#dependencyStart, #dependencyEnd {\n  fill: ${options.lineColor};\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.statediagramTitleText {\n  text-anchor: middle;\n  font-size: 18px;\n  fill: ${options.textColor};\n}\n`, \"getStyles\");\nvar styles_default = getStyles;\nexport { stateDiagram_default, stateRenderer_v3_unified_default, StateDB, styles_default };","map":{"version":3,"names":["getDiagramElement","setupViewPortForSVG","render","generateId","utils_default","__name","clear","common_default","getAccDescription","getAccTitle","getConfig2","getConfig","getDiagramTitle","log","setAccDescription","setAccTitle","setDiagramTitle","parser","o","k","v","o2","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","$V8","$V9","$Va","$Vb","$Vc","$Vd","$Ve","$Vf","$Vg","$Vh","$Vi","$Vj","$Vk","$Vl","$Vm","$Vn","$Vo","$Vp","$Vq","$Vr","$Vs","$Vt","parser2","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","setRootDoc","$","push","stateStmt","description","trimColon","stmt","state1","state2","relDescription","id","type","doc","trim","match","parts","split","getDividerId","note","position","text","classes","styleClass","setDirection","value","table","defaultActions","parseError","str","hash","recoverable","error","Error","parse","input","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer2","Object","create","lexer","sharedState","prototype","hasOwnProperty","setInput","yylloc","yyloc","ranges","options","getPrototypeOf","popStack","n","lex","token","pop","Array","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","join","line","loc","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","YYSTATE","Parser","stateDiagram_default","DEFAULT_DIAGRAM_DIRECTION","DEFAULT_NESTED_DOC_DIR","STMT_DIRECTION","STMT_STATE","STMT_RELATION","STMT_CLASSDEF","STMT_STYLEDEF","STMT_APPLYCLASS","DEFAULT_STATE_TYPE","DIVIDER_TYPE","G_EDGE_STYLE","G_EDGE_ARROWHEADSTYLE","G_EDGE_LABELPOS","G_EDGE_LABELTYPE","G_EDGE_THICKNESS","SHAPE_STATE","SHAPE_STATE_WITH_DESC","SHAPE_START","SHAPE_END","SHAPE_DIVIDER","SHAPE_GROUP","SHAPE_NOTE","SHAPE_NOTEGROUP","CSS_DIAGRAM","CSS_STATE","CSS_DIAGRAM_STATE","CSS_EDGE","CSS_NOTE","CSS_NOTE_EDGE","CSS_EDGE_NOTE_EDGE","CSS_DIAGRAM_NOTE","CSS_CLUSTER","CSS_DIAGRAM_CLUSTER","CSS_CLUSTER_ALT","CSS_DIAGRAM_CLUSTER_ALT","PARENT","NOTE","DOMID_STATE","DOMID_TYPE_SPACER","NOTE_ID","PARENT_ID","getDir","parsedItem","defaultDir","dir","parsedItemDoc","getClasses","diagramObj","db","draw","_version","diag","info","securityLevel","conf","layout","extract","getRootDocV2","data4Layout","getData","svg","layoutAlgorithm","nodeSpacing","rankSpacing","markers","diagramId","padding","insertTitle","titleTopMargin","useMaxWidth","stateRenderer_v3_unified_default","nodeDb","Map","graphItemCount","stateDomId","itemId","counter","typeSpacer","typeStr","setupDoc","parentParsedItem","diagramStates","nodes","edges","altFlag","look","forEach","item","dataFetcher","edgeData","start","end","arrowhead","arrowTypeEnd","style","labelStyle","label","sanitizeText","arrowheadStyle","labelpos","labelType","thickness","getDir2","insertOrUpdateNode","nodeData","cssClasses","isArray","cssCompiledStyles","cssClass","get","classDef","styles","existingNodeData","find","node","assign","getClassesFromDbInfo","dbInfoItem","getStylesFromDbInfo","parent","dbState","classStr","shape","set","cssStyles","newNode","sanitizeTextOrArray","isGroup","domId","rx","ry","parentId","centerLabel","noteData","cssCompilesStyles","flowchart","parentNodeId","groupData","from","to","reset","START_NODE","START_TYPE","END_NODE","END_TYPE","COLOR_KEYWORD","FILL_KEYWORD","BG_FILL","STYLECLASS_SEP","newClassesList","newDoc","relations","states","documents","clone","JSON","stringify","StateDB","_Class","constructor","version","_defineProperty","root","bind","rootDoc","getRootDoc","docTranslator","first","currentDoc","docNode","_doc","warn","addState","textStyles","addRelation","addStyleClass","ids","foundState","getState","trimmedId","map","s","setCssClass","getStates","config","descr","currentDocument","has","descriptions","addDescription","des","doc2","classesList","stylesList","setStyle","textStylesList","textStyle","setTextStyle","saveCommon","startEndCount","logDocuments","getRelations","startIdIfNeeded","fixedId","startTypeIfNeeded","endIdIfNeeded","endTypeIfNeeded","addRelationObjs","item1","item2","relationTitle","id1","type1","id2","type2","title","theState","_descr","startsWith","cleanupLabel","substring","dividerCnt","styleAttributes","foundClass","attrib","fixedAttrib","RegExp","exec","newStyle1","newStyle2","itemIds","cssClassName","styleText","getDirectionStatement","getDirection","unshift","other","direction","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","getStyles","transitionColor","nodeBorder","textColor","stateLabelColor","mainBkg","lineColor","background","noteBorderColor","noteBkgColor","noteTextColor","labelBackgroundColor","edgeLabelBackground","transitionLabelColor","tertiaryTextColor","specialStateColor","innerEndBackground","compositeBackground","stateBkg","stateBorder","compositeTitleBackground","altBackground","styles_default"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/mermaid/dist/chunks/mermaid.core/chunk-AEK57VVT.mjs"],"sourcesContent":["import {\n  getDiagramElement,\n  setupViewPortForSVG\n} from \"./chunk-RZ5BOZE2.mjs\";\nimport {\n  render\n} from \"./chunk-TYCBKAJE.mjs\";\nimport {\n  generateId,\n  utils_default\n} from \"./chunk-O4NI6UNU.mjs\";\nimport {\n  __name,\n  clear,\n  common_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig2 as getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/state/parser/stateDiagram.jison\nvar parser = function() {\n  var o = /* @__PURE__ */ __name(function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v) ;\n    return o2;\n  }, \"o\"), $V0 = [1, 2], $V1 = [1, 3], $V2 = [1, 4], $V3 = [2, 4], $V4 = [1, 9], $V5 = [1, 11], $V6 = [1, 16], $V7 = [1, 17], $V8 = [1, 18], $V9 = [1, 19], $Va = [1, 32], $Vb = [1, 20], $Vc = [1, 21], $Vd = [1, 22], $Ve = [1, 23], $Vf = [1, 24], $Vg = [1, 26], $Vh = [1, 27], $Vi = [1, 28], $Vj = [1, 29], $Vk = [1, 30], $Vl = [1, 31], $Vm = [1, 34], $Vn = [1, 35], $Vo = [1, 36], $Vp = [1, 37], $Vq = [1, 33], $Vr = [1, 4, 5, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $Vs = [1, 4, 5, 14, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $Vt = [4, 5, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54];\n  var parser2 = {\n    trace: /* @__PURE__ */ __name(function trace() {\n    }, \"trace\"),\n    yy: {},\n    symbols_: { \"error\": 2, \"start\": 3, \"SPACE\": 4, \"NL\": 5, \"SD\": 6, \"document\": 7, \"line\": 8, \"statement\": 9, \"classDefStatement\": 10, \"styleStatement\": 11, \"cssClassStatement\": 12, \"idStatement\": 13, \"DESCR\": 14, \"-->\": 15, \"HIDE_EMPTY\": 16, \"scale\": 17, \"WIDTH\": 18, \"COMPOSIT_STATE\": 19, \"STRUCT_START\": 20, \"STRUCT_STOP\": 21, \"STATE_DESCR\": 22, \"AS\": 23, \"ID\": 24, \"FORK\": 25, \"JOIN\": 26, \"CHOICE\": 27, \"CONCURRENT\": 28, \"note\": 29, \"notePosition\": 30, \"NOTE_TEXT\": 31, \"direction\": 32, \"acc_title\": 33, \"acc_title_value\": 34, \"acc_descr\": 35, \"acc_descr_value\": 36, \"acc_descr_multiline_value\": 37, \"classDef\": 38, \"CLASSDEF_ID\": 39, \"CLASSDEF_STYLEOPTS\": 40, \"DEFAULT\": 41, \"style\": 42, \"STYLE_IDS\": 43, \"STYLEDEF_STYLEOPTS\": 44, \"class\": 45, \"CLASSENTITY_IDS\": 46, \"STYLECLASS\": 47, \"direction_tb\": 48, \"direction_bt\": 49, \"direction_rl\": 50, \"direction_lr\": 51, \"eol\": 52, \";\": 53, \"EDGE_STATE\": 54, \"STYLE_SEPARATOR\": 55, \"left_of\": 56, \"right_of\": 57, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 4: \"SPACE\", 5: \"NL\", 6: \"SD\", 14: \"DESCR\", 15: \"-->\", 16: \"HIDE_EMPTY\", 17: \"scale\", 18: \"WIDTH\", 19: \"COMPOSIT_STATE\", 20: \"STRUCT_START\", 21: \"STRUCT_STOP\", 22: \"STATE_DESCR\", 23: \"AS\", 24: \"ID\", 25: \"FORK\", 26: \"JOIN\", 27: \"CHOICE\", 28: \"CONCURRENT\", 29: \"note\", 31: \"NOTE_TEXT\", 33: \"acc_title\", 34: \"acc_title_value\", 35: \"acc_descr\", 36: \"acc_descr_value\", 37: \"acc_descr_multiline_value\", 38: \"classDef\", 39: \"CLASSDEF_ID\", 40: \"CLASSDEF_STYLEOPTS\", 41: \"DEFAULT\", 42: \"style\", 43: \"STYLE_IDS\", 44: \"STYLEDEF_STYLEOPTS\", 45: \"class\", 46: \"CLASSENTITY_IDS\", 47: \"STYLECLASS\", 48: \"direction_tb\", 49: \"direction_bt\", 50: \"direction_rl\", 51: \"direction_lr\", 53: \";\", 54: \"EDGE_STATE\", 55: \"STYLE_SEPARATOR\", 56: \"left_of\", 57: \"right_of\" },\n    productions_: [0, [3, 2], [3, 2], [3, 2], [7, 0], [7, 2], [8, 2], [8, 1], [8, 1], [9, 1], [9, 1], [9, 1], [9, 1], [9, 2], [9, 3], [9, 4], [9, 1], [9, 2], [9, 1], [9, 4], [9, 3], [9, 6], [9, 1], [9, 1], [9, 1], [9, 1], [9, 4], [9, 4], [9, 1], [9, 2], [9, 2], [9, 1], [10, 3], [10, 3], [11, 3], [12, 3], [32, 1], [32, 1], [32, 1], [32, 1], [52, 1], [52, 1], [13, 1], [13, 1], [13, 3], [13, 3], [30, 1], [30, 1]],\n    performAction: /* @__PURE__ */ __name(function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 3:\n          yy.setRootDoc($$[$0]);\n          return $$[$0];\n          break;\n        case 4:\n          this.$ = [];\n          break;\n        case 5:\n          if ($$[$0] != \"nl\") {\n            $$[$0 - 1].push($$[$0]);\n            this.$ = $$[$0 - 1];\n          }\n          break;\n        case 6:\n        case 7:\n          this.$ = $$[$0];\n          break;\n        case 8:\n          this.$ = \"nl\";\n          break;\n        case 12:\n          this.$ = $$[$0];\n          break;\n        case 13:\n          const stateStmt = $$[$0 - 1];\n          stateStmt.description = yy.trimColon($$[$0]);\n          this.$ = stateStmt;\n          break;\n        case 14:\n          this.$ = { stmt: \"relation\", state1: $$[$0 - 2], state2: $$[$0] };\n          break;\n        case 15:\n          const relDescription = yy.trimColon($$[$0]);\n          this.$ = { stmt: \"relation\", state1: $$[$0 - 3], state2: $$[$0 - 1], description: relDescription };\n          break;\n        case 19:\n          this.$ = { stmt: \"state\", id: $$[$0 - 3], type: \"default\", description: \"\", doc: $$[$0 - 1] };\n          break;\n        case 20:\n          var id = $$[$0];\n          var description = $$[$0 - 2].trim();\n          if ($$[$0].match(\":\")) {\n            var parts = $$[$0].split(\":\");\n            id = parts[0];\n            description = [description, parts[1]];\n          }\n          this.$ = { stmt: \"state\", id, type: \"default\", description };\n          break;\n        case 21:\n          this.$ = { stmt: \"state\", id: $$[$0 - 3], type: \"default\", description: $$[$0 - 5], doc: $$[$0 - 1] };\n          break;\n        case 22:\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"fork\" };\n          break;\n        case 23:\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"join\" };\n          break;\n        case 24:\n          this.$ = { stmt: \"state\", id: $$[$0], type: \"choice\" };\n          break;\n        case 25:\n          this.$ = { stmt: \"state\", id: yy.getDividerId(), type: \"divider\" };\n          break;\n        case 26:\n          this.$ = { stmt: \"state\", id: $$[$0 - 1].trim(), note: { position: $$[$0 - 2].trim(), text: $$[$0].trim() } };\n          break;\n        case 29:\n          this.$ = $$[$0].trim();\n          yy.setAccTitle(this.$);\n          break;\n        case 30:\n        case 31:\n          this.$ = $$[$0].trim();\n          yy.setAccDescription(this.$);\n          break;\n        case 32:\n        case 33:\n          this.$ = { stmt: \"classDef\", id: $$[$0 - 1].trim(), classes: $$[$0].trim() };\n          break;\n        case 34:\n          this.$ = { stmt: \"style\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\n          break;\n        case 35:\n          this.$ = { stmt: \"applyClass\", id: $$[$0 - 1].trim(), styleClass: $$[$0].trim() };\n          break;\n        case 36:\n          yy.setDirection(\"TB\");\n          this.$ = { stmt: \"dir\", value: \"TB\" };\n          break;\n        case 37:\n          yy.setDirection(\"BT\");\n          this.$ = { stmt: \"dir\", value: \"BT\" };\n          break;\n        case 38:\n          yy.setDirection(\"RL\");\n          this.$ = { stmt: \"dir\", value: \"RL\" };\n          break;\n        case 39:\n          yy.setDirection(\"LR\");\n          this.$ = { stmt: \"dir\", value: \"LR\" };\n          break;\n        case 42:\n        case 43:\n          this.$ = { stmt: \"state\", id: $$[$0].trim(), type: \"default\", description: \"\" };\n          break;\n        case 44:\n          this.$ = { stmt: \"state\", id: $$[$0 - 2].trim(), classes: [$$[$0].trim()], type: \"default\", description: \"\" };\n          break;\n        case 45:\n          this.$ = { stmt: \"state\", id: $$[$0 - 2].trim(), classes: [$$[$0].trim()], type: \"default\", description: \"\" };\n          break;\n      }\n    }, \"anonymous\"),\n    table: [{ 3: 1, 4: $V0, 5: $V1, 6: $V2 }, { 1: [3] }, { 3: 5, 4: $V0, 5: $V1, 6: $V2 }, { 3: 6, 4: $V0, 5: $V1, 6: $V2 }, o([1, 4, 5, 16, 17, 19, 22, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 42, 45, 48, 49, 50, 51, 54], $V3, { 7: 7 }), { 1: [2, 1] }, { 1: [2, 2] }, { 1: [2, 3], 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 5]), { 9: 38, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 7]), o($Vr, [2, 8]), o($Vr, [2, 9]), o($Vr, [2, 10]), o($Vr, [2, 11]), o($Vr, [2, 12], { 14: [1, 39], 15: [1, 40] }), o($Vr, [2, 16]), { 18: [1, 41] }, o($Vr, [2, 18], { 20: [1, 42] }), { 23: [1, 43] }, o($Vr, [2, 22]), o($Vr, [2, 23]), o($Vr, [2, 24]), o($Vr, [2, 25]), { 30: 44, 31: [1, 45], 56: [1, 46], 57: [1, 47] }, o($Vr, [2, 28]), { 34: [1, 48] }, { 36: [1, 49] }, o($Vr, [2, 31]), { 39: [1, 50], 41: [1, 51] }, { 43: [1, 52] }, { 46: [1, 53] }, o($Vs, [2, 42], { 55: [1, 54] }), o($Vs, [2, 43], { 55: [1, 55] }), o($Vr, [2, 36]), o($Vr, [2, 37]), o($Vr, [2, 38]), o($Vr, [2, 39]), o($Vr, [2, 6]), o($Vr, [2, 13]), { 13: 56, 24: $Va, 54: $Vq }, o($Vr, [2, 17]), o($Vt, $V3, { 7: 57 }), { 24: [1, 58] }, { 24: [1, 59] }, { 23: [1, 60] }, { 24: [2, 46] }, { 24: [2, 47] }, o($Vr, [2, 29]), o($Vr, [2, 30]), { 40: [1, 61] }, { 40: [1, 62] }, { 44: [1, 63] }, { 47: [1, 64] }, { 24: [1, 65] }, { 24: [1, 66] }, o($Vr, [2, 14], { 14: [1, 67] }), { 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 21: [1, 68], 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 20], { 20: [1, 69] }), { 31: [1, 70] }, { 24: [1, 71] }, o($Vr, [2, 32]), o($Vr, [2, 33]), o($Vr, [2, 34]), o($Vr, [2, 35]), o($Vs, [2, 44]), o($Vs, [2, 45]), o($Vr, [2, 15]), o($Vr, [2, 19]), o($Vt, $V3, { 7: 72 }), o($Vr, [2, 26]), o($Vr, [2, 27]), { 4: $V4, 5: $V5, 8: 8, 9: 10, 10: 12, 11: 13, 12: 14, 13: 15, 16: $V6, 17: $V7, 19: $V8, 21: [1, 73], 22: $V9, 24: $Va, 25: $Vb, 26: $Vc, 27: $Vd, 28: $Ve, 29: $Vf, 32: 25, 33: $Vg, 35: $Vh, 37: $Vi, 38: $Vj, 42: $Vk, 45: $Vl, 48: $Vm, 49: $Vn, 50: $Vo, 51: $Vp, 54: $Vq }, o($Vr, [2, 21])],\n    defaultActions: { 5: [2, 1], 6: [2, 2], 46: [2, 46], 47: [2, 47] },\n    parseError: /* @__PURE__ */ __name(function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    }, \"parseError\"),\n    parse: /* @__PURE__ */ __name(function parse(input) {\n      var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n      __name(popStack, \"popStack\");\n      function lex() {\n        var token;\n        token = tstack.pop() || lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          if (token instanceof Array) {\n            tstack = token;\n            token = tstack.pop();\n          }\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      }\n      __name(lex, \"lex\");\n      var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push(\"'\" + this.terminals_[p] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }, \"parse\")\n  };\n  var lexer = /* @__PURE__ */ function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: /* @__PURE__ */ __name(function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      }, \"parseError\"),\n      // resets the lexer, sets new input\n      setInput: /* @__PURE__ */ __name(function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      }, \"setInput\"),\n      // consumes and returns one char from the input\n      input: /* @__PURE__ */ __name(function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      }, \"input\"),\n      // unshifts one char (or a string) into the input\n      unput: /* @__PURE__ */ __name(function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      }, \"unput\"),\n      // When called from action, caches matched text and appends it on next action\n      more: /* @__PURE__ */ __name(function() {\n        this._more = true;\n        return this;\n      }, \"more\"),\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: /* @__PURE__ */ __name(function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      }, \"reject\"),\n      // retain first n characters of the match\n      less: /* @__PURE__ */ __name(function(n) {\n        this.unput(this.match.slice(n));\n      }, \"less\"),\n      // displays already matched input, i.e. for error messages\n      pastInput: /* @__PURE__ */ __name(function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      }, \"pastInput\"),\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: /* @__PURE__ */ __name(function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      }, \"upcomingInput\"),\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: /* @__PURE__ */ __name(function() {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      }, \"showPosition\"),\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: /* @__PURE__ */ __name(function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      }, \"test_match\"),\n      // return next match in input\n      next: /* @__PURE__ */ __name(function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      }, \"next\"),\n      // return next match that has a token\n      lex: /* @__PURE__ */ __name(function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      }, \"lex\"),\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: /* @__PURE__ */ __name(function begin(condition) {\n        this.conditionStack.push(condition);\n      }, \"begin\"),\n      // pop the previously active lexer condition state off the condition stack\n      popState: /* @__PURE__ */ __name(function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      }, \"popState\"),\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: /* @__PURE__ */ __name(function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      }, \"_currentRules\"),\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: /* @__PURE__ */ __name(function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      }, \"topState\"),\n      // alias for begin(condition)\n      pushState: /* @__PURE__ */ __name(function pushState(condition) {\n        this.begin(condition);\n      }, \"pushState\"),\n      // return the number of states currently on the stack\n      stateStackSize: /* @__PURE__ */ __name(function stateStackSize() {\n        return this.conditionStack.length;\n      }, \"stateStackSize\"),\n      options: { \"case-insensitive\": true },\n      performAction: /* @__PURE__ */ __name(function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 41;\n            break;\n          case 1:\n            return 48;\n            break;\n          case 2:\n            return 49;\n            break;\n          case 3:\n            return 50;\n            break;\n          case 4:\n            return 51;\n            break;\n          case 5:\n            break;\n          case 6:\n            {\n            }\n            break;\n          case 7:\n            return 5;\n            break;\n          case 8:\n            break;\n          case 9:\n            break;\n          case 10:\n            break;\n          case 11:\n            break;\n          case 12:\n            this.pushState(\"SCALE\");\n            return 17;\n            break;\n          case 13:\n            return 18;\n            break;\n          case 14:\n            this.popState();\n            break;\n          case 15:\n            this.begin(\"acc_title\");\n            return 33;\n            break;\n          case 16:\n            this.popState();\n            return \"acc_title_value\";\n            break;\n          case 17:\n            this.begin(\"acc_descr\");\n            return 35;\n            break;\n          case 18:\n            this.popState();\n            return \"acc_descr_value\";\n            break;\n          case 19:\n            this.begin(\"acc_descr_multiline\");\n            break;\n          case 20:\n            this.popState();\n            break;\n          case 21:\n            return \"acc_descr_multiline_value\";\n            break;\n          case 22:\n            this.pushState(\"CLASSDEF\");\n            return 38;\n            break;\n          case 23:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return \"DEFAULT_CLASSDEF_ID\";\n            break;\n          case 24:\n            this.popState();\n            this.pushState(\"CLASSDEFID\");\n            return 39;\n            break;\n          case 25:\n            this.popState();\n            return 40;\n            break;\n          case 26:\n            this.pushState(\"CLASS\");\n            return 45;\n            break;\n          case 27:\n            this.popState();\n            this.pushState(\"CLASS_STYLE\");\n            return 46;\n            break;\n          case 28:\n            this.popState();\n            return 47;\n            break;\n          case 29:\n            this.pushState(\"STYLE\");\n            return 42;\n            break;\n          case 30:\n            this.popState();\n            this.pushState(\"STYLEDEF_STYLES\");\n            return 43;\n            break;\n          case 31:\n            this.popState();\n            return 44;\n            break;\n          case 32:\n            this.pushState(\"SCALE\");\n            return 17;\n            break;\n          case 33:\n            return 18;\n            break;\n          case 34:\n            this.popState();\n            break;\n          case 35:\n            this.pushState(\"STATE\");\n            break;\n          case 36:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 25;\n            break;\n          case 37:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 26;\n            break;\n          case 38:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\n            return 27;\n            break;\n          case 39:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 25;\n            break;\n          case 40:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 26;\n            break;\n          case 41:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -10).trim();\n            return 27;\n            break;\n          case 42:\n            return 48;\n            break;\n          case 43:\n            return 49;\n            break;\n          case 44:\n            return 50;\n            break;\n          case 45:\n            return 51;\n            break;\n          case 46:\n            this.pushState(\"STATE_STRING\");\n            break;\n          case 47:\n            this.pushState(\"STATE_ID\");\n            return \"AS\";\n            break;\n          case 48:\n            this.popState();\n            return \"ID\";\n            break;\n          case 49:\n            this.popState();\n            break;\n          case 50:\n            return \"STATE_DESCR\";\n            break;\n          case 51:\n            return 19;\n            break;\n          case 52:\n            this.popState();\n            break;\n          case 53:\n            this.popState();\n            this.pushState(\"struct\");\n            return 20;\n            break;\n          case 54:\n            break;\n          case 55:\n            this.popState();\n            return 21;\n            break;\n          case 56:\n            break;\n          case 57:\n            this.begin(\"NOTE\");\n            return 29;\n            break;\n          case 58:\n            this.popState();\n            this.pushState(\"NOTE_ID\");\n            return 56;\n            break;\n          case 59:\n            this.popState();\n            this.pushState(\"NOTE_ID\");\n            return 57;\n            break;\n          case 60:\n            this.popState();\n            this.pushState(\"FLOATING_NOTE\");\n            break;\n          case 61:\n            this.popState();\n            this.pushState(\"FLOATING_NOTE_ID\");\n            return \"AS\";\n            break;\n          case 62:\n            break;\n          case 63:\n            return \"NOTE_TEXT\";\n            break;\n          case 64:\n            this.popState();\n            return \"ID\";\n            break;\n          case 65:\n            this.popState();\n            this.pushState(\"NOTE_TEXT\");\n            return 24;\n            break;\n          case 66:\n            this.popState();\n            yy_.yytext = yy_.yytext.substr(2).trim();\n            return 31;\n            break;\n          case 67:\n            this.popState();\n            yy_.yytext = yy_.yytext.slice(0, -8).trim();\n            return 31;\n            break;\n          case 68:\n            return 6;\n            break;\n          case 69:\n            return 6;\n            break;\n          case 70:\n            return 16;\n            break;\n          case 71:\n            return 54;\n            break;\n          case 72:\n            return 24;\n            break;\n          case 73:\n            yy_.yytext = yy_.yytext.trim();\n            return 14;\n            break;\n          case 74:\n            return 15;\n            break;\n          case 75:\n            return 28;\n            break;\n          case 76:\n            return 55;\n            break;\n          case 77:\n            return 5;\n            break;\n          case 78:\n            return \"INVALID\";\n            break;\n        }\n      }, \"anonymous\"),\n      rules: [/^(?:default\\b)/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:[^\\}]%%[^\\n]*)/i, /^(?:[\\n]+)/i, /^(?:[\\s]+)/i, /^(?:((?!\\n)\\s)+)/i, /^(?:#[^\\n]*)/i, /^(?:%[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:accTitle\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*:\\s*)/i, /^(?:(?!\\n||)*[^\\n]*)/i, /^(?:accDescr\\s*\\{\\s*)/i, /^(?:[\\}])/i, /^(?:[^\\}]*)/i, /^(?:classDef\\s+)/i, /^(?:DEFAULT\\s+)/i, /^(?:\\w+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:class\\s+)/i, /^(?:(\\w+)+((,\\s*\\w+)*))/i, /^(?:[^\\n]*)/i, /^(?:style\\s+)/i, /^(?:[\\w,]+\\s+)/i, /^(?:[^\\n]*)/i, /^(?:scale\\s+)/i, /^(?:\\d+)/i, /^(?:\\s+width\\b)/i, /^(?:state\\s+)/i, /^(?:.*<<fork>>)/i, /^(?:.*<<join>>)/i, /^(?:.*<<choice>>)/i, /^(?:.*\\[\\[fork\\]\\])/i, /^(?:.*\\[\\[join\\]\\])/i, /^(?:.*\\[\\[choice\\]\\])/i, /^(?:.*direction\\s+TB[^\\n]*)/i, /^(?:.*direction\\s+BT[^\\n]*)/i, /^(?:.*direction\\s+RL[^\\n]*)/i, /^(?:.*direction\\s+LR[^\\n]*)/i, /^(?:[\"])/i, /^(?:\\s*as\\s+)/i, /^(?:[^\\n\\{]*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n\\s\\{]+)/i, /^(?:\\n)/i, /^(?:\\{)/i, /^(?:%%(?!\\{)[^\\n]*)/i, /^(?:\\})/i, /^(?:[\\n])/i, /^(?:note\\s+)/i, /^(?:left of\\b)/i, /^(?:right of\\b)/i, /^(?:\")/i, /^(?:\\s*as\\s*)/i, /^(?:[\"])/i, /^(?:[^\"]*)/i, /^(?:[^\\n]*)/i, /^(?:\\s*[^:\\n\\s\\-]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:[\\s\\S]*?end note\\b)/i, /^(?:stateDiagram\\s+)/i, /^(?:stateDiagram-v2\\s+)/i, /^(?:hide empty description\\b)/i, /^(?:\\[\\*\\])/i, /^(?:[^:\\n\\s\\-\\{]+)/i, /^(?:\\s*:[^:\\n;]+)/i, /^(?:-->)/i, /^(?:--)/i, /^(?::::)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"LINE\": { \"rules\": [9, 10], \"inclusive\": false }, \"struct\": { \"rules\": [9, 10, 22, 26, 29, 35, 42, 43, 44, 45, 54, 55, 56, 57, 71, 72, 73, 74, 75], \"inclusive\": false }, \"FLOATING_NOTE_ID\": { \"rules\": [64], \"inclusive\": false }, \"FLOATING_NOTE\": { \"rules\": [61, 62, 63], \"inclusive\": false }, \"NOTE_TEXT\": { \"rules\": [66, 67], \"inclusive\": false }, \"NOTE_ID\": { \"rules\": [65], \"inclusive\": false }, \"NOTE\": { \"rules\": [58, 59, 60], \"inclusive\": false }, \"STYLEDEF_STYLEOPTS\": { \"rules\": [], \"inclusive\": false }, \"STYLEDEF_STYLES\": { \"rules\": [31], \"inclusive\": false }, \"STYLE_IDS\": { \"rules\": [], \"inclusive\": false }, \"STYLE\": { \"rules\": [30], \"inclusive\": false }, \"CLASS_STYLE\": { \"rules\": [28], \"inclusive\": false }, \"CLASS\": { \"rules\": [27], \"inclusive\": false }, \"CLASSDEFID\": { \"rules\": [25], \"inclusive\": false }, \"CLASSDEF\": { \"rules\": [23, 24], \"inclusive\": false }, \"acc_descr_multiline\": { \"rules\": [20, 21], \"inclusive\": false }, \"acc_descr\": { \"rules\": [18], \"inclusive\": false }, \"acc_title\": { \"rules\": [16], \"inclusive\": false }, \"SCALE\": { \"rules\": [13, 14, 33, 34], \"inclusive\": false }, \"ALIAS\": { \"rules\": [], \"inclusive\": false }, \"STATE_ID\": { \"rules\": [48], \"inclusive\": false }, \"STATE_STRING\": { \"rules\": [49, 50], \"inclusive\": false }, \"FORK_STATE\": { \"rules\": [], \"inclusive\": false }, \"STATE\": { \"rules\": [9, 10, 36, 37, 38, 39, 40, 41, 46, 47, 51, 52, 53], \"inclusive\": false }, \"ID\": { \"rules\": [9, 10], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 17, 19, 22, 26, 29, 32, 35, 53, 57, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser2.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  __name(Parser, \"Parser\");\n  Parser.prototype = parser2;\n  parser2.Parser = Parser;\n  return new Parser();\n}();\nparser.parser = parser;\nvar stateDiagram_default = parser;\n\n// src/diagrams/state/stateCommon.ts\nvar DEFAULT_DIAGRAM_DIRECTION = \"TB\";\nvar DEFAULT_NESTED_DOC_DIR = \"TB\";\nvar STMT_DIRECTION = \"dir\";\nvar STMT_STATE = \"state\";\nvar STMT_RELATION = \"relation\";\nvar STMT_CLASSDEF = \"classDef\";\nvar STMT_STYLEDEF = \"style\";\nvar STMT_APPLYCLASS = \"applyClass\";\nvar DEFAULT_STATE_TYPE = \"default\";\nvar DIVIDER_TYPE = \"divider\";\nvar G_EDGE_STYLE = \"fill:none\";\nvar G_EDGE_ARROWHEADSTYLE = \"fill: #333\";\nvar G_EDGE_LABELPOS = \"c\";\nvar G_EDGE_LABELTYPE = \"text\";\nvar G_EDGE_THICKNESS = \"normal\";\nvar SHAPE_STATE = \"rect\";\nvar SHAPE_STATE_WITH_DESC = \"rectWithTitle\";\nvar SHAPE_START = \"stateStart\";\nvar SHAPE_END = \"stateEnd\";\nvar SHAPE_DIVIDER = \"divider\";\nvar SHAPE_GROUP = \"roundedWithTitle\";\nvar SHAPE_NOTE = \"note\";\nvar SHAPE_NOTEGROUP = \"noteGroup\";\nvar CSS_DIAGRAM = \"statediagram\";\nvar CSS_STATE = \"state\";\nvar CSS_DIAGRAM_STATE = `${CSS_DIAGRAM}-${CSS_STATE}`;\nvar CSS_EDGE = \"transition\";\nvar CSS_NOTE = \"note\";\nvar CSS_NOTE_EDGE = \"note-edge\";\nvar CSS_EDGE_NOTE_EDGE = `${CSS_EDGE} ${CSS_NOTE_EDGE}`;\nvar CSS_DIAGRAM_NOTE = `${CSS_DIAGRAM}-${CSS_NOTE}`;\nvar CSS_CLUSTER = \"cluster\";\nvar CSS_DIAGRAM_CLUSTER = `${CSS_DIAGRAM}-${CSS_CLUSTER}`;\nvar CSS_CLUSTER_ALT = \"cluster-alt\";\nvar CSS_DIAGRAM_CLUSTER_ALT = `${CSS_DIAGRAM}-${CSS_CLUSTER_ALT}`;\nvar PARENT = \"parent\";\nvar NOTE = \"note\";\nvar DOMID_STATE = \"state\";\nvar DOMID_TYPE_SPACER = \"----\";\nvar NOTE_ID = `${DOMID_TYPE_SPACER}${NOTE}`;\nvar PARENT_ID = `${DOMID_TYPE_SPACER}${PARENT}`;\n\n// src/diagrams/state/stateRenderer-v3-unified.ts\nvar getDir = /* @__PURE__ */ __name((parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  if (!parsedItem.doc) {\n    return defaultDir;\n  }\n  let dir = defaultDir;\n  for (const parsedItemDoc of parsedItem.doc) {\n    if (parsedItemDoc.stmt === \"dir\") {\n      dir = parsedItemDoc.value;\n    }\n  }\n  return dir;\n}, \"getDir\");\nvar getClasses = /* @__PURE__ */ __name(function(text, diagramObj) {\n  return diagramObj.db.getClasses();\n}, \"getClasses\");\nvar draw = /* @__PURE__ */ __name(async function(text, id, _version, diag) {\n  log.info(\"REF0:\");\n  log.info(\"Drawing state diagram (v2)\", id);\n  const { securityLevel, state: conf, layout } = getConfig();\n  diag.db.extract(diag.db.getRootDocV2());\n  const data4Layout = diag.db.getData();\n  const svg = getDiagramElement(id, securityLevel);\n  data4Layout.type = diag.type;\n  data4Layout.layoutAlgorithm = layout;\n  data4Layout.nodeSpacing = conf?.nodeSpacing || 50;\n  data4Layout.rankSpacing = conf?.rankSpacing || 50;\n  data4Layout.markers = [\"barb\"];\n  data4Layout.diagramId = id;\n  await render(data4Layout, svg);\n  const padding = 8;\n  utils_default.insertTitle(\n    svg,\n    \"statediagramTitleText\",\n    conf?.titleTopMargin ?? 25,\n    diag.db.getDiagramTitle()\n  );\n  setupViewPortForSVG(svg, padding, CSS_DIAGRAM, conf?.useMaxWidth ?? true);\n}, \"draw\");\nvar stateRenderer_v3_unified_default = {\n  getClasses,\n  draw,\n  getDir\n};\n\n// src/diagrams/state/dataFetcher.js\nvar nodeDb = /* @__PURE__ */ new Map();\nvar graphItemCount = 0;\nfunction stateDomId(itemId = \"\", counter = 0, type = \"\", typeSpacer = DOMID_TYPE_SPACER) {\n  const typeStr = type !== null && type.length > 0 ? `${typeSpacer}${type}` : \"\";\n  return `${DOMID_STATE}-${itemId}${typeStr}-${counter}`;\n}\n__name(stateDomId, \"stateDomId\");\nvar setupDoc = /* @__PURE__ */ __name((parentParsedItem, doc, diagramStates, nodes, edges, altFlag, look, classes) => {\n  log.trace(\"items\", doc);\n  doc.forEach((item) => {\n    switch (item.stmt) {\n      case STMT_STATE:\n        dataFetcher(parentParsedItem, item, diagramStates, nodes, edges, altFlag, look, classes);\n        break;\n      case DEFAULT_STATE_TYPE:\n        dataFetcher(parentParsedItem, item, diagramStates, nodes, edges, altFlag, look, classes);\n        break;\n      case STMT_RELATION:\n        {\n          dataFetcher(\n            parentParsedItem,\n            item.state1,\n            diagramStates,\n            nodes,\n            edges,\n            altFlag,\n            look,\n            classes\n          );\n          dataFetcher(\n            parentParsedItem,\n            item.state2,\n            diagramStates,\n            nodes,\n            edges,\n            altFlag,\n            look,\n            classes\n          );\n          const edgeData = {\n            id: \"edge\" + graphItemCount,\n            start: item.state1.id,\n            end: item.state2.id,\n            arrowhead: \"normal\",\n            arrowTypeEnd: \"arrow_barb\",\n            style: G_EDGE_STYLE,\n            labelStyle: \"\",\n            label: common_default.sanitizeText(item.description, getConfig()),\n            arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n            labelpos: G_EDGE_LABELPOS,\n            labelType: G_EDGE_LABELTYPE,\n            thickness: G_EDGE_THICKNESS,\n            classes: CSS_EDGE,\n            look\n          };\n          edges.push(edgeData);\n          graphItemCount++;\n        }\n        break;\n    }\n  });\n}, \"setupDoc\");\nvar getDir2 = /* @__PURE__ */ __name((parsedItem, defaultDir = DEFAULT_NESTED_DOC_DIR) => {\n  let dir = defaultDir;\n  if (parsedItem.doc) {\n    for (const parsedItemDoc of parsedItem.doc) {\n      if (parsedItemDoc.stmt === \"dir\") {\n        dir = parsedItemDoc.value;\n      }\n    }\n  }\n  return dir;\n}, \"getDir\");\nfunction insertOrUpdateNode(nodes, nodeData, classes) {\n  if (!nodeData.id || nodeData.id === \"</join></fork>\" || nodeData.id === \"</choice>\") {\n    return;\n  }\n  if (nodeData.cssClasses) {\n    if (!Array.isArray(nodeData.cssCompiledStyles)) {\n      nodeData.cssCompiledStyles = [];\n    }\n    nodeData.cssClasses.split(\" \").forEach((cssClass) => {\n      if (classes.get(cssClass)) {\n        const classDef = classes.get(cssClass);\n        nodeData.cssCompiledStyles = [...nodeData.cssCompiledStyles, ...classDef.styles];\n      }\n    });\n  }\n  const existingNodeData = nodes.find((node) => node.id === nodeData.id);\n  if (existingNodeData) {\n    Object.assign(existingNodeData, nodeData);\n  } else {\n    nodes.push(nodeData);\n  }\n}\n__name(insertOrUpdateNode, \"insertOrUpdateNode\");\nfunction getClassesFromDbInfo(dbInfoItem) {\n  return dbInfoItem?.classes?.join(\" \") ?? \"\";\n}\n__name(getClassesFromDbInfo, \"getClassesFromDbInfo\");\nfunction getStylesFromDbInfo(dbInfoItem) {\n  return dbInfoItem?.styles ?? [];\n}\n__name(getStylesFromDbInfo, \"getStylesFromDbInfo\");\nvar dataFetcher = /* @__PURE__ */ __name((parent, parsedItem, diagramStates, nodes, edges, altFlag, look, classes) => {\n  const itemId = parsedItem.id;\n  const dbState = diagramStates.get(itemId);\n  const classStr = getClassesFromDbInfo(dbState);\n  const style = getStylesFromDbInfo(dbState);\n  log.info(\"dataFetcher parsedItem\", parsedItem, dbState, style);\n  if (itemId !== \"root\") {\n    let shape = SHAPE_STATE;\n    if (parsedItem.start === true) {\n      shape = SHAPE_START;\n    } else if (parsedItem.start === false) {\n      shape = SHAPE_END;\n    }\n    if (parsedItem.type !== DEFAULT_STATE_TYPE) {\n      shape = parsedItem.type;\n    }\n    if (!nodeDb.get(itemId)) {\n      nodeDb.set(itemId, {\n        id: itemId,\n        shape,\n        description: common_default.sanitizeText(itemId, getConfig()),\n        cssClasses: `${classStr} ${CSS_DIAGRAM_STATE}`,\n        cssStyles: style\n      });\n    }\n    const newNode = nodeDb.get(itemId);\n    if (parsedItem.description) {\n      if (Array.isArray(newNode.description)) {\n        newNode.shape = SHAPE_STATE_WITH_DESC;\n        newNode.description.push(parsedItem.description);\n      } else {\n        if (newNode.description?.length > 0) {\n          newNode.shape = SHAPE_STATE_WITH_DESC;\n          if (newNode.description === itemId) {\n            newNode.description = [parsedItem.description];\n          } else {\n            newNode.description = [newNode.description, parsedItem.description];\n          }\n        } else {\n          newNode.shape = SHAPE_STATE;\n          newNode.description = parsedItem.description;\n        }\n      }\n      newNode.description = common_default.sanitizeTextOrArray(newNode.description, getConfig());\n    }\n    if (newNode.description?.length === 1 && newNode.shape === SHAPE_STATE_WITH_DESC) {\n      if (newNode.type === \"group\") {\n        newNode.shape = SHAPE_GROUP;\n      } else {\n        newNode.shape = SHAPE_STATE;\n      }\n    }\n    if (!newNode.type && parsedItem.doc) {\n      log.info(\"Setting cluster for XCX\", itemId, getDir2(parsedItem));\n      newNode.type = \"group\";\n      newNode.isGroup = true;\n      newNode.dir = getDir2(parsedItem);\n      newNode.shape = parsedItem.type === DIVIDER_TYPE ? SHAPE_DIVIDER : SHAPE_GROUP;\n      newNode.cssClasses = `${newNode.cssClasses} ${CSS_DIAGRAM_CLUSTER} ${altFlag ? CSS_DIAGRAM_CLUSTER_ALT : \"\"}`;\n    }\n    const nodeData = {\n      labelStyle: \"\",\n      shape: newNode.shape,\n      label: newNode.description,\n      cssClasses: newNode.cssClasses,\n      cssCompiledStyles: [],\n      cssStyles: newNode.cssStyles,\n      id: itemId,\n      dir: newNode.dir,\n      domId: stateDomId(itemId, graphItemCount),\n      type: newNode.type,\n      isGroup: newNode.type === \"group\",\n      padding: 8,\n      rx: 10,\n      ry: 10,\n      look\n    };\n    if (nodeData.shape === SHAPE_DIVIDER) {\n      nodeData.label = \"\";\n    }\n    if (parent && parent.id !== \"root\") {\n      log.trace(\"Setting node \", itemId, \" to be child of its parent \", parent.id);\n      nodeData.parentId = parent.id;\n    }\n    nodeData.centerLabel = true;\n    if (parsedItem.note) {\n      const noteData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTE,\n        label: parsedItem.note.text,\n        cssClasses: CSS_DIAGRAM_NOTE,\n        // useHtmlLabels: false,\n        cssStyles: [],\n        cssCompilesStyles: [],\n        id: itemId + NOTE_ID + \"-\" + graphItemCount,\n        domId: stateDomId(itemId, graphItemCount, NOTE),\n        type: newNode.type,\n        isGroup: newNode.type === \"group\",\n        padding: getConfig().flowchart.padding,\n        look,\n        position: parsedItem.note.position\n      };\n      const parentNodeId = itemId + PARENT_ID;\n      const groupData = {\n        labelStyle: \"\",\n        shape: SHAPE_NOTEGROUP,\n        label: parsedItem.note.text,\n        cssClasses: newNode.cssClasses,\n        cssStyles: [],\n        id: itemId + PARENT_ID,\n        domId: stateDomId(itemId, graphItemCount, PARENT),\n        type: \"group\",\n        isGroup: true,\n        padding: 16,\n        //getConfig().flowchart.padding\n        look,\n        position: parsedItem.note.position\n      };\n      graphItemCount++;\n      groupData.id = parentNodeId;\n      noteData.parentId = parentNodeId;\n      insertOrUpdateNode(nodes, groupData, classes);\n      insertOrUpdateNode(nodes, noteData, classes);\n      insertOrUpdateNode(nodes, nodeData, classes);\n      let from = itemId;\n      let to = noteData.id;\n      if (parsedItem.note.position === \"left of\") {\n        from = noteData.id;\n        to = itemId;\n      }\n      edges.push({\n        id: from + \"-\" + to,\n        start: from,\n        end: to,\n        arrowhead: \"none\",\n        arrowTypeEnd: \"\",\n        style: G_EDGE_STYLE,\n        labelStyle: \"\",\n        classes: CSS_EDGE_NOTE_EDGE,\n        arrowheadStyle: G_EDGE_ARROWHEADSTYLE,\n        labelpos: G_EDGE_LABELPOS,\n        labelType: G_EDGE_LABELTYPE,\n        thickness: G_EDGE_THICKNESS,\n        look\n      });\n    } else {\n      insertOrUpdateNode(nodes, nodeData, classes);\n    }\n  }\n  if (parsedItem.doc) {\n    log.trace(\"Adding nodes children \");\n    setupDoc(parsedItem, parsedItem.doc, diagramStates, nodes, edges, !altFlag, look, classes);\n  }\n}, \"dataFetcher\");\nvar reset = /* @__PURE__ */ __name(() => {\n  nodeDb.clear();\n  graphItemCount = 0;\n}, \"reset\");\n\n// src/diagrams/state/stateDb.js\nvar START_NODE = \"[*]\";\nvar START_TYPE = \"start\";\nvar END_NODE = START_NODE;\nvar END_TYPE = \"end\";\nvar COLOR_KEYWORD = \"color\";\nvar FILL_KEYWORD = \"fill\";\nvar BG_FILL = \"bgFill\";\nvar STYLECLASS_SEP = \",\";\nfunction newClassesList() {\n  return /* @__PURE__ */ new Map();\n}\n__name(newClassesList, \"newClassesList\");\nvar newDoc = /* @__PURE__ */ __name(() => {\n  return {\n    /** @type {{ id1: string, id2: string, relationTitle: string }[]} */\n    relations: [],\n    states: /* @__PURE__ */ new Map(),\n    documents: {}\n  };\n}, \"newDoc\");\nvar clone = /* @__PURE__ */ __name((o) => JSON.parse(JSON.stringify(o)), \"clone\");\nvar StateDB = class {\n  static {\n    __name(this, \"StateDB\");\n  }\n  /**\n   * @param {1 | 2} version - v1 renderer or v2 renderer.\n   */\n  constructor(version) {\n    this.clear();\n    this.version = version;\n    this.setRootDoc = this.setRootDoc.bind(this);\n    this.getDividerId = this.getDividerId.bind(this);\n    this.setDirection = this.setDirection.bind(this);\n    this.trimColon = this.trimColon.bind(this);\n  }\n  /**\n   * @private\n   * @type {1 | 2}\n   */\n  version;\n  /**\n   * @private\n   * @type {Array}\n   */\n  nodes = [];\n  /**\n   * @private\n   * @type {Array}\n   */\n  edges = [];\n  /**\n   * @private\n   * @type {Array}\n   */\n  rootDoc = [];\n  /**\n   * @private\n   * @type {Map<string, any>}\n   */\n  classes = newClassesList();\n  // style classes defined by a classDef\n  /**\n   * @private\n   * @type {Object}\n   */\n  documents = {\n    root: newDoc()\n  };\n  /**\n   * @private\n   * @type {Object}\n   */\n  currentDocument = this.documents.root;\n  /**\n   * @private\n   * @type {number}\n   */\n  startEndCount = 0;\n  /**\n   * @private\n   * @type {number}\n   */\n  dividerCnt = 0;\n  static relationType = {\n    AGGREGATION: 0,\n    EXTENSION: 1,\n    COMPOSITION: 2,\n    DEPENDENCY: 3\n  };\n  setRootDoc(o) {\n    log.info(\"Setting root doc\", o);\n    this.rootDoc = o;\n    if (this.version === 1) {\n      this.extract(o);\n    } else {\n      this.extract(this.getRootDocV2());\n    }\n  }\n  getRootDoc() {\n    return this.rootDoc;\n  }\n  /**\n   * @private\n   * @param {Object} parent\n   * @param {Object} node\n   * @param {boolean} first\n   */\n  docTranslator(parent, node, first) {\n    if (node.stmt === STMT_RELATION) {\n      this.docTranslator(parent, node.state1, true);\n      this.docTranslator(parent, node.state2, false);\n    } else {\n      if (node.stmt === STMT_STATE) {\n        if (node.id === \"[*]\") {\n          node.id = first ? parent.id + \"_start\" : parent.id + \"_end\";\n          node.start = first;\n        } else {\n          node.id = node.id.trim();\n        }\n      }\n      if (node.doc) {\n        const doc = [];\n        let currentDoc = [];\n        let i;\n        for (i = 0; i < node.doc.length; i++) {\n          if (node.doc[i].type === DIVIDER_TYPE) {\n            const newNode = clone(node.doc[i]);\n            newNode.doc = clone(currentDoc);\n            doc.push(newNode);\n            currentDoc = [];\n          } else {\n            currentDoc.push(node.doc[i]);\n          }\n        }\n        if (doc.length > 0 && currentDoc.length > 0) {\n          const newNode = {\n            stmt: STMT_STATE,\n            id: generateId(),\n            type: \"divider\",\n            doc: clone(currentDoc)\n          };\n          doc.push(clone(newNode));\n          node.doc = doc;\n        }\n        node.doc.forEach((docNode) => this.docTranslator(node, docNode, true));\n      }\n    }\n  }\n  /**\n   * @private\n   */\n  getRootDocV2() {\n    this.docTranslator({ id: \"root\" }, { id: \"root\", doc: this.rootDoc }, true);\n    return { id: \"root\", doc: this.rootDoc };\n  }\n  /**\n   * Convert all of the statements (stmts) that were parsed into states and relationships.\n   * This is done because a state diagram may have nested sections,\n   * where each section is a 'document' and has its own set of statements.\n   * Ex: the section within a fork has its own statements, and incoming and outgoing statements\n   * refer to the fork as a whole (document).\n   * See the parser grammar:  the definition of a document is a document then a 'line', where a line can be a statement.\n   * This will push the statement into the list of statements for the current document.\n   * @private\n   * @param _doc\n   */\n  extract(_doc) {\n    let doc;\n    if (_doc.doc) {\n      doc = _doc.doc;\n    } else {\n      doc = _doc;\n    }\n    log.info(doc);\n    this.clear(true);\n    log.info(\"Extract initial document:\", doc);\n    doc.forEach((item) => {\n      log.warn(\"Statement\", item.stmt);\n      switch (item.stmt) {\n        case STMT_STATE:\n          this.addState(\n            item.id.trim(),\n            item.type,\n            item.doc,\n            item.description,\n            item.note,\n            item.classes,\n            item.styles,\n            item.textStyles\n          );\n          break;\n        case STMT_RELATION:\n          this.addRelation(item.state1, item.state2, item.description);\n          break;\n        case STMT_CLASSDEF:\n          this.addStyleClass(item.id.trim(), item.classes);\n          break;\n        case STMT_STYLEDEF:\n          {\n            const ids = item.id.trim().split(\",\");\n            const styles = item.styleClass.split(\",\");\n            ids.forEach((id) => {\n              let foundState = this.getState(id);\n              if (foundState === void 0) {\n                const trimmedId = id.trim();\n                this.addState(trimmedId);\n                foundState = this.getState(trimmedId);\n              }\n              foundState.styles = styles.map((s) => s.replace(/;/g, \"\")?.trim());\n            });\n          }\n          break;\n        case STMT_APPLYCLASS:\n          this.setCssClass(item.id.trim(), item.styleClass);\n          break;\n      }\n    });\n    const diagramStates = this.getStates();\n    const config = getConfig();\n    const look = config.look;\n    reset();\n    dataFetcher(\n      void 0,\n      this.getRootDocV2(),\n      diagramStates,\n      this.nodes,\n      this.edges,\n      true,\n      look,\n      this.classes\n    );\n    this.nodes.forEach((node) => {\n      if (Array.isArray(node.label)) {\n        node.description = node.label.slice(1);\n        if (node.isGroup && node.description.length > 0) {\n          throw new Error(\n            \"Group nodes can only have label. Remove the additional description for node [\" + node.id + \"]\"\n          );\n        }\n        node.label = node.label[0];\n      }\n    });\n  }\n  /**\n   * Function called by parser when a node definition has been found.\n   *\n   * @param {null | string} id\n   * @param {null | string} type\n   * @param {null | string} doc\n   * @param {null | string | string[]} descr - description for the state. Can be a string or a list or strings\n   * @param {null | string} note\n   * @param {null | string | string[]} classes - class styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 class, convert it to an array of that 1 class.\n   * @param {null | string | string[]} styles - styles to apply to this state. Can be a string (1 style) or an array of styles. If it's just 1 style, convert it to an array of that 1 style.\n   * @param {null | string | string[]} textStyles - text styles to apply to this state. Can be a string (1 text test) or an array of text styles. If it's just 1 text style, convert it to an array of that 1 text style.\n   */\n  addState(id, type = DEFAULT_STATE_TYPE, doc = null, descr = null, note = null, classes = null, styles = null, textStyles = null) {\n    const trimmedId = id?.trim();\n    if (!this.currentDocument.states.has(trimmedId)) {\n      log.info(\"Adding state \", trimmedId, descr);\n      this.currentDocument.states.set(trimmedId, {\n        id: trimmedId,\n        descriptions: [],\n        type,\n        doc,\n        note,\n        classes: [],\n        styles: [],\n        textStyles: []\n      });\n    } else {\n      if (!this.currentDocument.states.get(trimmedId).doc) {\n        this.currentDocument.states.get(trimmedId).doc = doc;\n      }\n      if (!this.currentDocument.states.get(trimmedId).type) {\n        this.currentDocument.states.get(trimmedId).type = type;\n      }\n    }\n    if (descr) {\n      log.info(\"Setting state description\", trimmedId, descr);\n      if (typeof descr === \"string\") {\n        this.addDescription(trimmedId, descr.trim());\n      }\n      if (typeof descr === \"object\") {\n        descr.forEach((des) => this.addDescription(trimmedId, des.trim()));\n      }\n    }\n    if (note) {\n      const doc2 = this.currentDocument.states.get(trimmedId);\n      doc2.note = note;\n      doc2.note.text = common_default.sanitizeText(doc2.note.text, getConfig());\n    }\n    if (classes) {\n      log.info(\"Setting state classes\", trimmedId, classes);\n      const classesList = typeof classes === \"string\" ? [classes] : classes;\n      classesList.forEach((cssClass) => this.setCssClass(trimmedId, cssClass.trim()));\n    }\n    if (styles) {\n      log.info(\"Setting state styles\", trimmedId, styles);\n      const stylesList = typeof styles === \"string\" ? [styles] : styles;\n      stylesList.forEach((style) => this.setStyle(trimmedId, style.trim()));\n    }\n    if (textStyles) {\n      log.info(\"Setting state styles\", trimmedId, styles);\n      const textStylesList = typeof textStyles === \"string\" ? [textStyles] : textStyles;\n      textStylesList.forEach((textStyle) => this.setTextStyle(trimmedId, textStyle.trim()));\n    }\n  }\n  clear(saveCommon) {\n    this.nodes = [];\n    this.edges = [];\n    this.documents = {\n      root: newDoc()\n    };\n    this.currentDocument = this.documents.root;\n    this.startEndCount = 0;\n    this.classes = newClassesList();\n    if (!saveCommon) {\n      clear();\n    }\n  }\n  getState(id) {\n    return this.currentDocument.states.get(id);\n  }\n  getStates() {\n    return this.currentDocument.states;\n  }\n  logDocuments() {\n    log.info(\"Documents = \", this.documents);\n  }\n  getRelations() {\n    return this.currentDocument.relations;\n  }\n  /**\n   * If the id is a start node ( [*] ), then return a new id constructed from\n   * the start node name and the current start node count.\n   * else return the given id\n   *\n   * @param {string} id\n   * @returns {string} - the id (original or constructed)\n   * @private\n   */\n  startIdIfNeeded(id = \"\") {\n    let fixedId = id;\n    if (id === START_NODE) {\n      this.startEndCount++;\n      fixedId = `${START_TYPE}${this.startEndCount}`;\n    }\n    return fixedId;\n  }\n  /**\n   * If the id is a start node ( [*] ), then return the start type ('start')\n   * else return the given type\n   *\n   * @param {string} id\n   * @param {string} type\n   * @returns {string} - the type that should be used\n   * @private\n   */\n  startTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\n    return id === START_NODE ? START_TYPE : type;\n  }\n  /**\n   * If the id is an end node ( [*] ), then return a new id constructed from\n   * the end node name and the current start_end node count.\n   * else return the given id\n   *\n   * @param {string} id\n   * @returns {string} - the id (original or constructed)\n   * @private\n   */\n  endIdIfNeeded(id = \"\") {\n    let fixedId = id;\n    if (id === END_NODE) {\n      this.startEndCount++;\n      fixedId = `${END_TYPE}${this.startEndCount}`;\n    }\n    return fixedId;\n  }\n  /**\n   * If the id is an end node ( [*] ), then return the end type\n   * else return the given type\n   *\n   * @param {string} id\n   * @param {string} type\n   * @returns {string} - the type that should be used\n   * @private\n   */\n  endTypeIfNeeded(id = \"\", type = DEFAULT_STATE_TYPE) {\n    return id === END_NODE ? END_TYPE : type;\n  }\n  /**\n   *\n   * @param item1\n   * @param item2\n   * @param relationTitle\n   */\n  addRelationObjs(item1, item2, relationTitle) {\n    let id1 = this.startIdIfNeeded(item1.id.trim());\n    let type1 = this.startTypeIfNeeded(item1.id.trim(), item1.type);\n    let id2 = this.startIdIfNeeded(item2.id.trim());\n    let type2 = this.startTypeIfNeeded(item2.id.trim(), item2.type);\n    this.addState(\n      id1,\n      type1,\n      item1.doc,\n      item1.description,\n      item1.note,\n      item1.classes,\n      item1.styles,\n      item1.textStyles\n    );\n    this.addState(\n      id2,\n      type2,\n      item2.doc,\n      item2.description,\n      item2.note,\n      item2.classes,\n      item2.styles,\n      item2.textStyles\n    );\n    this.currentDocument.relations.push({\n      id1,\n      id2,\n      relationTitle: common_default.sanitizeText(relationTitle, getConfig())\n    });\n  }\n  /**\n   * Add a relation between two items.  The items may be full objects or just the string id of a state.\n   *\n   * @param {string | object} item1\n   * @param {string | object} item2\n   * @param {string} title\n   */\n  addRelation(item1, item2, title) {\n    if (typeof item1 === \"object\") {\n      this.addRelationObjs(item1, item2, title);\n    } else {\n      const id1 = this.startIdIfNeeded(item1.trim());\n      const type1 = this.startTypeIfNeeded(item1);\n      const id2 = this.endIdIfNeeded(item2.trim());\n      const type2 = this.endTypeIfNeeded(item2);\n      this.addState(id1, type1);\n      this.addState(id2, type2);\n      this.currentDocument.relations.push({\n        id1,\n        id2,\n        title: common_default.sanitizeText(title, getConfig())\n      });\n    }\n  }\n  addDescription(id, descr) {\n    const theState = this.currentDocument.states.get(id);\n    const _descr = descr.startsWith(\":\") ? descr.replace(\":\", \"\").trim() : descr;\n    theState.descriptions.push(common_default.sanitizeText(_descr, getConfig()));\n  }\n  cleanupLabel(label) {\n    if (label.substring(0, 1) === \":\") {\n      return label.substr(2).trim();\n    } else {\n      return label.trim();\n    }\n  }\n  getDividerId() {\n    this.dividerCnt++;\n    return \"divider-id-\" + this.dividerCnt;\n  }\n  /**\n   * Called when the parser comes across a (style) class definition\n   * @example classDef my-style fill:#f96;\n   *\n   * @param {string} id - the id of this (style) class\n   * @param  {string | null} styleAttributes - the string with 1 or more style attributes (each separated by a comma)\n   */\n  addStyleClass(id, styleAttributes = \"\") {\n    if (!this.classes.has(id)) {\n      this.classes.set(id, { id, styles: [], textStyles: [] });\n    }\n    const foundClass = this.classes.get(id);\n    if (styleAttributes !== void 0 && styleAttributes !== null) {\n      styleAttributes.split(STYLECLASS_SEP).forEach((attrib) => {\n        const fixedAttrib = attrib.replace(/([^;]*);/, \"$1\").trim();\n        if (RegExp(COLOR_KEYWORD).exec(attrib)) {\n          const newStyle1 = fixedAttrib.replace(FILL_KEYWORD, BG_FILL);\n          const newStyle2 = newStyle1.replace(COLOR_KEYWORD, FILL_KEYWORD);\n          foundClass.textStyles.push(newStyle2);\n        }\n        foundClass.styles.push(fixedAttrib);\n      });\n    }\n  }\n  /**\n   * Return all of the style classes\n   * @returns {{} | any | classes}\n   */\n  getClasses() {\n    return this.classes;\n  }\n  /**\n   * Add a (style) class or css class to a state with the given id.\n   * If the state isn't already in the list of known states, add it.\n   * Might be called by parser when a style class or CSS class should be applied to a state\n   *\n   * @param {string | string[]} itemIds The id or a list of ids of the item(s) to apply the css class to\n   * @param {string} cssClassName CSS class name\n   */\n  setCssClass(itemIds, cssClassName) {\n    itemIds.split(\",\").forEach((id) => {\n      let foundState = this.getState(id);\n      if (foundState === void 0) {\n        const trimmedId = id.trim();\n        this.addState(trimmedId);\n        foundState = this.getState(trimmedId);\n      }\n      foundState.classes.push(cssClassName);\n    });\n  }\n  /**\n   * Add a style to a state with the given id.\n   * @example style stateId fill:#f9f,stroke:#333,stroke-width:4px\n   *   where 'style' is the keyword\n   *   stateId is the id of a state\n   *   the rest of the string is the styleText (all of the attributes to be applied to the state)\n   *\n   * @param itemId The id of item to apply the style to\n   * @param styleText - the text of the attributes for the style\n   */\n  setStyle(itemId, styleText) {\n    const item = this.getState(itemId);\n    if (item !== void 0) {\n      item.styles.push(styleText);\n    }\n  }\n  /**\n   * Add a text style to a state with the given id\n   *\n   * @param itemId The id of item to apply the css class to\n   * @param cssClassName CSS class name\n   */\n  setTextStyle(itemId, cssClassName) {\n    const item = this.getState(itemId);\n    if (item !== void 0) {\n      item.textStyles.push(cssClassName);\n    }\n  }\n  /**\n   * Finds the direction statement in the root document.\n   * @private\n   * @returns {{ value: string } | undefined} - the direction statement if present\n   */\n  getDirectionStatement() {\n    return this.rootDoc.find((doc) => doc.stmt === STMT_DIRECTION);\n  }\n  getDirection() {\n    return this.getDirectionStatement()?.value ?? DEFAULT_DIAGRAM_DIRECTION;\n  }\n  setDirection(dir) {\n    const doc = this.getDirectionStatement();\n    if (doc) {\n      doc.value = dir;\n    } else {\n      this.rootDoc.unshift({ stmt: STMT_DIRECTION, value: dir });\n    }\n  }\n  trimColon(str) {\n    return str && str[0] === \":\" ? str.substr(1).trim() : str.trim();\n  }\n  getData() {\n    const config = getConfig();\n    return {\n      nodes: this.nodes,\n      edges: this.edges,\n      other: {},\n      config,\n      direction: getDir(this.getRootDocV2())\n    };\n  }\n  getConfig() {\n    return getConfig().state;\n  }\n  getAccTitle = getAccTitle;\n  setAccTitle = setAccTitle;\n  getAccDescription = getAccDescription;\n  setAccDescription = setAccDescription;\n  setDiagramTitle = setDiagramTitle;\n  getDiagramTitle = getDiagramTitle;\n};\n\n// src/diagrams/state/styles.js\nvar getStyles = /* @__PURE__ */ __name((options) => `\ndefs #statediagram-barbEnd {\n    fill: ${options.transitionColor};\n    stroke: ${options.transitionColor};\n  }\ng.stateGroup text {\n  fill: ${options.nodeBorder};\n  stroke: none;\n  font-size: 10px;\n}\ng.stateGroup text {\n  fill: ${options.textColor};\n  stroke: none;\n  font-size: 10px;\n\n}\ng.stateGroup .state-title {\n  font-weight: bolder;\n  fill: ${options.stateLabelColor};\n}\n\ng.stateGroup rect {\n  fill: ${options.mainBkg};\n  stroke: ${options.nodeBorder};\n}\n\ng.stateGroup line {\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.transition {\n  stroke: ${options.transitionColor};\n  stroke-width: 1;\n  fill: none;\n}\n\n.stateGroup .composit {\n  fill: ${options.background};\n  border-bottom: 1px\n}\n\n.stateGroup .alt-composit {\n  fill: #e0e0e0;\n  border-bottom: 1px\n}\n\n.state-note {\n  stroke: ${options.noteBorderColor};\n  fill: ${options.noteBkgColor};\n\n  text {\n    fill: ${options.noteTextColor};\n    stroke: none;\n    font-size: 10px;\n  }\n}\n\n.stateLabel .box {\n  stroke: none;\n  stroke-width: 0;\n  fill: ${options.mainBkg};\n  opacity: 0.5;\n}\n\n.edgeLabel .label rect {\n  fill: ${options.labelBackgroundColor};\n  opacity: 0.5;\n}\n.edgeLabel {\n  background-color: ${options.edgeLabelBackground};\n  p {\n    background-color: ${options.edgeLabelBackground};\n  }\n  rect {\n    opacity: 0.5;\n    background-color: ${options.edgeLabelBackground};\n    fill: ${options.edgeLabelBackground};\n  }\n  text-align: center;\n}\n.edgeLabel .label text {\n  fill: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n.label div .edgeLabel {\n  color: ${options.transitionLabelColor || options.tertiaryTextColor};\n}\n\n.stateLabel text {\n  fill: ${options.stateLabelColor};\n  font-size: 10px;\n  font-weight: bold;\n}\n\n.node circle.state-start {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node .fork-join {\n  fill: ${options.specialStateColor};\n  stroke: ${options.specialStateColor};\n}\n\n.node circle.state-end {\n  fill: ${options.innerEndBackground};\n  stroke: ${options.background};\n  stroke-width: 1.5\n}\n.end-state-inner {\n  fill: ${options.compositeBackground || options.background};\n  // stroke: ${options.background};\n  stroke-width: 1.5\n}\n\n.node rect {\n  fill: ${options.stateBkg || options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n.node polygon {\n  fill: ${options.mainBkg};\n  stroke: ${options.stateBorder || options.nodeBorder};;\n  stroke-width: 1px;\n}\n#statediagram-barbEnd {\n  fill: ${options.lineColor};\n}\n\n.statediagram-cluster rect {\n  fill: ${options.compositeTitleBackground};\n  stroke: ${options.stateBorder || options.nodeBorder};\n  stroke-width: 1px;\n}\n\n.cluster-label, .nodeLabel {\n  color: ${options.stateLabelColor};\n  // line-height: 1;\n}\n\n.statediagram-cluster rect.outer {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state .divider {\n  stroke: ${options.stateBorder || options.nodeBorder};\n}\n\n.statediagram-state .title-state {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-cluster.statediagram-cluster .inner {\n  fill: ${options.compositeBackground || options.background};\n}\n.statediagram-cluster.statediagram-cluster-alt .inner {\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\n}\n\n.statediagram-cluster .inner {\n  rx:0;\n  ry:0;\n}\n\n.statediagram-state rect.basic {\n  rx: 5px;\n  ry: 5px;\n}\n.statediagram-state rect.divider {\n  stroke-dasharray: 10,10;\n  fill: ${options.altBackground ? options.altBackground : \"#efefef\"};\n}\n\n.note-edge {\n  stroke-dasharray: 5;\n}\n\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n.statediagram-note rect {\n  fill: ${options.noteBkgColor};\n  stroke: ${options.noteBorderColor};\n  stroke-width: 1px;\n  rx: 0;\n  ry: 0;\n}\n\n.statediagram-note text {\n  fill: ${options.noteTextColor};\n}\n\n.statediagram-note .nodeLabel {\n  color: ${options.noteTextColor};\n}\n.statediagram .edgeLabel {\n  color: red; // ${options.noteTextColor};\n}\n\n#dependencyStart, #dependencyEnd {\n  fill: ${options.lineColor};\n  stroke: ${options.lineColor};\n  stroke-width: 1;\n}\n\n.statediagramTitleText {\n  text-anchor: middle;\n  font-size: 18px;\n  fill: ${options.textColor};\n}\n`, \"getStyles\");\nvar styles_default = getStyles;\n\nexport {\n  stateDiagram_default,\n  stateRenderer_v3_unified_default,\n  StateDB,\n  styles_default\n};\n"],"mappings":";;;;;;;AAAA,SACEA,iBAAiB,EACjBC,mBAAmB,QACd,sBAAsB;AAC7B,SACEC,MAAM,QACD,sBAAsB;AAC7B,SACEC,UAAU,EACVC,aAAa,QACR,sBAAsB;AAC7B,SACEC,MAAM,EACNC,KAAK,EACLC,cAAc,EACdC,iBAAiB,EACjBC,WAAW,EACXC,UAAU,IAAIC,SAAS,EACvBC,eAAe,EACfC,GAAG,EACHC,iBAAiB,EACjBC,WAAW,EACXC,eAAe,QACV,sBAAsB;;AAE7B;AACA,IAAIC,MAAM,GAAG,YAAW;EACtB,IAAIC,CAAC,GAAG,eAAgBb,MAAM,CAAC,UAASc,CAAC,EAAEC,CAAC,EAAEC,EAAE,EAAEC,CAAC,EAAE;MACnD,KAAKD,EAAE,GAAGA,EAAE,IAAI,CAAC,CAAC,EAAEC,CAAC,GAAGH,CAAC,CAACI,MAAM,EAAED,CAAC,EAAE,EAAED,EAAE,CAACF,CAAC,CAACG,CAAC,CAAC,CAAC,GAAGF,CAAC,CAAE;MACrD,OAAOC,EAAE;IACX,CAAC,EAAE,GAAG,CAAC;IAAEG,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAAEC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}