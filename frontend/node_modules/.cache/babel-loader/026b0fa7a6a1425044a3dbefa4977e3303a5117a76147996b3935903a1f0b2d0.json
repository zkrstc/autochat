{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nfunction toString(number) {\n  if (number < 255) {\n    if (number > 32 && number < 127) {\n      const char = String.fromCharCode(number);\n      if (\n      // 0-9\n      number > 47 && number < 58 ||\n      // A-Z\n      number > 64 && number < 91 ||\n      // _`a-z\n      number > 94 && number < 123) {\n        return char;\n      }\n      return \"\\\\\" + char;\n    }\n    return \"\\\\x\" + (number < 16 ? \"0\" : \"\") + number.toString(16).toUpperCase();\n  }\n  return \"\\\\u\" + number.toString(16).toUpperCase();\n}\nfunction wrapRegexInGroup(regex) {\n  return \"(?:\" + regex + \")\";\n}\nfunction updateUTF16EmojiRegexItem(item) {\n  const numbers = item.numbers;\n  if (numbers.length === 1) {\n    const num = numbers[0];\n    return item.regex = toString(num);\n  }\n  numbers.sort((a, b) => a - b);\n  const chars = [];\n  let range = null;\n  const addRange = () => {\n    if (range) {\n      const {\n        start,\n        last,\n        numbers: numbers2\n      } = range;\n      range = null;\n      if (last > start + 1) {\n        chars.push(toString(start) + \"-\" + toString(last));\n      } else {\n        for (let i = 0; i < numbers2.length; i++) {\n          chars.push(toString(numbers2[i]));\n        }\n      }\n    }\n  };\n  for (let i = 0; i < numbers.length; i++) {\n    const num = numbers[i];\n    if (range) {\n      if (range.last === num) {\n        continue;\n      }\n      if (range.last === num - 1) {\n        range.numbers.push(num);\n        range.last = num;\n        continue;\n      }\n    }\n    addRange();\n    range = {\n      start: num,\n      last: num,\n      numbers: [num]\n    };\n  }\n  addRange();\n  if (!chars.length) {\n    throw new Error(\"Unexpected empty range\");\n  }\n  return item.regex = \"[\" + chars.join(\"\") + \"]\";\n}\nfunction createUTF16EmojiRegexItem(numbers) {\n  const result = {\n    type: \"utf16\",\n    regex: \"\",\n    numbers,\n    length: 1,\n    group: true\n  };\n  updateUTF16EmojiRegexItem(result);\n  return result;\n}\nfunction updateSequenceEmojiRegexItem(item) {\n  return item.regex = item.items.map(childItem => {\n    if (!childItem.group && childItem.type === \"set\") {\n      return wrapRegexInGroup(childItem.regex);\n    }\n    return childItem.regex;\n  }).join(\"\");\n}\nfunction createSequenceEmojiRegexItem(sequence, numbers) {\n  let items = [];\n  sequence.forEach(item => {\n    if (item.type === \"sequence\") {\n      items = items.concat(item.items);\n    } else {\n      items.push(item);\n    }\n  });\n  if (!items.length) {\n    throw new Error(\"Empty sequence\");\n  }\n  const result = {\n    type: \"sequence\",\n    items,\n    regex: \"\",\n    length: items.reduce((length, item) => item.length + length, 0),\n    group: false\n  };\n  if (sequence.length === 1) {\n    const firstItem = sequence[0];\n    result.group = firstItem.group;\n    if (firstItem.type !== \"optional\") {\n      const numbers2 = firstItem.numbers;\n      if (numbers2) {\n        result.numbers = numbers2;\n      }\n    }\n  }\n  if (numbers) {\n    result.numbers = numbers;\n  }\n  updateSequenceEmojiRegexItem(result);\n  return result;\n}\nfunction updateSetEmojiRegexItem(item) {\n  if (item.sets.length === 1) {\n    const firstItem = item.sets[0];\n    item.group = firstItem.group;\n    return item.regex = firstItem.regex;\n  }\n  item.group = false;\n  return item.regex = item.sets.map(childItem => childItem.regex).join(\"|\");\n}\nfunction createSetEmojiRegexItem(set) {\n  let sets = [];\n  let numbers = [];\n  set.forEach(item => {\n    if (item.type === \"set\") {\n      sets = sets.concat(item.sets);\n    } else {\n      sets.push(item);\n    }\n    if (numbers) {\n      if (item.type === \"optional\" || !item.numbers) {\n        numbers = null;\n      } else {\n        numbers = [...numbers, ...item.numbers];\n      }\n    }\n  });\n  sets.sort((a, b) => {\n    if (a.length === b.length) {\n      return a.regex.localeCompare(b.regex);\n    }\n    return b.length - a.length;\n  });\n  const result = {\n    type: \"set\",\n    sets,\n    regex: \"\",\n    length: sets.reduce((length, item) => length ? Math.min(length, item.length) : item.length, 0),\n    group: false\n  };\n  if (numbers) {\n    result.numbers = numbers;\n  }\n  if (set.length === 1) {\n    const firstItem = set[0];\n    result.group = firstItem.group;\n  }\n  updateSetEmojiRegexItem(result);\n  return result;\n}\nfunction updateOptionalEmojiRegexItem(item) {\n  const childItem = item.item;\n  const regex = (childItem.group ? childItem.regex : wrapRegexInGroup(childItem.regex)) + \"?\";\n  return item.regex = regex;\n}\nfunction createOptionalEmojiRegexItem(item) {\n  if (item.type === \"optional\") {\n    return item;\n  }\n  const result = {\n    type: \"optional\",\n    item,\n    regex: \"\",\n    length: item.length,\n    group: true\n  };\n  updateOptionalEmojiRegexItem(result);\n  return result;\n}\nfunction cloneEmojiRegexItem(item, shallow = false) {\n  const result = {\n    ...item\n  };\n  if (result.type !== \"optional\" && result.numbers) {\n    result.numbers = [...result.numbers];\n  }\n  switch (result.type) {\n    case \"utf16\":\n      break;\n    case \"sequence\":\n      if (shallow) {\n        result.items = [...result.items];\n      } else {\n        result.items = result.items.map(item2 => cloneEmojiRegexItem(item2, false));\n      }\n      break;\n    case \"set\":\n      if (shallow) {\n        result.sets = [...result.sets];\n      } else {\n        result.sets = result.sets.map(item2 => cloneEmojiRegexItem(item2, false));\n      }\n      break;\n    case \"optional\":\n      if (!shallow) {\n        result.item = cloneEmojiRegexItem(result.item, false);\n      }\n      break;\n  }\n  return result;\n}\nexport { cloneEmojiRegexItem, createOptionalEmojiRegexItem, createSequenceEmojiRegexItem, createSetEmojiRegexItem, createUTF16EmojiRegexItem, updateOptionalEmojiRegexItem, updateSequenceEmojiRegexItem, updateSetEmojiRegexItem, updateUTF16EmojiRegexItem, wrapRegexInGroup };","map":{"version":3,"names":["toString","number","char","String","fromCharCode","toUpperCase","wrapRegexInGroup","regex","updateUTF16EmojiRegexItem","item","numbers","length","num","sort","a","b","chars","range","addRange","start","last","numbers2","push","i","Error","join","createUTF16EmojiRegexItem","result","type","group","updateSequenceEmojiRegexItem","items","map","childItem","createSequenceEmojiRegexItem","sequence","forEach","concat","reduce","firstItem","updateSetEmojiRegexItem","sets","createSetEmojiRegexItem","set","localeCompare","Math","min","updateOptionalEmojiRegexItem","createOptionalEmojiRegexItem","cloneEmojiRegexItem","shallow","item2"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@iconify/utils/lib/emoji/regex/base.mjs"],"sourcesContent":["function toString(number) {\n  if (number < 255) {\n    if (number > 32 && number < 127) {\n      const char = String.fromCharCode(number);\n      if (\n        // 0-9\n        number > 47 && number < 58 || // A-Z\n        number > 64 && number < 91 || // _`a-z\n        number > 94 && number < 123\n      ) {\n        return char;\n      }\n      return \"\\\\\" + char;\n    }\n    return \"\\\\x\" + (number < 16 ? \"0\" : \"\") + number.toString(16).toUpperCase();\n  }\n  return \"\\\\u\" + number.toString(16).toUpperCase();\n}\nfunction wrapRegexInGroup(regex) {\n  return \"(?:\" + regex + \")\";\n}\nfunction updateUTF16EmojiRegexItem(item) {\n  const numbers = item.numbers;\n  if (numbers.length === 1) {\n    const num = numbers[0];\n    return item.regex = toString(num);\n  }\n  numbers.sort((a, b) => a - b);\n  const chars = [];\n  let range = null;\n  const addRange = () => {\n    if (range) {\n      const { start, last, numbers: numbers2 } = range;\n      range = null;\n      if (last > start + 1) {\n        chars.push(toString(start) + \"-\" + toString(last));\n      } else {\n        for (let i = 0; i < numbers2.length; i++) {\n          chars.push(toString(numbers2[i]));\n        }\n      }\n    }\n  };\n  for (let i = 0; i < numbers.length; i++) {\n    const num = numbers[i];\n    if (range) {\n      if (range.last === num) {\n        continue;\n      }\n      if (range.last === num - 1) {\n        range.numbers.push(num);\n        range.last = num;\n        continue;\n      }\n    }\n    addRange();\n    range = {\n      start: num,\n      last: num,\n      numbers: [num]\n    };\n  }\n  addRange();\n  if (!chars.length) {\n    throw new Error(\"Unexpected empty range\");\n  }\n  return item.regex = \"[\" + chars.join(\"\") + \"]\";\n}\nfunction createUTF16EmojiRegexItem(numbers) {\n  const result = {\n    type: \"utf16\",\n    regex: \"\",\n    numbers,\n    length: 1,\n    group: true\n  };\n  updateUTF16EmojiRegexItem(result);\n  return result;\n}\nfunction updateSequenceEmojiRegexItem(item) {\n  return item.regex = item.items.map((childItem) => {\n    if (!childItem.group && childItem.type === \"set\") {\n      return wrapRegexInGroup(childItem.regex);\n    }\n    return childItem.regex;\n  }).join(\"\");\n}\nfunction createSequenceEmojiRegexItem(sequence, numbers) {\n  let items = [];\n  sequence.forEach((item) => {\n    if (item.type === \"sequence\") {\n      items = items.concat(item.items);\n    } else {\n      items.push(item);\n    }\n  });\n  if (!items.length) {\n    throw new Error(\"Empty sequence\");\n  }\n  const result = {\n    type: \"sequence\",\n    items,\n    regex: \"\",\n    length: items.reduce((length, item) => item.length + length, 0),\n    group: false\n  };\n  if (sequence.length === 1) {\n    const firstItem = sequence[0];\n    result.group = firstItem.group;\n    if (firstItem.type !== \"optional\") {\n      const numbers2 = firstItem.numbers;\n      if (numbers2) {\n        result.numbers = numbers2;\n      }\n    }\n  }\n  if (numbers) {\n    result.numbers = numbers;\n  }\n  updateSequenceEmojiRegexItem(result);\n  return result;\n}\nfunction updateSetEmojiRegexItem(item) {\n  if (item.sets.length === 1) {\n    const firstItem = item.sets[0];\n    item.group = firstItem.group;\n    return item.regex = firstItem.regex;\n  }\n  item.group = false;\n  return item.regex = item.sets.map((childItem) => childItem.regex).join(\"|\");\n}\nfunction createSetEmojiRegexItem(set) {\n  let sets = [];\n  let numbers = [];\n  set.forEach((item) => {\n    if (item.type === \"set\") {\n      sets = sets.concat(item.sets);\n    } else {\n      sets.push(item);\n    }\n    if (numbers) {\n      if (item.type === \"optional\" || !item.numbers) {\n        numbers = null;\n      } else {\n        numbers = [...numbers, ...item.numbers];\n      }\n    }\n  });\n  sets.sort((a, b) => {\n    if (a.length === b.length) {\n      return a.regex.localeCompare(b.regex);\n    }\n    return b.length - a.length;\n  });\n  const result = {\n    type: \"set\",\n    sets,\n    regex: \"\",\n    length: sets.reduce(\n      (length, item) => length ? Math.min(length, item.length) : item.length,\n      0\n    ),\n    group: false\n  };\n  if (numbers) {\n    result.numbers = numbers;\n  }\n  if (set.length === 1) {\n    const firstItem = set[0];\n    result.group = firstItem.group;\n  }\n  updateSetEmojiRegexItem(result);\n  return result;\n}\nfunction updateOptionalEmojiRegexItem(item) {\n  const childItem = item.item;\n  const regex = (childItem.group ? childItem.regex : wrapRegexInGroup(childItem.regex)) + \"?\";\n  return item.regex = regex;\n}\nfunction createOptionalEmojiRegexItem(item) {\n  if (item.type === \"optional\") {\n    return item;\n  }\n  const result = {\n    type: \"optional\",\n    item,\n    regex: \"\",\n    length: item.length,\n    group: true\n  };\n  updateOptionalEmojiRegexItem(result);\n  return result;\n}\nfunction cloneEmojiRegexItem(item, shallow = false) {\n  const result = {\n    ...item\n  };\n  if (result.type !== \"optional\" && result.numbers) {\n    result.numbers = [...result.numbers];\n  }\n  switch (result.type) {\n    case \"utf16\":\n      break;\n    case \"sequence\":\n      if (shallow) {\n        result.items = [...result.items];\n      } else {\n        result.items = result.items.map(\n          (item2) => cloneEmojiRegexItem(item2, false)\n        );\n      }\n      break;\n    case \"set\":\n      if (shallow) {\n        result.sets = [...result.sets];\n      } else {\n        result.sets = result.sets.map(\n          (item2) => cloneEmojiRegexItem(item2, false)\n        );\n      }\n      break;\n    case \"optional\":\n      if (!shallow) {\n        result.item = cloneEmojiRegexItem(result.item, false);\n      }\n      break;\n  }\n  return result;\n}\n\nexport { cloneEmojiRegexItem, createOptionalEmojiRegexItem, createSequenceEmojiRegexItem, createSetEmojiRegexItem, createUTF16EmojiRegexItem, updateOptionalEmojiRegexItem, updateSequenceEmojiRegexItem, updateSetEmojiRegexItem, updateUTF16EmojiRegexItem, wrapRegexInGroup };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}