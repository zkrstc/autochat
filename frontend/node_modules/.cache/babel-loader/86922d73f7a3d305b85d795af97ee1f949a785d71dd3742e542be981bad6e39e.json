{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nfunction t(t, e, s) {\n  if (t && t.length) {\n    const [n, o] = e,\n      a = Math.PI / 180 * s,\n      h = Math.cos(a),\n      r = Math.sin(a);\n    for (const e of t) {\n      const [t, s] = e;\n      e[0] = (t - n) * h - (s - o) * r + n, e[1] = (t - n) * r + (s - o) * h + o;\n    }\n  }\n}\nfunction e(t, e) {\n  return t[0] === e[0] && t[1] === e[1];\n}\nfunction s(s, n, o, a = 1) {\n  const h = o,\n    r = Math.max(n, .1),\n    i = s[0] && s[0][0] && \"number\" == typeof s[0][0] ? [s] : s,\n    c = [0, 0];\n  if (h) for (const e of i) t(e, c, h);\n  const l = function (t, s, n) {\n    const o = [];\n    for (const s of t) {\n      const t = [...s];\n      e(t[0], t[t.length - 1]) || t.push([t[0][0], t[0][1]]), t.length > 2 && o.push(t);\n    }\n    const a = [];\n    s = Math.max(s, .1);\n    const h = [];\n    for (const t of o) for (let e = 0; e < t.length - 1; e++) {\n      const s = t[e],\n        n = t[e + 1];\n      if (s[1] !== n[1]) {\n        const t = Math.min(s[1], n[1]);\n        h.push({\n          ymin: t,\n          ymax: Math.max(s[1], n[1]),\n          x: t === s[1] ? s[0] : n[0],\n          islope: (n[0] - s[0]) / (n[1] - s[1])\n        });\n      }\n    }\n    if (h.sort((t, e) => t.ymin < e.ymin ? -1 : t.ymin > e.ymin ? 1 : t.x < e.x ? -1 : t.x > e.x ? 1 : t.ymax === e.ymax ? 0 : (t.ymax - e.ymax) / Math.abs(t.ymax - e.ymax)), !h.length) return a;\n    let r = [],\n      i = h[0].ymin,\n      c = 0;\n    for (; r.length || h.length;) {\n      if (h.length) {\n        let t = -1;\n        for (let e = 0; e < h.length && !(h[e].ymin > i); e++) t = e;\n        h.splice(0, t + 1).forEach(t => {\n          r.push({\n            s: i,\n            edge: t\n          });\n        });\n      }\n      if (r = r.filter(t => !(t.edge.ymax <= i)), r.sort((t, e) => t.edge.x === e.edge.x ? 0 : (t.edge.x - e.edge.x) / Math.abs(t.edge.x - e.edge.x)), (1 !== n || c % s == 0) && r.length > 1) for (let t = 0; t < r.length; t += 2) {\n        const e = t + 1;\n        if (e >= r.length) break;\n        const s = r[t].edge,\n          n = r[e].edge;\n        a.push([[Math.round(s.x), i], [Math.round(n.x), i]]);\n      }\n      i += n, r.forEach(t => {\n        t.edge.x = t.edge.x + n * t.edge.islope;\n      }), c++;\n    }\n    return a;\n  }(i, r, a);\n  if (h) {\n    for (const e of i) t(e, c, -h);\n    !function (e, s, n) {\n      const o = [];\n      e.forEach(t => o.push(...t)), t(o, s, n);\n    }(l, c, -h);\n  }\n  return l;\n}\nfunction n(t, e) {\n  var n;\n  const o = e.hachureAngle + 90;\n  let a = e.hachureGap;\n  a < 0 && (a = 4 * e.strokeWidth), a = Math.round(Math.max(a, .1));\n  let h = 1;\n  return e.roughness >= 1 && ((null === (n = e.randomizer) || void 0 === n ? void 0 : n.next()) || Math.random()) > .7 && (h = a), s(t, a, o, h || 1);\n}\nclass o {\n  constructor(t) {\n    this.helper = t;\n  }\n  fillPolygons(t, e) {\n    return this._fillPolygons(t, e);\n  }\n  _fillPolygons(t, e) {\n    const s = n(t, e);\n    return {\n      type: \"fillSketch\",\n      ops: this.renderLines(s, e)\n    };\n  }\n  renderLines(t, e) {\n    const s = [];\n    for (const n of t) s.push(...this.helper.doubleLineOps(n[0][0], n[0][1], n[1][0], n[1][1], e));\n    return s;\n  }\n}\nfunction a(t) {\n  const e = t[0],\n    s = t[1];\n  return Math.sqrt(Math.pow(e[0] - s[0], 2) + Math.pow(e[1] - s[1], 2));\n}\nclass h extends o {\n  fillPolygons(t, e) {\n    let s = e.hachureGap;\n    s < 0 && (s = 4 * e.strokeWidth), s = Math.max(s, .1);\n    const o = n(t, Object.assign({}, e, {\n        hachureGap: s\n      })),\n      h = Math.PI / 180 * e.hachureAngle,\n      r = [],\n      i = .5 * s * Math.cos(h),\n      c = .5 * s * Math.sin(h);\n    for (const [t, e] of o) a([t, e]) && r.push([[t[0] - i, t[1] + c], [...e]], [[t[0] + i, t[1] - c], [...e]]);\n    return {\n      type: \"fillSketch\",\n      ops: this.renderLines(r, e)\n    };\n  }\n}\nclass r extends o {\n  fillPolygons(t, e) {\n    const s = this._fillPolygons(t, e),\n      n = Object.assign({}, e, {\n        hachureAngle: e.hachureAngle + 90\n      }),\n      o = this._fillPolygons(t, n);\n    return s.ops = s.ops.concat(o.ops), s;\n  }\n}\nclass i {\n  constructor(t) {\n    this.helper = t;\n  }\n  fillPolygons(t, e) {\n    const s = n(t, e = Object.assign({}, e, {\n      hachureAngle: 0\n    }));\n    return this.dotsOnLines(s, e);\n  }\n  dotsOnLines(t, e) {\n    const s = [];\n    let n = e.hachureGap;\n    n < 0 && (n = 4 * e.strokeWidth), n = Math.max(n, .1);\n    let o = e.fillWeight;\n    o < 0 && (o = e.strokeWidth / 2);\n    const h = n / 4;\n    for (const r of t) {\n      const t = a(r),\n        i = t / n,\n        c = Math.ceil(i) - 1,\n        l = t - c * n,\n        u = (r[0][0] + r[1][0]) / 2 - n / 4,\n        p = Math.min(r[0][1], r[1][1]);\n      for (let t = 0; t < c; t++) {\n        const a = p + l + t * n,\n          r = u - h + 2 * Math.random() * h,\n          i = a - h + 2 * Math.random() * h,\n          c = this.helper.ellipse(r, i, o, o, e);\n        s.push(...c.ops);\n      }\n    }\n    return {\n      type: \"fillSketch\",\n      ops: s\n    };\n  }\n}\nclass c {\n  constructor(t) {\n    this.helper = t;\n  }\n  fillPolygons(t, e) {\n    const s = n(t, e);\n    return {\n      type: \"fillSketch\",\n      ops: this.dashedLine(s, e)\n    };\n  }\n  dashedLine(t, e) {\n    const s = e.dashOffset < 0 ? e.hachureGap < 0 ? 4 * e.strokeWidth : e.hachureGap : e.dashOffset,\n      n = e.dashGap < 0 ? e.hachureGap < 0 ? 4 * e.strokeWidth : e.hachureGap : e.dashGap,\n      o = [];\n    return t.forEach(t => {\n      const h = a(t),\n        r = Math.floor(h / (s + n)),\n        i = (h + n - r * (s + n)) / 2;\n      let c = t[0],\n        l = t[1];\n      c[0] > l[0] && (c = t[1], l = t[0]);\n      const u = Math.atan((l[1] - c[1]) / (l[0] - c[0]));\n      for (let t = 0; t < r; t++) {\n        const a = t * (s + n),\n          h = a + s,\n          r = [c[0] + a * Math.cos(u) + i * Math.cos(u), c[1] + a * Math.sin(u) + i * Math.sin(u)],\n          l = [c[0] + h * Math.cos(u) + i * Math.cos(u), c[1] + h * Math.sin(u) + i * Math.sin(u)];\n        o.push(...this.helper.doubleLineOps(r[0], r[1], l[0], l[1], e));\n      }\n    }), o;\n  }\n}\nclass l {\n  constructor(t) {\n    this.helper = t;\n  }\n  fillPolygons(t, e) {\n    const s = e.hachureGap < 0 ? 4 * e.strokeWidth : e.hachureGap,\n      o = e.zigzagOffset < 0 ? s : e.zigzagOffset,\n      a = n(t, e = Object.assign({}, e, {\n        hachureGap: s + o\n      }));\n    return {\n      type: \"fillSketch\",\n      ops: this.zigzagLines(a, o, e)\n    };\n  }\n  zigzagLines(t, e, s) {\n    const n = [];\n    return t.forEach(t => {\n      const o = a(t),\n        h = Math.round(o / (2 * e));\n      let r = t[0],\n        i = t[1];\n      r[0] > i[0] && (r = t[1], i = t[0]);\n      const c = Math.atan((i[1] - r[1]) / (i[0] - r[0]));\n      for (let t = 0; t < h; t++) {\n        const o = 2 * t * e,\n          a = 2 * (t + 1) * e,\n          h = Math.sqrt(2 * Math.pow(e, 2)),\n          i = [r[0] + o * Math.cos(c), r[1] + o * Math.sin(c)],\n          l = [r[0] + a * Math.cos(c), r[1] + a * Math.sin(c)],\n          u = [i[0] + h * Math.cos(c + Math.PI / 4), i[1] + h * Math.sin(c + Math.PI / 4)];\n        n.push(...this.helper.doubleLineOps(i[0], i[1], u[0], u[1], s), ...this.helper.doubleLineOps(u[0], u[1], l[0], l[1], s));\n      }\n    }), n;\n  }\n}\nconst u = {};\nclass p {\n  constructor(t) {\n    this.seed = t;\n  }\n  next() {\n    return this.seed ? (2 ** 31 - 1 & (this.seed = Math.imul(48271, this.seed))) / 2 ** 31 : Math.random();\n  }\n}\nconst f = 0,\n  d = 1,\n  g = 2,\n  M = {\n    A: 7,\n    a: 7,\n    C: 6,\n    c: 6,\n    H: 1,\n    h: 1,\n    L: 2,\n    l: 2,\n    M: 2,\n    m: 2,\n    Q: 4,\n    q: 4,\n    S: 4,\n    s: 4,\n    T: 2,\n    t: 2,\n    V: 1,\n    v: 1,\n    Z: 0,\n    z: 0\n  };\nfunction k(t, e) {\n  return t.type === e;\n}\nfunction b(t) {\n  const e = [],\n    s = function (t) {\n      const e = new Array();\n      for (; \"\" !== t;) if (t.match(/^([ \\t\\r\\n,]+)/)) t = t.substr(RegExp.$1.length);else if (t.match(/^([aAcChHlLmMqQsStTvVzZ])/)) e[e.length] = {\n        type: f,\n        text: RegExp.$1\n      }, t = t.substr(RegExp.$1.length);else {\n        if (!t.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/)) return [];\n        e[e.length] = {\n          type: d,\n          text: `${parseFloat(RegExp.$1)}`\n        }, t = t.substr(RegExp.$1.length);\n      }\n      return e[e.length] = {\n        type: g,\n        text: \"\"\n      }, e;\n    }(t);\n  let n = \"BOD\",\n    o = 0,\n    a = s[o];\n  for (; !k(a, g);) {\n    let h = 0;\n    const r = [];\n    if (\"BOD\" === n) {\n      if (\"M\" !== a.text && \"m\" !== a.text) return b(\"M0,0\" + t);\n      o++, h = M[a.text], n = a.text;\n    } else k(a, d) ? h = M[n] : (o++, h = M[a.text], n = a.text);\n    if (!(o + h < s.length)) throw new Error(\"Path data ended short\");\n    for (let t = o; t < o + h; t++) {\n      const e = s[t];\n      if (!k(e, d)) throw new Error(\"Param not a number: \" + n + \",\" + e.text);\n      r[r.length] = +e.text;\n    }\n    if (\"number\" != typeof M[n]) throw new Error(\"Bad segment: \" + n);\n    {\n      const t = {\n        key: n,\n        data: r\n      };\n      e.push(t), o += h, a = s[o], \"M\" === n && (n = \"L\"), \"m\" === n && (n = \"l\");\n    }\n  }\n  return e;\n}\nfunction y(t) {\n  let e = 0,\n    s = 0,\n    n = 0,\n    o = 0;\n  const a = [];\n  for (const {\n    key: h,\n    data: r\n  } of t) switch (h) {\n    case \"M\":\n      a.push({\n        key: \"M\",\n        data: [...r]\n      }), [e, s] = r, [n, o] = r;\n      break;\n    case \"m\":\n      e += r[0], s += r[1], a.push({\n        key: \"M\",\n        data: [e, s]\n      }), n = e, o = s;\n      break;\n    case \"L\":\n      a.push({\n        key: \"L\",\n        data: [...r]\n      }), [e, s] = r;\n      break;\n    case \"l\":\n      e += r[0], s += r[1], a.push({\n        key: \"L\",\n        data: [e, s]\n      });\n      break;\n    case \"C\":\n      a.push({\n        key: \"C\",\n        data: [...r]\n      }), e = r[4], s = r[5];\n      break;\n    case \"c\":\n      {\n        const t = r.map((t, n) => n % 2 ? t + s : t + e);\n        a.push({\n          key: \"C\",\n          data: t\n        }), e = t[4], s = t[5];\n        break;\n      }\n    case \"Q\":\n      a.push({\n        key: \"Q\",\n        data: [...r]\n      }), e = r[2], s = r[3];\n      break;\n    case \"q\":\n      {\n        const t = r.map((t, n) => n % 2 ? t + s : t + e);\n        a.push({\n          key: \"Q\",\n          data: t\n        }), e = t[2], s = t[3];\n        break;\n      }\n    case \"A\":\n      a.push({\n        key: \"A\",\n        data: [...r]\n      }), e = r[5], s = r[6];\n      break;\n    case \"a\":\n      e += r[5], s += r[6], a.push({\n        key: \"A\",\n        data: [r[0], r[1], r[2], r[3], r[4], e, s]\n      });\n      break;\n    case \"H\":\n      a.push({\n        key: \"H\",\n        data: [...r]\n      }), e = r[0];\n      break;\n    case \"h\":\n      e += r[0], a.push({\n        key: \"H\",\n        data: [e]\n      });\n      break;\n    case \"V\":\n      a.push({\n        key: \"V\",\n        data: [...r]\n      }), s = r[0];\n      break;\n    case \"v\":\n      s += r[0], a.push({\n        key: \"V\",\n        data: [s]\n      });\n      break;\n    case \"S\":\n      a.push({\n        key: \"S\",\n        data: [...r]\n      }), e = r[2], s = r[3];\n      break;\n    case \"s\":\n      {\n        const t = r.map((t, n) => n % 2 ? t + s : t + e);\n        a.push({\n          key: \"S\",\n          data: t\n        }), e = t[2], s = t[3];\n        break;\n      }\n    case \"T\":\n      a.push({\n        key: \"T\",\n        data: [...r]\n      }), e = r[0], s = r[1];\n      break;\n    case \"t\":\n      e += r[0], s += r[1], a.push({\n        key: \"T\",\n        data: [e, s]\n      });\n      break;\n    case \"Z\":\n    case \"z\":\n      a.push({\n        key: \"Z\",\n        data: []\n      }), e = n, s = o;\n  }\n  return a;\n}\nfunction m(t) {\n  const e = [];\n  let s = \"\",\n    n = 0,\n    o = 0,\n    a = 0,\n    h = 0,\n    r = 0,\n    i = 0;\n  for (const {\n    key: c,\n    data: l\n  } of t) {\n    switch (c) {\n      case \"M\":\n        e.push({\n          key: \"M\",\n          data: [...l]\n        }), [n, o] = l, [a, h] = l;\n        break;\n      case \"C\":\n        e.push({\n          key: \"C\",\n          data: [...l]\n        }), n = l[4], o = l[5], r = l[2], i = l[3];\n        break;\n      case \"L\":\n        e.push({\n          key: \"L\",\n          data: [...l]\n        }), [n, o] = l;\n        break;\n      case \"H\":\n        n = l[0], e.push({\n          key: \"L\",\n          data: [n, o]\n        });\n        break;\n      case \"V\":\n        o = l[0], e.push({\n          key: \"L\",\n          data: [n, o]\n        });\n        break;\n      case \"S\":\n        {\n          let t = 0,\n            a = 0;\n          \"C\" === s || \"S\" === s ? (t = n + (n - r), a = o + (o - i)) : (t = n, a = o), e.push({\n            key: \"C\",\n            data: [t, a, ...l]\n          }), r = l[0], i = l[1], n = l[2], o = l[3];\n          break;\n        }\n      case \"T\":\n        {\n          const [t, a] = l;\n          let h = 0,\n            c = 0;\n          \"Q\" === s || \"T\" === s ? (h = n + (n - r), c = o + (o - i)) : (h = n, c = o);\n          const u = n + 2 * (h - n) / 3,\n            p = o + 2 * (c - o) / 3,\n            f = t + 2 * (h - t) / 3,\n            d = a + 2 * (c - a) / 3;\n          e.push({\n            key: \"C\",\n            data: [u, p, f, d, t, a]\n          }), r = h, i = c, n = t, o = a;\n          break;\n        }\n      case \"Q\":\n        {\n          const [t, s, a, h] = l,\n            c = n + 2 * (t - n) / 3,\n            u = o + 2 * (s - o) / 3,\n            p = a + 2 * (t - a) / 3,\n            f = h + 2 * (s - h) / 3;\n          e.push({\n            key: \"C\",\n            data: [c, u, p, f, a, h]\n          }), r = t, i = s, n = a, o = h;\n          break;\n        }\n      case \"A\":\n        {\n          const t = Math.abs(l[0]),\n            s = Math.abs(l[1]),\n            a = l[2],\n            h = l[3],\n            r = l[4],\n            i = l[5],\n            c = l[6];\n          if (0 === t || 0 === s) e.push({\n            key: \"C\",\n            data: [n, o, i, c, i, c]\n          }), n = i, o = c;else if (n !== i || o !== c) {\n            x(n, o, i, c, t, s, a, h, r).forEach(function (t) {\n              e.push({\n                key: \"C\",\n                data: t\n              });\n            }), n = i, o = c;\n          }\n          break;\n        }\n      case \"Z\":\n        e.push({\n          key: \"Z\",\n          data: []\n        }), n = a, o = h;\n    }\n    s = c;\n  }\n  return e;\n}\nfunction w(t, e, s) {\n  return [t * Math.cos(s) - e * Math.sin(s), t * Math.sin(s) + e * Math.cos(s)];\n}\nfunction x(t, e, s, n, o, a, h, r, i, c) {\n  const l = (u = h, Math.PI * u / 180);\n  var u;\n  let p = [],\n    f = 0,\n    d = 0,\n    g = 0,\n    M = 0;\n  if (c) [f, d, g, M] = c;else {\n    [t, e] = w(t, e, -l), [s, n] = w(s, n, -l);\n    const h = (t - s) / 2,\n      c = (e - n) / 2;\n    let u = h * h / (o * o) + c * c / (a * a);\n    u > 1 && (u = Math.sqrt(u), o *= u, a *= u);\n    const p = o * o,\n      k = a * a,\n      b = p * k - p * c * c - k * h * h,\n      y = p * c * c + k * h * h,\n      m = (r === i ? -1 : 1) * Math.sqrt(Math.abs(b / y));\n    g = m * o * c / a + (t + s) / 2, M = m * -a * h / o + (e + n) / 2, f = Math.asin(parseFloat(((e - M) / a).toFixed(9))), d = Math.asin(parseFloat(((n - M) / a).toFixed(9))), t < g && (f = Math.PI - f), s < g && (d = Math.PI - d), f < 0 && (f = 2 * Math.PI + f), d < 0 && (d = 2 * Math.PI + d), i && f > d && (f -= 2 * Math.PI), !i && d > f && (d -= 2 * Math.PI);\n  }\n  let k = d - f;\n  if (Math.abs(k) > 120 * Math.PI / 180) {\n    const t = d,\n      e = s,\n      r = n;\n    d = i && d > f ? f + 120 * Math.PI / 180 * 1 : f + 120 * Math.PI / 180 * -1, p = x(s = g + o * Math.cos(d), n = M + a * Math.sin(d), e, r, o, a, h, 0, i, [d, t, g, M]);\n  }\n  k = d - f;\n  const b = Math.cos(f),\n    y = Math.sin(f),\n    m = Math.cos(d),\n    P = Math.sin(d),\n    v = Math.tan(k / 4),\n    S = 4 / 3 * o * v,\n    O = 4 / 3 * a * v,\n    L = [t, e],\n    T = [t + S * y, e - O * b],\n    D = [s + S * P, n - O * m],\n    A = [s, n];\n  if (T[0] = 2 * L[0] - T[0], T[1] = 2 * L[1] - T[1], c) return [T, D, A].concat(p);\n  {\n    p = [T, D, A].concat(p);\n    const t = [];\n    for (let e = 0; e < p.length; e += 3) {\n      const s = w(p[e][0], p[e][1], l),\n        n = w(p[e + 1][0], p[e + 1][1], l),\n        o = w(p[e + 2][0], p[e + 2][1], l);\n      t.push([s[0], s[1], n[0], n[1], o[0], o[1]]);\n    }\n    return t;\n  }\n}\nconst P = {\n  randOffset: function (t, e) {\n    return G(t, e);\n  },\n  randOffsetWithRange: function (t, e, s) {\n    return E(t, e, s);\n  },\n  ellipse: function (t, e, s, n, o) {\n    const a = T(s, n, o);\n    return D(t, e, o, a).opset;\n  },\n  doubleLineOps: function (t, e, s, n, o) {\n    return $(t, e, s, n, o, !0);\n  }\n};\nfunction v(t, e, s, n, o) {\n  return {\n    type: \"path\",\n    ops: $(t, e, s, n, o)\n  };\n}\nfunction S(t, e, s) {\n  const n = (t || []).length;\n  if (n > 2) {\n    const o = [];\n    for (let e = 0; e < n - 1; e++) o.push(...$(t[e][0], t[e][1], t[e + 1][0], t[e + 1][1], s));\n    return e && o.push(...$(t[n - 1][0], t[n - 1][1], t[0][0], t[0][1], s)), {\n      type: \"path\",\n      ops: o\n    };\n  }\n  return 2 === n ? v(t[0][0], t[0][1], t[1][0], t[1][1], s) : {\n    type: \"path\",\n    ops: []\n  };\n}\nfunction O(t, e, s, n, o) {\n  return function (t, e) {\n    return S(t, !0, e);\n  }([[t, e], [t + s, e], [t + s, e + n], [t, e + n]], o);\n}\nfunction L(t, e) {\n  if (t.length) {\n    const s = \"number\" == typeof t[0][0] ? [t] : t,\n      n = j(s[0], 1 * (1 + .2 * e.roughness), e),\n      o = e.disableMultiStroke ? [] : j(s[0], 1.5 * (1 + .22 * e.roughness), z(e));\n    for (let t = 1; t < s.length; t++) {\n      const a = s[t];\n      if (a.length) {\n        const t = j(a, 1 * (1 + .2 * e.roughness), e),\n          s = e.disableMultiStroke ? [] : j(a, 1.5 * (1 + .22 * e.roughness), z(e));\n        for (const e of t) \"move\" !== e.op && n.push(e);\n        for (const t of s) \"move\" !== t.op && o.push(t);\n      }\n    }\n    return {\n      type: \"path\",\n      ops: n.concat(o)\n    };\n  }\n  return {\n    type: \"path\",\n    ops: []\n  };\n}\nfunction T(t, e, s) {\n  const n = Math.sqrt(2 * Math.PI * Math.sqrt((Math.pow(t / 2, 2) + Math.pow(e / 2, 2)) / 2)),\n    o = Math.ceil(Math.max(s.curveStepCount, s.curveStepCount / Math.sqrt(200) * n)),\n    a = 2 * Math.PI / o;\n  let h = Math.abs(t / 2),\n    r = Math.abs(e / 2);\n  const i = 1 - s.curveFitting;\n  return h += G(h * i, s), r += G(r * i, s), {\n    increment: a,\n    rx: h,\n    ry: r\n  };\n}\nfunction D(t, e, s, n) {\n  const [o, a] = F(n.increment, t, e, n.rx, n.ry, 1, n.increment * E(.1, E(.4, 1, s), s), s);\n  let h = q(o, null, s);\n  if (!s.disableMultiStroke && 0 !== s.roughness) {\n    const [o] = F(n.increment, t, e, n.rx, n.ry, 1.5, 0, s),\n      a = q(o, null, s);\n    h = h.concat(a);\n  }\n  return {\n    estimatedPoints: a,\n    opset: {\n      type: \"path\",\n      ops: h\n    }\n  };\n}\nfunction A(t, e, s, n, o, a, h, r, i) {\n  const c = t,\n    l = e;\n  let u = Math.abs(s / 2),\n    p = Math.abs(n / 2);\n  u += G(.01 * u, i), p += G(.01 * p, i);\n  let f = o,\n    d = a;\n  for (; f < 0;) f += 2 * Math.PI, d += 2 * Math.PI;\n  d - f > 2 * Math.PI && (f = 0, d = 2 * Math.PI);\n  const g = 2 * Math.PI / i.curveStepCount,\n    M = Math.min(g / 2, (d - f) / 2),\n    k = V(M, c, l, u, p, f, d, 1, i);\n  if (!i.disableMultiStroke) {\n    const t = V(M, c, l, u, p, f, d, 1.5, i);\n    k.push(...t);\n  }\n  return h && (r ? k.push(...$(c, l, c + u * Math.cos(f), l + p * Math.sin(f), i), ...$(c, l, c + u * Math.cos(d), l + p * Math.sin(d), i)) : k.push({\n    op: \"lineTo\",\n    data: [c, l]\n  }, {\n    op: \"lineTo\",\n    data: [c + u * Math.cos(f), l + p * Math.sin(f)]\n  })), {\n    type: \"path\",\n    ops: k\n  };\n}\nfunction _(t, e) {\n  const s = m(y(b(t))),\n    n = [];\n  let o = [0, 0],\n    a = [0, 0];\n  for (const {\n    key: t,\n    data: h\n  } of s) switch (t) {\n    case \"M\":\n      a = [h[0], h[1]], o = [h[0], h[1]];\n      break;\n    case \"L\":\n      n.push(...$(a[0], a[1], h[0], h[1], e)), a = [h[0], h[1]];\n      break;\n    case \"C\":\n      {\n        const [t, s, o, r, i, c] = h;\n        n.push(...Z(t, s, o, r, i, c, a, e)), a = [i, c];\n        break;\n      }\n    case \"Z\":\n      n.push(...$(a[0], a[1], o[0], o[1], e)), a = [o[0], o[1]];\n  }\n  return {\n    type: \"path\",\n    ops: n\n  };\n}\nfunction I(t, e) {\n  const s = [];\n  for (const n of t) if (n.length) {\n    const t = e.maxRandomnessOffset || 0,\n      o = n.length;\n    if (o > 2) {\n      s.push({\n        op: \"move\",\n        data: [n[0][0] + G(t, e), n[0][1] + G(t, e)]\n      });\n      for (let a = 1; a < o; a++) s.push({\n        op: \"lineTo\",\n        data: [n[a][0] + G(t, e), n[a][1] + G(t, e)]\n      });\n    }\n  }\n  return {\n    type: \"fillPath\",\n    ops: s\n  };\n}\nfunction C(t, e) {\n  return function (t, e) {\n    let s = t.fillStyle || \"hachure\";\n    if (!u[s]) switch (s) {\n      case \"zigzag\":\n        u[s] || (u[s] = new h(e));\n        break;\n      case \"cross-hatch\":\n        u[s] || (u[s] = new r(e));\n        break;\n      case \"dots\":\n        u[s] || (u[s] = new i(e));\n        break;\n      case \"dashed\":\n        u[s] || (u[s] = new c(e));\n        break;\n      case \"zigzag-line\":\n        u[s] || (u[s] = new l(e));\n        break;\n      default:\n        s = \"hachure\", u[s] || (u[s] = new o(e));\n    }\n    return u[s];\n  }(e, P).fillPolygons(t, e);\n}\nfunction z(t) {\n  const e = Object.assign({}, t);\n  return e.randomizer = void 0, t.seed && (e.seed = t.seed + 1), e;\n}\nfunction W(t) {\n  return t.randomizer || (t.randomizer = new p(t.seed || 0)), t.randomizer.next();\n}\nfunction E(t, e, s, n = 1) {\n  return s.roughness * n * (W(s) * (e - t) + t);\n}\nfunction G(t, e, s = 1) {\n  return E(-t, t, e, s);\n}\nfunction $(t, e, s, n, o, a = !1) {\n  const h = a ? o.disableMultiStrokeFill : o.disableMultiStroke,\n    r = R(t, e, s, n, o, !0, !1);\n  if (h) return r;\n  const i = R(t, e, s, n, o, !0, !0);\n  return r.concat(i);\n}\nfunction R(t, e, s, n, o, a, h) {\n  const r = Math.pow(t - s, 2) + Math.pow(e - n, 2),\n    i = Math.sqrt(r);\n  let c = 1;\n  c = i < 200 ? 1 : i > 500 ? .4 : -.0016668 * i + 1.233334;\n  let l = o.maxRandomnessOffset || 0;\n  l * l * 100 > r && (l = i / 10);\n  const u = l / 2,\n    p = .2 + .2 * W(o);\n  let f = o.bowing * o.maxRandomnessOffset * (n - e) / 200,\n    d = o.bowing * o.maxRandomnessOffset * (t - s) / 200;\n  f = G(f, o, c), d = G(d, o, c);\n  const g = [],\n    M = () => G(u, o, c),\n    k = () => G(l, o, c),\n    b = o.preserveVertices;\n  return a && (h ? g.push({\n    op: \"move\",\n    data: [t + (b ? 0 : M()), e + (b ? 0 : M())]\n  }) : g.push({\n    op: \"move\",\n    data: [t + (b ? 0 : G(l, o, c)), e + (b ? 0 : G(l, o, c))]\n  })), h ? g.push({\n    op: \"bcurveTo\",\n    data: [f + t + (s - t) * p + M(), d + e + (n - e) * p + M(), f + t + 2 * (s - t) * p + M(), d + e + 2 * (n - e) * p + M(), s + (b ? 0 : M()), n + (b ? 0 : M())]\n  }) : g.push({\n    op: \"bcurveTo\",\n    data: [f + t + (s - t) * p + k(), d + e + (n - e) * p + k(), f + t + 2 * (s - t) * p + k(), d + e + 2 * (n - e) * p + k(), s + (b ? 0 : k()), n + (b ? 0 : k())]\n  }), g;\n}\nfunction j(t, e, s) {\n  if (!t.length) return [];\n  const n = [];\n  n.push([t[0][0] + G(e, s), t[0][1] + G(e, s)]), n.push([t[0][0] + G(e, s), t[0][1] + G(e, s)]);\n  for (let o = 1; o < t.length; o++) n.push([t[o][0] + G(e, s), t[o][1] + G(e, s)]), o === t.length - 1 && n.push([t[o][0] + G(e, s), t[o][1] + G(e, s)]);\n  return q(n, null, s);\n}\nfunction q(t, e, s) {\n  const n = t.length,\n    o = [];\n  if (n > 3) {\n    const a = [],\n      h = 1 - s.curveTightness;\n    o.push({\n      op: \"move\",\n      data: [t[1][0], t[1][1]]\n    });\n    for (let e = 1; e + 2 < n; e++) {\n      const s = t[e];\n      a[0] = [s[0], s[1]], a[1] = [s[0] + (h * t[e + 1][0] - h * t[e - 1][0]) / 6, s[1] + (h * t[e + 1][1] - h * t[e - 1][1]) / 6], a[2] = [t[e + 1][0] + (h * t[e][0] - h * t[e + 2][0]) / 6, t[e + 1][1] + (h * t[e][1] - h * t[e + 2][1]) / 6], a[3] = [t[e + 1][0], t[e + 1][1]], o.push({\n        op: \"bcurveTo\",\n        data: [a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1]]\n      });\n    }\n    if (e && 2 === e.length) {\n      const t = s.maxRandomnessOffset;\n      o.push({\n        op: \"lineTo\",\n        data: [e[0] + G(t, s), e[1] + G(t, s)]\n      });\n    }\n  } else 3 === n ? (o.push({\n    op: \"move\",\n    data: [t[1][0], t[1][1]]\n  }), o.push({\n    op: \"bcurveTo\",\n    data: [t[1][0], t[1][1], t[2][0], t[2][1], t[2][0], t[2][1]]\n  })) : 2 === n && o.push(...R(t[0][0], t[0][1], t[1][0], t[1][1], s, !0, !0));\n  return o;\n}\nfunction F(t, e, s, n, o, a, h, r) {\n  const i = [],\n    c = [];\n  if (0 === r.roughness) {\n    t /= 4, c.push([e + n * Math.cos(-t), s + o * Math.sin(-t)]);\n    for (let a = 0; a <= 2 * Math.PI; a += t) {\n      const t = [e + n * Math.cos(a), s + o * Math.sin(a)];\n      i.push(t), c.push(t);\n    }\n    c.push([e + n * Math.cos(0), s + o * Math.sin(0)]), c.push([e + n * Math.cos(t), s + o * Math.sin(t)]);\n  } else {\n    const l = G(.5, r) - Math.PI / 2;\n    c.push([G(a, r) + e + .9 * n * Math.cos(l - t), G(a, r) + s + .9 * o * Math.sin(l - t)]);\n    const u = 2 * Math.PI + l - .01;\n    for (let h = l; h < u; h += t) {\n      const t = [G(a, r) + e + n * Math.cos(h), G(a, r) + s + o * Math.sin(h)];\n      i.push(t), c.push(t);\n    }\n    c.push([G(a, r) + e + n * Math.cos(l + 2 * Math.PI + .5 * h), G(a, r) + s + o * Math.sin(l + 2 * Math.PI + .5 * h)]), c.push([G(a, r) + e + .98 * n * Math.cos(l + h), G(a, r) + s + .98 * o * Math.sin(l + h)]), c.push([G(a, r) + e + .9 * n * Math.cos(l + .5 * h), G(a, r) + s + .9 * o * Math.sin(l + .5 * h)]);\n  }\n  return [c, i];\n}\nfunction V(t, e, s, n, o, a, h, r, i) {\n  const c = a + G(.1, i),\n    l = [];\n  l.push([G(r, i) + e + .9 * n * Math.cos(c - t), G(r, i) + s + .9 * o * Math.sin(c - t)]);\n  for (let a = c; a <= h; a += t) l.push([G(r, i) + e + n * Math.cos(a), G(r, i) + s + o * Math.sin(a)]);\n  return l.push([e + n * Math.cos(h), s + o * Math.sin(h)]), l.push([e + n * Math.cos(h), s + o * Math.sin(h)]), q(l, null, i);\n}\nfunction Z(t, e, s, n, o, a, h, r) {\n  const i = [],\n    c = [r.maxRandomnessOffset || 1, (r.maxRandomnessOffset || 1) + .3];\n  let l = [0, 0];\n  const u = r.disableMultiStroke ? 1 : 2,\n    p = r.preserveVertices;\n  for (let f = 0; f < u; f++) 0 === f ? i.push({\n    op: \"move\",\n    data: [h[0], h[1]]\n  }) : i.push({\n    op: \"move\",\n    data: [h[0] + (p ? 0 : G(c[0], r)), h[1] + (p ? 0 : G(c[0], r))]\n  }), l = p ? [o, a] : [o + G(c[f], r), a + G(c[f], r)], i.push({\n    op: \"bcurveTo\",\n    data: [t + G(c[f], r), e + G(c[f], r), s + G(c[f], r), n + G(c[f], r), l[0], l[1]]\n  });\n  return i;\n}\nfunction Q(t) {\n  return [...t];\n}\nfunction H(t, e = 0) {\n  const s = t.length;\n  if (s < 3) throw new Error(\"A curve must have at least three points.\");\n  const n = [];\n  if (3 === s) n.push(Q(t[0]), Q(t[1]), Q(t[2]), Q(t[2]));else {\n    const s = [];\n    s.push(t[0], t[0]);\n    for (let e = 1; e < t.length; e++) s.push(t[e]), e === t.length - 1 && s.push(t[e]);\n    const o = [],\n      a = 1 - e;\n    n.push(Q(s[0]));\n    for (let t = 1; t + 2 < s.length; t++) {\n      const e = s[t];\n      o[0] = [e[0], e[1]], o[1] = [e[0] + (a * s[t + 1][0] - a * s[t - 1][0]) / 6, e[1] + (a * s[t + 1][1] - a * s[t - 1][1]) / 6], o[2] = [s[t + 1][0] + (a * s[t][0] - a * s[t + 2][0]) / 6, s[t + 1][1] + (a * s[t][1] - a * s[t + 2][1]) / 6], o[3] = [s[t + 1][0], s[t + 1][1]], n.push(o[1], o[2], o[3]);\n    }\n  }\n  return n;\n}\nfunction N(t, e) {\n  return Math.pow(t[0] - e[0], 2) + Math.pow(t[1] - e[1], 2);\n}\nfunction B(t, e, s) {\n  const n = N(e, s);\n  if (0 === n) return N(t, e);\n  let o = ((t[0] - e[0]) * (s[0] - e[0]) + (t[1] - e[1]) * (s[1] - e[1])) / n;\n  return o = Math.max(0, Math.min(1, o)), N(t, J(e, s, o));\n}\nfunction J(t, e, s) {\n  return [t[0] + (e[0] - t[0]) * s, t[1] + (e[1] - t[1]) * s];\n}\nfunction K(t, e, s, n) {\n  const o = n || [];\n  if (function (t, e) {\n    const s = t[e + 0],\n      n = t[e + 1],\n      o = t[e + 2],\n      a = t[e + 3];\n    let h = 3 * n[0] - 2 * s[0] - a[0];\n    h *= h;\n    let r = 3 * n[1] - 2 * s[1] - a[1];\n    r *= r;\n    let i = 3 * o[0] - 2 * a[0] - s[0];\n    i *= i;\n    let c = 3 * o[1] - 2 * a[1] - s[1];\n    return c *= c, h < i && (h = i), r < c && (r = c), h + r;\n  }(t, e) < s) {\n    const s = t[e + 0];\n    if (o.length) {\n      (a = o[o.length - 1], h = s, Math.sqrt(N(a, h))) > 1 && o.push(s);\n    } else o.push(s);\n    o.push(t[e + 3]);\n  } else {\n    const n = .5,\n      a = t[e + 0],\n      h = t[e + 1],\n      r = t[e + 2],\n      i = t[e + 3],\n      c = J(a, h, n),\n      l = J(h, r, n),\n      u = J(r, i, n),\n      p = J(c, l, n),\n      f = J(l, u, n),\n      d = J(p, f, n);\n    K([a, c, p, d], 0, s, o), K([d, f, u, i], 0, s, o);\n  }\n  var a, h;\n  return o;\n}\nfunction U(t, e) {\n  return X(t, 0, t.length, e);\n}\nfunction X(t, e, s, n, o) {\n  const a = o || [],\n    h = t[e],\n    r = t[s - 1];\n  let i = 0,\n    c = 1;\n  for (let n = e + 1; n < s - 1; ++n) {\n    const e = B(t[n], h, r);\n    e > i && (i = e, c = n);\n  }\n  return Math.sqrt(i) > n ? (X(t, e, c + 1, n, a), X(t, c, s, n, a)) : (a.length || a.push(h), a.push(r)), a;\n}\nfunction Y(t, e = .15, s) {\n  const n = [],\n    o = (t.length - 1) / 3;\n  for (let s = 0; s < o; s++) {\n    K(t, 3 * s, e, n);\n  }\n  return s && s > 0 ? X(n, 0, n.length, s) : n;\n}\nconst tt = \"none\";\nclass et {\n  constructor(t) {\n    this.defaultOptions = {\n      maxRandomnessOffset: 2,\n      roughness: 1,\n      bowing: 1,\n      stroke: \"#000\",\n      strokeWidth: 1,\n      curveTightness: 0,\n      curveFitting: .95,\n      curveStepCount: 9,\n      fillStyle: \"hachure\",\n      fillWeight: -1,\n      hachureAngle: -41,\n      hachureGap: -1,\n      dashOffset: -1,\n      dashGap: -1,\n      zigzagOffset: -1,\n      seed: 0,\n      disableMultiStroke: !1,\n      disableMultiStrokeFill: !1,\n      preserveVertices: !1,\n      fillShapeRoughnessGain: .8\n    }, this.config = t || {}, this.config.options && (this.defaultOptions = this._o(this.config.options));\n  }\n  static newSeed() {\n    return Math.floor(Math.random() * 2 ** 31);\n  }\n  _o(t) {\n    return t ? Object.assign({}, this.defaultOptions, t) : this.defaultOptions;\n  }\n  _d(t, e, s) {\n    return {\n      shape: t,\n      sets: e || [],\n      options: s || this.defaultOptions\n    };\n  }\n  line(t, e, s, n, o) {\n    const a = this._o(o);\n    return this._d(\"line\", [v(t, e, s, n, a)], a);\n  }\n  rectangle(t, e, s, n, o) {\n    const a = this._o(o),\n      h = [],\n      r = O(t, e, s, n, a);\n    if (a.fill) {\n      const o = [[t, e], [t + s, e], [t + s, e + n], [t, e + n]];\n      \"solid\" === a.fillStyle ? h.push(I([o], a)) : h.push(C([o], a));\n    }\n    return a.stroke !== tt && h.push(r), this._d(\"rectangle\", h, a);\n  }\n  ellipse(t, e, s, n, o) {\n    const a = this._o(o),\n      h = [],\n      r = T(s, n, a),\n      i = D(t, e, a, r);\n    if (a.fill) if (\"solid\" === a.fillStyle) {\n      const s = D(t, e, a, r).opset;\n      s.type = \"fillPath\", h.push(s);\n    } else h.push(C([i.estimatedPoints], a));\n    return a.stroke !== tt && h.push(i.opset), this._d(\"ellipse\", h, a);\n  }\n  circle(t, e, s, n) {\n    const o = this.ellipse(t, e, s, s, n);\n    return o.shape = \"circle\", o;\n  }\n  linearPath(t, e) {\n    const s = this._o(e);\n    return this._d(\"linearPath\", [S(t, !1, s)], s);\n  }\n  arc(t, e, s, n, o, a, h = !1, r) {\n    const i = this._o(r),\n      c = [],\n      l = A(t, e, s, n, o, a, h, !0, i);\n    if (h && i.fill) if (\"solid\" === i.fillStyle) {\n      const h = Object.assign({}, i);\n      h.disableMultiStroke = !0;\n      const r = A(t, e, s, n, o, a, !0, !1, h);\n      r.type = \"fillPath\", c.push(r);\n    } else c.push(function (t, e, s, n, o, a, h) {\n      const r = t,\n        i = e;\n      let c = Math.abs(s / 2),\n        l = Math.abs(n / 2);\n      c += G(.01 * c, h), l += G(.01 * l, h);\n      let u = o,\n        p = a;\n      for (; u < 0;) u += 2 * Math.PI, p += 2 * Math.PI;\n      p - u > 2 * Math.PI && (u = 0, p = 2 * Math.PI);\n      const f = (p - u) / h.curveStepCount,\n        d = [];\n      for (let t = u; t <= p; t += f) d.push([r + c * Math.cos(t), i + l * Math.sin(t)]);\n      return d.push([r + c * Math.cos(p), i + l * Math.sin(p)]), d.push([r, i]), C([d], h);\n    }(t, e, s, n, o, a, i));\n    return i.stroke !== tt && c.push(l), this._d(\"arc\", c, i);\n  }\n  curve(t, e) {\n    const s = this._o(e),\n      n = [],\n      o = L(t, s);\n    if (s.fill && s.fill !== tt) if (\"solid\" === s.fillStyle) {\n      const e = L(t, Object.assign(Object.assign({}, s), {\n        disableMultiStroke: !0,\n        roughness: s.roughness ? s.roughness + s.fillShapeRoughnessGain : 0\n      }));\n      n.push({\n        type: \"fillPath\",\n        ops: this._mergedShape(e.ops)\n      });\n    } else {\n      const e = [],\n        o = t;\n      if (o.length) {\n        const t = \"number\" == typeof o[0][0] ? [o] : o;\n        for (const n of t) n.length < 3 ? e.push(...n) : 3 === n.length ? e.push(...Y(H([n[0], n[0], n[1], n[2]]), 10, (1 + s.roughness) / 2)) : e.push(...Y(H(n), 10, (1 + s.roughness) / 2));\n      }\n      e.length && n.push(C([e], s));\n    }\n    return s.stroke !== tt && n.push(o), this._d(\"curve\", n, s);\n  }\n  polygon(t, e) {\n    const s = this._o(e),\n      n = [],\n      o = S(t, !0, s);\n    return s.fill && (\"solid\" === s.fillStyle ? n.push(I([t], s)) : n.push(C([t], s))), s.stroke !== tt && n.push(o), this._d(\"polygon\", n, s);\n  }\n  path(t, e) {\n    const s = this._o(e),\n      n = [];\n    if (!t) return this._d(\"path\", n, s);\n    t = (t || \"\").replace(/\\n/g, \" \").replace(/(-\\s)/g, \"-\").replace(\"/(ss)/g\", \" \");\n    const o = s.fill && \"transparent\" !== s.fill && s.fill !== tt,\n      a = s.stroke !== tt,\n      h = !!(s.simplification && s.simplification < 1),\n      r = function (t, e, s) {\n        const n = m(y(b(t))),\n          o = [];\n        let a = [],\n          h = [0, 0],\n          r = [];\n        const i = () => {\n            r.length >= 4 && a.push(...Y(r, e)), r = [];\n          },\n          c = () => {\n            i(), a.length && (o.push(a), a = []);\n          };\n        for (const {\n          key: t,\n          data: e\n        } of n) switch (t) {\n          case \"M\":\n            c(), h = [e[0], e[1]], a.push(h);\n            break;\n          case \"L\":\n            i(), a.push([e[0], e[1]]);\n            break;\n          case \"C\":\n            if (!r.length) {\n              const t = a.length ? a[a.length - 1] : h;\n              r.push([t[0], t[1]]);\n            }\n            r.push([e[0], e[1]]), r.push([e[2], e[3]]), r.push([e[4], e[5]]);\n            break;\n          case \"Z\":\n            i(), a.push([h[0], h[1]]);\n        }\n        if (c(), !s) return o;\n        const l = [];\n        for (const t of o) {\n          const e = U(t, s);\n          e.length && l.push(e);\n        }\n        return l;\n      }(t, 1, h ? 4 - 4 * (s.simplification || 1) : (1 + s.roughness) / 2),\n      i = _(t, s);\n    if (o) if (\"solid\" === s.fillStyle) {\n      if (1 === r.length) {\n        const e = _(t, Object.assign(Object.assign({}, s), {\n          disableMultiStroke: !0,\n          roughness: s.roughness ? s.roughness + s.fillShapeRoughnessGain : 0\n        }));\n        n.push({\n          type: \"fillPath\",\n          ops: this._mergedShape(e.ops)\n        });\n      } else n.push(I(r, s));\n    } else n.push(C(r, s));\n    return a && (h ? r.forEach(t => {\n      n.push(S(t, !1, s));\n    }) : n.push(i)), this._d(\"path\", n, s);\n  }\n  opsToPath(t, e) {\n    let s = \"\";\n    for (const n of t.ops) {\n      const t = \"number\" == typeof e && e >= 0 ? n.data.map(t => +t.toFixed(e)) : n.data;\n      switch (n.op) {\n        case \"move\":\n          s += `M${t[0]} ${t[1]} `;\n          break;\n        case \"bcurveTo\":\n          s += `C${t[0]} ${t[1]}, ${t[2]} ${t[3]}, ${t[4]} ${t[5]} `;\n          break;\n        case \"lineTo\":\n          s += `L${t[0]} ${t[1]} `;\n      }\n    }\n    return s.trim();\n  }\n  toPaths(t) {\n    const e = t.sets || [],\n      s = t.options || this.defaultOptions,\n      n = [];\n    for (const t of e) {\n      let e = null;\n      switch (t.type) {\n        case \"path\":\n          e = {\n            d: this.opsToPath(t),\n            stroke: s.stroke,\n            strokeWidth: s.strokeWidth,\n            fill: tt\n          };\n          break;\n        case \"fillPath\":\n          e = {\n            d: this.opsToPath(t),\n            stroke: tt,\n            strokeWidth: 0,\n            fill: s.fill || tt\n          };\n          break;\n        case \"fillSketch\":\n          e = this.fillSketch(t, s);\n      }\n      e && n.push(e);\n    }\n    return n;\n  }\n  fillSketch(t, e) {\n    let s = e.fillWeight;\n    return s < 0 && (s = e.strokeWidth / 2), {\n      d: this.opsToPath(t),\n      stroke: e.fill || tt,\n      strokeWidth: s,\n      fill: tt\n    };\n  }\n  _mergedShape(t) {\n    return t.filter((t, e) => 0 === e || \"move\" !== t.op);\n  }\n}\nclass st {\n  constructor(t, e) {\n    this.canvas = t, this.ctx = this.canvas.getContext(\"2d\"), this.gen = new et(e);\n  }\n  draw(t) {\n    const e = t.sets || [],\n      s = t.options || this.getDefaultOptions(),\n      n = this.ctx,\n      o = t.options.fixedDecimalPlaceDigits;\n    for (const a of e) switch (a.type) {\n      case \"path\":\n        n.save(), n.strokeStyle = \"none\" === s.stroke ? \"transparent\" : s.stroke, n.lineWidth = s.strokeWidth, s.strokeLineDash && n.setLineDash(s.strokeLineDash), s.strokeLineDashOffset && (n.lineDashOffset = s.strokeLineDashOffset), this._drawToContext(n, a, o), n.restore();\n        break;\n      case \"fillPath\":\n        {\n          n.save(), n.fillStyle = s.fill || \"\";\n          const e = \"curve\" === t.shape || \"polygon\" === t.shape || \"path\" === t.shape ? \"evenodd\" : \"nonzero\";\n          this._drawToContext(n, a, o, e), n.restore();\n          break;\n        }\n      case \"fillSketch\":\n        this.fillSketch(n, a, s);\n    }\n  }\n  fillSketch(t, e, s) {\n    let n = s.fillWeight;\n    n < 0 && (n = s.strokeWidth / 2), t.save(), s.fillLineDash && t.setLineDash(s.fillLineDash), s.fillLineDashOffset && (t.lineDashOffset = s.fillLineDashOffset), t.strokeStyle = s.fill || \"\", t.lineWidth = n, this._drawToContext(t, e, s.fixedDecimalPlaceDigits), t.restore();\n  }\n  _drawToContext(t, e, s, n = \"nonzero\") {\n    t.beginPath();\n    for (const n of e.ops) {\n      const e = \"number\" == typeof s && s >= 0 ? n.data.map(t => +t.toFixed(s)) : n.data;\n      switch (n.op) {\n        case \"move\":\n          t.moveTo(e[0], e[1]);\n          break;\n        case \"bcurveTo\":\n          t.bezierCurveTo(e[0], e[1], e[2], e[3], e[4], e[5]);\n          break;\n        case \"lineTo\":\n          t.lineTo(e[0], e[1]);\n      }\n    }\n    \"fillPath\" === e.type ? t.fill(n) : t.stroke();\n  }\n  get generator() {\n    return this.gen;\n  }\n  getDefaultOptions() {\n    return this.gen.defaultOptions;\n  }\n  line(t, e, s, n, o) {\n    const a = this.gen.line(t, e, s, n, o);\n    return this.draw(a), a;\n  }\n  rectangle(t, e, s, n, o) {\n    const a = this.gen.rectangle(t, e, s, n, o);\n    return this.draw(a), a;\n  }\n  ellipse(t, e, s, n, o) {\n    const a = this.gen.ellipse(t, e, s, n, o);\n    return this.draw(a), a;\n  }\n  circle(t, e, s, n) {\n    const o = this.gen.circle(t, e, s, n);\n    return this.draw(o), o;\n  }\n  linearPath(t, e) {\n    const s = this.gen.linearPath(t, e);\n    return this.draw(s), s;\n  }\n  polygon(t, e) {\n    const s = this.gen.polygon(t, e);\n    return this.draw(s), s;\n  }\n  arc(t, e, s, n, o, a, h = !1, r) {\n    const i = this.gen.arc(t, e, s, n, o, a, h, r);\n    return this.draw(i), i;\n  }\n  curve(t, e) {\n    const s = this.gen.curve(t, e);\n    return this.draw(s), s;\n  }\n  path(t, e) {\n    const s = this.gen.path(t, e);\n    return this.draw(s), s;\n  }\n}\nconst nt = \"http://www.w3.org/2000/svg\";\nclass ot {\n  constructor(t, e) {\n    this.svg = t, this.gen = new et(e);\n  }\n  draw(t) {\n    const e = t.sets || [],\n      s = t.options || this.getDefaultOptions(),\n      n = this.svg.ownerDocument || window.document,\n      o = n.createElementNS(nt, \"g\"),\n      a = t.options.fixedDecimalPlaceDigits;\n    for (const h of e) {\n      let e = null;\n      switch (h.type) {\n        case \"path\":\n          e = n.createElementNS(nt, \"path\"), e.setAttribute(\"d\", this.opsToPath(h, a)), e.setAttribute(\"stroke\", s.stroke), e.setAttribute(\"stroke-width\", s.strokeWidth + \"\"), e.setAttribute(\"fill\", \"none\"), s.strokeLineDash && e.setAttribute(\"stroke-dasharray\", s.strokeLineDash.join(\" \").trim()), s.strokeLineDashOffset && e.setAttribute(\"stroke-dashoffset\", `${s.strokeLineDashOffset}`);\n          break;\n        case \"fillPath\":\n          e = n.createElementNS(nt, \"path\"), e.setAttribute(\"d\", this.opsToPath(h, a)), e.setAttribute(\"stroke\", \"none\"), e.setAttribute(\"stroke-width\", \"0\"), e.setAttribute(\"fill\", s.fill || \"\"), \"curve\" !== t.shape && \"polygon\" !== t.shape || e.setAttribute(\"fill-rule\", \"evenodd\");\n          break;\n        case \"fillSketch\":\n          e = this.fillSketch(n, h, s);\n      }\n      e && o.appendChild(e);\n    }\n    return o;\n  }\n  fillSketch(t, e, s) {\n    let n = s.fillWeight;\n    n < 0 && (n = s.strokeWidth / 2);\n    const o = t.createElementNS(nt, \"path\");\n    return o.setAttribute(\"d\", this.opsToPath(e, s.fixedDecimalPlaceDigits)), o.setAttribute(\"stroke\", s.fill || \"\"), o.setAttribute(\"stroke-width\", n + \"\"), o.setAttribute(\"fill\", \"none\"), s.fillLineDash && o.setAttribute(\"stroke-dasharray\", s.fillLineDash.join(\" \").trim()), s.fillLineDashOffset && o.setAttribute(\"stroke-dashoffset\", `${s.fillLineDashOffset}`), o;\n  }\n  get generator() {\n    return this.gen;\n  }\n  getDefaultOptions() {\n    return this.gen.defaultOptions;\n  }\n  opsToPath(t, e) {\n    return this.gen.opsToPath(t, e);\n  }\n  line(t, e, s, n, o) {\n    const a = this.gen.line(t, e, s, n, o);\n    return this.draw(a);\n  }\n  rectangle(t, e, s, n, o) {\n    const a = this.gen.rectangle(t, e, s, n, o);\n    return this.draw(a);\n  }\n  ellipse(t, e, s, n, o) {\n    const a = this.gen.ellipse(t, e, s, n, o);\n    return this.draw(a);\n  }\n  circle(t, e, s, n) {\n    const o = this.gen.circle(t, e, s, n);\n    return this.draw(o);\n  }\n  linearPath(t, e) {\n    const s = this.gen.linearPath(t, e);\n    return this.draw(s);\n  }\n  polygon(t, e) {\n    const s = this.gen.polygon(t, e);\n    return this.draw(s);\n  }\n  arc(t, e, s, n, o, a, h = !1, r) {\n    const i = this.gen.arc(t, e, s, n, o, a, h, r);\n    return this.draw(i);\n  }\n  curve(t, e) {\n    const s = this.gen.curve(t, e);\n    return this.draw(s);\n  }\n  path(t, e) {\n    const s = this.gen.path(t, e);\n    return this.draw(s);\n  }\n}\nvar at = {\n  canvas: (t, e) => new st(t, e),\n  svg: (t, e) => new ot(t, e),\n  generator: t => new et(t),\n  newSeed: () => et.newSeed()\n};\nexport { at as default };","map":{"version":3,"names":["t","e","s","length","n","o","a","Math","PI","h","cos","r","sin","max","i","c","l","push","min","ymin","ymax","x","islope","sort","abs","splice","forEach","edge","filter","round","hachureAngle","hachureGap","strokeWidth","roughness","randomizer","next","random","constructor","helper","fillPolygons","_fillPolygons","type","ops","renderLines","doubleLineOps","sqrt","pow","Object","assign","concat","dotsOnLines","fillWeight","ceil","u","p","ellipse","dashedLine","dashOffset","dashGap","floor","atan","zigzagOffset","zigzagLines","seed","imul","f","d","g","M","A","C","H","L","m","Q","q","S","T","V","v","Z","z","k","b","Array","match","substr","RegExp","$1","text","parseFloat","Error","key","data","y","map","w","asin","toFixed","P","tan","O","D","randOffset","G","randOffsetWithRange","E","opset","$","j","disableMultiStroke","op","curveStepCount","curveFitting","increment","rx","ry","F","estimatedPoints","_","I","maxRandomnessOffset","fillStyle","W","disableMultiStrokeFill","R","bowing","preserveVertices","curveTightness","N","B","J","K","U","X","Y","tt","et","defaultOptions","stroke","fillShapeRoughnessGain","config","options","_o","newSeed","_d","shape","sets","line","rectangle","fill","circle","linearPath","arc","curve","_mergedShape","polygon","path","replace","simplification","opsToPath","trim","toPaths","fillSketch","st","canvas","ctx","getContext","gen","draw","getDefaultOptions","fixedDecimalPlaceDigits","save","strokeStyle","lineWidth","strokeLineDash","setLineDash","strokeLineDashOffset","lineDashOffset","_drawToContext","restore","fillLineDash","fillLineDashOffset","beginPath","moveTo","bezierCurveTo","lineTo","generator","nt","ot","svg","ownerDocument","window","document","createElementNS","setAttribute","join","appendChild","at","default"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/roughjs/bundled/rough.esm.js"],"sourcesContent":["function t(t,e,s){if(t&&t.length){const[n,o]=e,a=Math.PI/180*s,h=Math.cos(a),r=Math.sin(a);for(const e of t){const[t,s]=e;e[0]=(t-n)*h-(s-o)*r+n,e[1]=(t-n)*r+(s-o)*h+o}}}function e(t,e){return t[0]===e[0]&&t[1]===e[1]}function s(s,n,o,a=1){const h=o,r=Math.max(n,.1),i=s[0]&&s[0][0]&&\"number\"==typeof s[0][0]?[s]:s,c=[0,0];if(h)for(const e of i)t(e,c,h);const l=function(t,s,n){const o=[];for(const s of t){const t=[...s];e(t[0],t[t.length-1])||t.push([t[0][0],t[0][1]]),t.length>2&&o.push(t)}const a=[];s=Math.max(s,.1);const h=[];for(const t of o)for(let e=0;e<t.length-1;e++){const s=t[e],n=t[e+1];if(s[1]!==n[1]){const t=Math.min(s[1],n[1]);h.push({ymin:t,ymax:Math.max(s[1],n[1]),x:t===s[1]?s[0]:n[0],islope:(n[0]-s[0])/(n[1]-s[1])})}}if(h.sort(((t,e)=>t.ymin<e.ymin?-1:t.ymin>e.ymin?1:t.x<e.x?-1:t.x>e.x?1:t.ymax===e.ymax?0:(t.ymax-e.ymax)/Math.abs(t.ymax-e.ymax))),!h.length)return a;let r=[],i=h[0].ymin,c=0;for(;r.length||h.length;){if(h.length){let t=-1;for(let e=0;e<h.length&&!(h[e].ymin>i);e++)t=e;h.splice(0,t+1).forEach((t=>{r.push({s:i,edge:t})}))}if(r=r.filter((t=>!(t.edge.ymax<=i))),r.sort(((t,e)=>t.edge.x===e.edge.x?0:(t.edge.x-e.edge.x)/Math.abs(t.edge.x-e.edge.x))),(1!==n||c%s==0)&&r.length>1)for(let t=0;t<r.length;t+=2){const e=t+1;if(e>=r.length)break;const s=r[t].edge,n=r[e].edge;a.push([[Math.round(s.x),i],[Math.round(n.x),i]])}i+=n,r.forEach((t=>{t.edge.x=t.edge.x+n*t.edge.islope})),c++}return a}(i,r,a);if(h){for(const e of i)t(e,c,-h);!function(e,s,n){const o=[];e.forEach((t=>o.push(...t))),t(o,s,n)}(l,c,-h)}return l}function n(t,e){var n;const o=e.hachureAngle+90;let a=e.hachureGap;a<0&&(a=4*e.strokeWidth),a=Math.round(Math.max(a,.1));let h=1;return e.roughness>=1&&((null===(n=e.randomizer)||void 0===n?void 0:n.next())||Math.random())>.7&&(h=a),s(t,a,o,h||1)}class o{constructor(t){this.helper=t}fillPolygons(t,e){return this._fillPolygons(t,e)}_fillPolygons(t,e){const s=n(t,e);return{type:\"fillSketch\",ops:this.renderLines(s,e)}}renderLines(t,e){const s=[];for(const n of t)s.push(...this.helper.doubleLineOps(n[0][0],n[0][1],n[1][0],n[1][1],e));return s}}function a(t){const e=t[0],s=t[1];return Math.sqrt(Math.pow(e[0]-s[0],2)+Math.pow(e[1]-s[1],2))}class h extends o{fillPolygons(t,e){let s=e.hachureGap;s<0&&(s=4*e.strokeWidth),s=Math.max(s,.1);const o=n(t,Object.assign({},e,{hachureGap:s})),h=Math.PI/180*e.hachureAngle,r=[],i=.5*s*Math.cos(h),c=.5*s*Math.sin(h);for(const[t,e]of o)a([t,e])&&r.push([[t[0]-i,t[1]+c],[...e]],[[t[0]+i,t[1]-c],[...e]]);return{type:\"fillSketch\",ops:this.renderLines(r,e)}}}class r extends o{fillPolygons(t,e){const s=this._fillPolygons(t,e),n=Object.assign({},e,{hachureAngle:e.hachureAngle+90}),o=this._fillPolygons(t,n);return s.ops=s.ops.concat(o.ops),s}}class i{constructor(t){this.helper=t}fillPolygons(t,e){const s=n(t,e=Object.assign({},e,{hachureAngle:0}));return this.dotsOnLines(s,e)}dotsOnLines(t,e){const s=[];let n=e.hachureGap;n<0&&(n=4*e.strokeWidth),n=Math.max(n,.1);let o=e.fillWeight;o<0&&(o=e.strokeWidth/2);const h=n/4;for(const r of t){const t=a(r),i=t/n,c=Math.ceil(i)-1,l=t-c*n,u=(r[0][0]+r[1][0])/2-n/4,p=Math.min(r[0][1],r[1][1]);for(let t=0;t<c;t++){const a=p+l+t*n,r=u-h+2*Math.random()*h,i=a-h+2*Math.random()*h,c=this.helper.ellipse(r,i,o,o,e);s.push(...c.ops)}}return{type:\"fillSketch\",ops:s}}}class c{constructor(t){this.helper=t}fillPolygons(t,e){const s=n(t,e);return{type:\"fillSketch\",ops:this.dashedLine(s,e)}}dashedLine(t,e){const s=e.dashOffset<0?e.hachureGap<0?4*e.strokeWidth:e.hachureGap:e.dashOffset,n=e.dashGap<0?e.hachureGap<0?4*e.strokeWidth:e.hachureGap:e.dashGap,o=[];return t.forEach((t=>{const h=a(t),r=Math.floor(h/(s+n)),i=(h+n-r*(s+n))/2;let c=t[0],l=t[1];c[0]>l[0]&&(c=t[1],l=t[0]);const u=Math.atan((l[1]-c[1])/(l[0]-c[0]));for(let t=0;t<r;t++){const a=t*(s+n),h=a+s,r=[c[0]+a*Math.cos(u)+i*Math.cos(u),c[1]+a*Math.sin(u)+i*Math.sin(u)],l=[c[0]+h*Math.cos(u)+i*Math.cos(u),c[1]+h*Math.sin(u)+i*Math.sin(u)];o.push(...this.helper.doubleLineOps(r[0],r[1],l[0],l[1],e))}})),o}}class l{constructor(t){this.helper=t}fillPolygons(t,e){const s=e.hachureGap<0?4*e.strokeWidth:e.hachureGap,o=e.zigzagOffset<0?s:e.zigzagOffset,a=n(t,e=Object.assign({},e,{hachureGap:s+o}));return{type:\"fillSketch\",ops:this.zigzagLines(a,o,e)}}zigzagLines(t,e,s){const n=[];return t.forEach((t=>{const o=a(t),h=Math.round(o/(2*e));let r=t[0],i=t[1];r[0]>i[0]&&(r=t[1],i=t[0]);const c=Math.atan((i[1]-r[1])/(i[0]-r[0]));for(let t=0;t<h;t++){const o=2*t*e,a=2*(t+1)*e,h=Math.sqrt(2*Math.pow(e,2)),i=[r[0]+o*Math.cos(c),r[1]+o*Math.sin(c)],l=[r[0]+a*Math.cos(c),r[1]+a*Math.sin(c)],u=[i[0]+h*Math.cos(c+Math.PI/4),i[1]+h*Math.sin(c+Math.PI/4)];n.push(...this.helper.doubleLineOps(i[0],i[1],u[0],u[1],s),...this.helper.doubleLineOps(u[0],u[1],l[0],l[1],s))}})),n}}const u={};class p{constructor(t){this.seed=t}next(){return this.seed?(2**31-1&(this.seed=Math.imul(48271,this.seed)))/2**31:Math.random()}}const f=0,d=1,g=2,M={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:2,t:2,V:1,v:1,Z:0,z:0};function k(t,e){return t.type===e}function b(t){const e=[],s=function(t){const e=new Array;for(;\"\"!==t;)if(t.match(/^([ \\t\\r\\n,]+)/))t=t.substr(RegExp.$1.length);else if(t.match(/^([aAcChHlLmMqQsStTvVzZ])/))e[e.length]={type:f,text:RegExp.$1},t=t.substr(RegExp.$1.length);else{if(!t.match(/^(([-+]?[0-9]+(\\.[0-9]*)?|[-+]?\\.[0-9]+)([eE][-+]?[0-9]+)?)/))return[];e[e.length]={type:d,text:`${parseFloat(RegExp.$1)}`},t=t.substr(RegExp.$1.length)}return e[e.length]={type:g,text:\"\"},e}(t);let n=\"BOD\",o=0,a=s[o];for(;!k(a,g);){let h=0;const r=[];if(\"BOD\"===n){if(\"M\"!==a.text&&\"m\"!==a.text)return b(\"M0,0\"+t);o++,h=M[a.text],n=a.text}else k(a,d)?h=M[n]:(o++,h=M[a.text],n=a.text);if(!(o+h<s.length))throw new Error(\"Path data ended short\");for(let t=o;t<o+h;t++){const e=s[t];if(!k(e,d))throw new Error(\"Param not a number: \"+n+\",\"+e.text);r[r.length]=+e.text}if(\"number\"!=typeof M[n])throw new Error(\"Bad segment: \"+n);{const t={key:n,data:r};e.push(t),o+=h,a=s[o],\"M\"===n&&(n=\"L\"),\"m\"===n&&(n=\"l\")}}return e}function y(t){let e=0,s=0,n=0,o=0;const a=[];for(const{key:h,data:r}of t)switch(h){case\"M\":a.push({key:\"M\",data:[...r]}),[e,s]=r,[n,o]=r;break;case\"m\":e+=r[0],s+=r[1],a.push({key:\"M\",data:[e,s]}),n=e,o=s;break;case\"L\":a.push({key:\"L\",data:[...r]}),[e,s]=r;break;case\"l\":e+=r[0],s+=r[1],a.push({key:\"L\",data:[e,s]});break;case\"C\":a.push({key:\"C\",data:[...r]}),e=r[4],s=r[5];break;case\"c\":{const t=r.map(((t,n)=>n%2?t+s:t+e));a.push({key:\"C\",data:t}),e=t[4],s=t[5];break}case\"Q\":a.push({key:\"Q\",data:[...r]}),e=r[2],s=r[3];break;case\"q\":{const t=r.map(((t,n)=>n%2?t+s:t+e));a.push({key:\"Q\",data:t}),e=t[2],s=t[3];break}case\"A\":a.push({key:\"A\",data:[...r]}),e=r[5],s=r[6];break;case\"a\":e+=r[5],s+=r[6],a.push({key:\"A\",data:[r[0],r[1],r[2],r[3],r[4],e,s]});break;case\"H\":a.push({key:\"H\",data:[...r]}),e=r[0];break;case\"h\":e+=r[0],a.push({key:\"H\",data:[e]});break;case\"V\":a.push({key:\"V\",data:[...r]}),s=r[0];break;case\"v\":s+=r[0],a.push({key:\"V\",data:[s]});break;case\"S\":a.push({key:\"S\",data:[...r]}),e=r[2],s=r[3];break;case\"s\":{const t=r.map(((t,n)=>n%2?t+s:t+e));a.push({key:\"S\",data:t}),e=t[2],s=t[3];break}case\"T\":a.push({key:\"T\",data:[...r]}),e=r[0],s=r[1];break;case\"t\":e+=r[0],s+=r[1],a.push({key:\"T\",data:[e,s]});break;case\"Z\":case\"z\":a.push({key:\"Z\",data:[]}),e=n,s=o}return a}function m(t){const e=[];let s=\"\",n=0,o=0,a=0,h=0,r=0,i=0;for(const{key:c,data:l}of t){switch(c){case\"M\":e.push({key:\"M\",data:[...l]}),[n,o]=l,[a,h]=l;break;case\"C\":e.push({key:\"C\",data:[...l]}),n=l[4],o=l[5],r=l[2],i=l[3];break;case\"L\":e.push({key:\"L\",data:[...l]}),[n,o]=l;break;case\"H\":n=l[0],e.push({key:\"L\",data:[n,o]});break;case\"V\":o=l[0],e.push({key:\"L\",data:[n,o]});break;case\"S\":{let t=0,a=0;\"C\"===s||\"S\"===s?(t=n+(n-r),a=o+(o-i)):(t=n,a=o),e.push({key:\"C\",data:[t,a,...l]}),r=l[0],i=l[1],n=l[2],o=l[3];break}case\"T\":{const[t,a]=l;let h=0,c=0;\"Q\"===s||\"T\"===s?(h=n+(n-r),c=o+(o-i)):(h=n,c=o);const u=n+2*(h-n)/3,p=o+2*(c-o)/3,f=t+2*(h-t)/3,d=a+2*(c-a)/3;e.push({key:\"C\",data:[u,p,f,d,t,a]}),r=h,i=c,n=t,o=a;break}case\"Q\":{const[t,s,a,h]=l,c=n+2*(t-n)/3,u=o+2*(s-o)/3,p=a+2*(t-a)/3,f=h+2*(s-h)/3;e.push({key:\"C\",data:[c,u,p,f,a,h]}),r=t,i=s,n=a,o=h;break}case\"A\":{const t=Math.abs(l[0]),s=Math.abs(l[1]),a=l[2],h=l[3],r=l[4],i=l[5],c=l[6];if(0===t||0===s)e.push({key:\"C\",data:[n,o,i,c,i,c]}),n=i,o=c;else if(n!==i||o!==c){x(n,o,i,c,t,s,a,h,r).forEach((function(t){e.push({key:\"C\",data:t})})),n=i,o=c}break}case\"Z\":e.push({key:\"Z\",data:[]}),n=a,o=h}s=c}return e}function w(t,e,s){return[t*Math.cos(s)-e*Math.sin(s),t*Math.sin(s)+e*Math.cos(s)]}function x(t,e,s,n,o,a,h,r,i,c){const l=(u=h,Math.PI*u/180);var u;let p=[],f=0,d=0,g=0,M=0;if(c)[f,d,g,M]=c;else{[t,e]=w(t,e,-l),[s,n]=w(s,n,-l);const h=(t-s)/2,c=(e-n)/2;let u=h*h/(o*o)+c*c/(a*a);u>1&&(u=Math.sqrt(u),o*=u,a*=u);const p=o*o,k=a*a,b=p*k-p*c*c-k*h*h,y=p*c*c+k*h*h,m=(r===i?-1:1)*Math.sqrt(Math.abs(b/y));g=m*o*c/a+(t+s)/2,M=m*-a*h/o+(e+n)/2,f=Math.asin(parseFloat(((e-M)/a).toFixed(9))),d=Math.asin(parseFloat(((n-M)/a).toFixed(9))),t<g&&(f=Math.PI-f),s<g&&(d=Math.PI-d),f<0&&(f=2*Math.PI+f),d<0&&(d=2*Math.PI+d),i&&f>d&&(f-=2*Math.PI),!i&&d>f&&(d-=2*Math.PI)}let k=d-f;if(Math.abs(k)>120*Math.PI/180){const t=d,e=s,r=n;d=i&&d>f?f+120*Math.PI/180*1:f+120*Math.PI/180*-1,p=x(s=g+o*Math.cos(d),n=M+a*Math.sin(d),e,r,o,a,h,0,i,[d,t,g,M])}k=d-f;const b=Math.cos(f),y=Math.sin(f),m=Math.cos(d),P=Math.sin(d),v=Math.tan(k/4),S=4/3*o*v,O=4/3*a*v,L=[t,e],T=[t+S*y,e-O*b],D=[s+S*P,n-O*m],A=[s,n];if(T[0]=2*L[0]-T[0],T[1]=2*L[1]-T[1],c)return[T,D,A].concat(p);{p=[T,D,A].concat(p);const t=[];for(let e=0;e<p.length;e+=3){const s=w(p[e][0],p[e][1],l),n=w(p[e+1][0],p[e+1][1],l),o=w(p[e+2][0],p[e+2][1],l);t.push([s[0],s[1],n[0],n[1],o[0],o[1]])}return t}}const P={randOffset:function(t,e){return G(t,e)},randOffsetWithRange:function(t,e,s){return E(t,e,s)},ellipse:function(t,e,s,n,o){const a=T(s,n,o);return D(t,e,o,a).opset},doubleLineOps:function(t,e,s,n,o){return $(t,e,s,n,o,!0)}};function v(t,e,s,n,o){return{type:\"path\",ops:$(t,e,s,n,o)}}function S(t,e,s){const n=(t||[]).length;if(n>2){const o=[];for(let e=0;e<n-1;e++)o.push(...$(t[e][0],t[e][1],t[e+1][0],t[e+1][1],s));return e&&o.push(...$(t[n-1][0],t[n-1][1],t[0][0],t[0][1],s)),{type:\"path\",ops:o}}return 2===n?v(t[0][0],t[0][1],t[1][0],t[1][1],s):{type:\"path\",ops:[]}}function O(t,e,s,n,o){return function(t,e){return S(t,!0,e)}([[t,e],[t+s,e],[t+s,e+n],[t,e+n]],o)}function L(t,e){if(t.length){const s=\"number\"==typeof t[0][0]?[t]:t,n=j(s[0],1*(1+.2*e.roughness),e),o=e.disableMultiStroke?[]:j(s[0],1.5*(1+.22*e.roughness),z(e));for(let t=1;t<s.length;t++){const a=s[t];if(a.length){const t=j(a,1*(1+.2*e.roughness),e),s=e.disableMultiStroke?[]:j(a,1.5*(1+.22*e.roughness),z(e));for(const e of t)\"move\"!==e.op&&n.push(e);for(const t of s)\"move\"!==t.op&&o.push(t)}}return{type:\"path\",ops:n.concat(o)}}return{type:\"path\",ops:[]}}function T(t,e,s){const n=Math.sqrt(2*Math.PI*Math.sqrt((Math.pow(t/2,2)+Math.pow(e/2,2))/2)),o=Math.ceil(Math.max(s.curveStepCount,s.curveStepCount/Math.sqrt(200)*n)),a=2*Math.PI/o;let h=Math.abs(t/2),r=Math.abs(e/2);const i=1-s.curveFitting;return h+=G(h*i,s),r+=G(r*i,s),{increment:a,rx:h,ry:r}}function D(t,e,s,n){const[o,a]=F(n.increment,t,e,n.rx,n.ry,1,n.increment*E(.1,E(.4,1,s),s),s);let h=q(o,null,s);if(!s.disableMultiStroke&&0!==s.roughness){const[o]=F(n.increment,t,e,n.rx,n.ry,1.5,0,s),a=q(o,null,s);h=h.concat(a)}return{estimatedPoints:a,opset:{type:\"path\",ops:h}}}function A(t,e,s,n,o,a,h,r,i){const c=t,l=e;let u=Math.abs(s/2),p=Math.abs(n/2);u+=G(.01*u,i),p+=G(.01*p,i);let f=o,d=a;for(;f<0;)f+=2*Math.PI,d+=2*Math.PI;d-f>2*Math.PI&&(f=0,d=2*Math.PI);const g=2*Math.PI/i.curveStepCount,M=Math.min(g/2,(d-f)/2),k=V(M,c,l,u,p,f,d,1,i);if(!i.disableMultiStroke){const t=V(M,c,l,u,p,f,d,1.5,i);k.push(...t)}return h&&(r?k.push(...$(c,l,c+u*Math.cos(f),l+p*Math.sin(f),i),...$(c,l,c+u*Math.cos(d),l+p*Math.sin(d),i)):k.push({op:\"lineTo\",data:[c,l]},{op:\"lineTo\",data:[c+u*Math.cos(f),l+p*Math.sin(f)]})),{type:\"path\",ops:k}}function _(t,e){const s=m(y(b(t))),n=[];let o=[0,0],a=[0,0];for(const{key:t,data:h}of s)switch(t){case\"M\":a=[h[0],h[1]],o=[h[0],h[1]];break;case\"L\":n.push(...$(a[0],a[1],h[0],h[1],e)),a=[h[0],h[1]];break;case\"C\":{const[t,s,o,r,i,c]=h;n.push(...Z(t,s,o,r,i,c,a,e)),a=[i,c];break}case\"Z\":n.push(...$(a[0],a[1],o[0],o[1],e)),a=[o[0],o[1]]}return{type:\"path\",ops:n}}function I(t,e){const s=[];for(const n of t)if(n.length){const t=e.maxRandomnessOffset||0,o=n.length;if(o>2){s.push({op:\"move\",data:[n[0][0]+G(t,e),n[0][1]+G(t,e)]});for(let a=1;a<o;a++)s.push({op:\"lineTo\",data:[n[a][0]+G(t,e),n[a][1]+G(t,e)]})}}return{type:\"fillPath\",ops:s}}function C(t,e){return function(t,e){let s=t.fillStyle||\"hachure\";if(!u[s])switch(s){case\"zigzag\":u[s]||(u[s]=new h(e));break;case\"cross-hatch\":u[s]||(u[s]=new r(e));break;case\"dots\":u[s]||(u[s]=new i(e));break;case\"dashed\":u[s]||(u[s]=new c(e));break;case\"zigzag-line\":u[s]||(u[s]=new l(e));break;default:s=\"hachure\",u[s]||(u[s]=new o(e))}return u[s]}(e,P).fillPolygons(t,e)}function z(t){const e=Object.assign({},t);return e.randomizer=void 0,t.seed&&(e.seed=t.seed+1),e}function W(t){return t.randomizer||(t.randomizer=new p(t.seed||0)),t.randomizer.next()}function E(t,e,s,n=1){return s.roughness*n*(W(s)*(e-t)+t)}function G(t,e,s=1){return E(-t,t,e,s)}function $(t,e,s,n,o,a=!1){const h=a?o.disableMultiStrokeFill:o.disableMultiStroke,r=R(t,e,s,n,o,!0,!1);if(h)return r;const i=R(t,e,s,n,o,!0,!0);return r.concat(i)}function R(t,e,s,n,o,a,h){const r=Math.pow(t-s,2)+Math.pow(e-n,2),i=Math.sqrt(r);let c=1;c=i<200?1:i>500?.4:-.0016668*i+1.233334;let l=o.maxRandomnessOffset||0;l*l*100>r&&(l=i/10);const u=l/2,p=.2+.2*W(o);let f=o.bowing*o.maxRandomnessOffset*(n-e)/200,d=o.bowing*o.maxRandomnessOffset*(t-s)/200;f=G(f,o,c),d=G(d,o,c);const g=[],M=()=>G(u,o,c),k=()=>G(l,o,c),b=o.preserveVertices;return a&&(h?g.push({op:\"move\",data:[t+(b?0:M()),e+(b?0:M())]}):g.push({op:\"move\",data:[t+(b?0:G(l,o,c)),e+(b?0:G(l,o,c))]})),h?g.push({op:\"bcurveTo\",data:[f+t+(s-t)*p+M(),d+e+(n-e)*p+M(),f+t+2*(s-t)*p+M(),d+e+2*(n-e)*p+M(),s+(b?0:M()),n+(b?0:M())]}):g.push({op:\"bcurveTo\",data:[f+t+(s-t)*p+k(),d+e+(n-e)*p+k(),f+t+2*(s-t)*p+k(),d+e+2*(n-e)*p+k(),s+(b?0:k()),n+(b?0:k())]}),g}function j(t,e,s){if(!t.length)return[];const n=[];n.push([t[0][0]+G(e,s),t[0][1]+G(e,s)]),n.push([t[0][0]+G(e,s),t[0][1]+G(e,s)]);for(let o=1;o<t.length;o++)n.push([t[o][0]+G(e,s),t[o][1]+G(e,s)]),o===t.length-1&&n.push([t[o][0]+G(e,s),t[o][1]+G(e,s)]);return q(n,null,s)}function q(t,e,s){const n=t.length,o=[];if(n>3){const a=[],h=1-s.curveTightness;o.push({op:\"move\",data:[t[1][0],t[1][1]]});for(let e=1;e+2<n;e++){const s=t[e];a[0]=[s[0],s[1]],a[1]=[s[0]+(h*t[e+1][0]-h*t[e-1][0])/6,s[1]+(h*t[e+1][1]-h*t[e-1][1])/6],a[2]=[t[e+1][0]+(h*t[e][0]-h*t[e+2][0])/6,t[e+1][1]+(h*t[e][1]-h*t[e+2][1])/6],a[3]=[t[e+1][0],t[e+1][1]],o.push({op:\"bcurveTo\",data:[a[1][0],a[1][1],a[2][0],a[2][1],a[3][0],a[3][1]]})}if(e&&2===e.length){const t=s.maxRandomnessOffset;o.push({op:\"lineTo\",data:[e[0]+G(t,s),e[1]+G(t,s)]})}}else 3===n?(o.push({op:\"move\",data:[t[1][0],t[1][1]]}),o.push({op:\"bcurveTo\",data:[t[1][0],t[1][1],t[2][0],t[2][1],t[2][0],t[2][1]]})):2===n&&o.push(...R(t[0][0],t[0][1],t[1][0],t[1][1],s,!0,!0));return o}function F(t,e,s,n,o,a,h,r){const i=[],c=[];if(0===r.roughness){t/=4,c.push([e+n*Math.cos(-t),s+o*Math.sin(-t)]);for(let a=0;a<=2*Math.PI;a+=t){const t=[e+n*Math.cos(a),s+o*Math.sin(a)];i.push(t),c.push(t)}c.push([e+n*Math.cos(0),s+o*Math.sin(0)]),c.push([e+n*Math.cos(t),s+o*Math.sin(t)])}else{const l=G(.5,r)-Math.PI/2;c.push([G(a,r)+e+.9*n*Math.cos(l-t),G(a,r)+s+.9*o*Math.sin(l-t)]);const u=2*Math.PI+l-.01;for(let h=l;h<u;h+=t){const t=[G(a,r)+e+n*Math.cos(h),G(a,r)+s+o*Math.sin(h)];i.push(t),c.push(t)}c.push([G(a,r)+e+n*Math.cos(l+2*Math.PI+.5*h),G(a,r)+s+o*Math.sin(l+2*Math.PI+.5*h)]),c.push([G(a,r)+e+.98*n*Math.cos(l+h),G(a,r)+s+.98*o*Math.sin(l+h)]),c.push([G(a,r)+e+.9*n*Math.cos(l+.5*h),G(a,r)+s+.9*o*Math.sin(l+.5*h)])}return[c,i]}function V(t,e,s,n,o,a,h,r,i){const c=a+G(.1,i),l=[];l.push([G(r,i)+e+.9*n*Math.cos(c-t),G(r,i)+s+.9*o*Math.sin(c-t)]);for(let a=c;a<=h;a+=t)l.push([G(r,i)+e+n*Math.cos(a),G(r,i)+s+o*Math.sin(a)]);return l.push([e+n*Math.cos(h),s+o*Math.sin(h)]),l.push([e+n*Math.cos(h),s+o*Math.sin(h)]),q(l,null,i)}function Z(t,e,s,n,o,a,h,r){const i=[],c=[r.maxRandomnessOffset||1,(r.maxRandomnessOffset||1)+.3];let l=[0,0];const u=r.disableMultiStroke?1:2,p=r.preserveVertices;for(let f=0;f<u;f++)0===f?i.push({op:\"move\",data:[h[0],h[1]]}):i.push({op:\"move\",data:[h[0]+(p?0:G(c[0],r)),h[1]+(p?0:G(c[0],r))]}),l=p?[o,a]:[o+G(c[f],r),a+G(c[f],r)],i.push({op:\"bcurveTo\",data:[t+G(c[f],r),e+G(c[f],r),s+G(c[f],r),n+G(c[f],r),l[0],l[1]]});return i}function Q(t){return[...t]}function H(t,e=0){const s=t.length;if(s<3)throw new Error(\"A curve must have at least three points.\");const n=[];if(3===s)n.push(Q(t[0]),Q(t[1]),Q(t[2]),Q(t[2]));else{const s=[];s.push(t[0],t[0]);for(let e=1;e<t.length;e++)s.push(t[e]),e===t.length-1&&s.push(t[e]);const o=[],a=1-e;n.push(Q(s[0]));for(let t=1;t+2<s.length;t++){const e=s[t];o[0]=[e[0],e[1]],o[1]=[e[0]+(a*s[t+1][0]-a*s[t-1][0])/6,e[1]+(a*s[t+1][1]-a*s[t-1][1])/6],o[2]=[s[t+1][0]+(a*s[t][0]-a*s[t+2][0])/6,s[t+1][1]+(a*s[t][1]-a*s[t+2][1])/6],o[3]=[s[t+1][0],s[t+1][1]],n.push(o[1],o[2],o[3])}}return n}function N(t,e){return Math.pow(t[0]-e[0],2)+Math.pow(t[1]-e[1],2)}function B(t,e,s){const n=N(e,s);if(0===n)return N(t,e);let o=((t[0]-e[0])*(s[0]-e[0])+(t[1]-e[1])*(s[1]-e[1]))/n;return o=Math.max(0,Math.min(1,o)),N(t,J(e,s,o))}function J(t,e,s){return[t[0]+(e[0]-t[0])*s,t[1]+(e[1]-t[1])*s]}function K(t,e,s,n){const o=n||[];if(function(t,e){const s=t[e+0],n=t[e+1],o=t[e+2],a=t[e+3];let h=3*n[0]-2*s[0]-a[0];h*=h;let r=3*n[1]-2*s[1]-a[1];r*=r;let i=3*o[0]-2*a[0]-s[0];i*=i;let c=3*o[1]-2*a[1]-s[1];return c*=c,h<i&&(h=i),r<c&&(r=c),h+r}(t,e)<s){const s=t[e+0];if(o.length){(a=o[o.length-1],h=s,Math.sqrt(N(a,h)))>1&&o.push(s)}else o.push(s);o.push(t[e+3])}else{const n=.5,a=t[e+0],h=t[e+1],r=t[e+2],i=t[e+3],c=J(a,h,n),l=J(h,r,n),u=J(r,i,n),p=J(c,l,n),f=J(l,u,n),d=J(p,f,n);K([a,c,p,d],0,s,o),K([d,f,u,i],0,s,o)}var a,h;return o}function U(t,e){return X(t,0,t.length,e)}function X(t,e,s,n,o){const a=o||[],h=t[e],r=t[s-1];let i=0,c=1;for(let n=e+1;n<s-1;++n){const e=B(t[n],h,r);e>i&&(i=e,c=n)}return Math.sqrt(i)>n?(X(t,e,c+1,n,a),X(t,c,s,n,a)):(a.length||a.push(h),a.push(r)),a}function Y(t,e=.15,s){const n=[],o=(t.length-1)/3;for(let s=0;s<o;s++){K(t,3*s,e,n)}return s&&s>0?X(n,0,n.length,s):n}const tt=\"none\";class et{constructor(t){this.defaultOptions={maxRandomnessOffset:2,roughness:1,bowing:1,stroke:\"#000\",strokeWidth:1,curveTightness:0,curveFitting:.95,curveStepCount:9,fillStyle:\"hachure\",fillWeight:-1,hachureAngle:-41,hachureGap:-1,dashOffset:-1,dashGap:-1,zigzagOffset:-1,seed:0,disableMultiStroke:!1,disableMultiStrokeFill:!1,preserveVertices:!1,fillShapeRoughnessGain:.8},this.config=t||{},this.config.options&&(this.defaultOptions=this._o(this.config.options))}static newSeed(){return Math.floor(Math.random()*2**31)}_o(t){return t?Object.assign({},this.defaultOptions,t):this.defaultOptions}_d(t,e,s){return{shape:t,sets:e||[],options:s||this.defaultOptions}}line(t,e,s,n,o){const a=this._o(o);return this._d(\"line\",[v(t,e,s,n,a)],a)}rectangle(t,e,s,n,o){const a=this._o(o),h=[],r=O(t,e,s,n,a);if(a.fill){const o=[[t,e],[t+s,e],[t+s,e+n],[t,e+n]];\"solid\"===a.fillStyle?h.push(I([o],a)):h.push(C([o],a))}return a.stroke!==tt&&h.push(r),this._d(\"rectangle\",h,a)}ellipse(t,e,s,n,o){const a=this._o(o),h=[],r=T(s,n,a),i=D(t,e,a,r);if(a.fill)if(\"solid\"===a.fillStyle){const s=D(t,e,a,r).opset;s.type=\"fillPath\",h.push(s)}else h.push(C([i.estimatedPoints],a));return a.stroke!==tt&&h.push(i.opset),this._d(\"ellipse\",h,a)}circle(t,e,s,n){const o=this.ellipse(t,e,s,s,n);return o.shape=\"circle\",o}linearPath(t,e){const s=this._o(e);return this._d(\"linearPath\",[S(t,!1,s)],s)}arc(t,e,s,n,o,a,h=!1,r){const i=this._o(r),c=[],l=A(t,e,s,n,o,a,h,!0,i);if(h&&i.fill)if(\"solid\"===i.fillStyle){const h=Object.assign({},i);h.disableMultiStroke=!0;const r=A(t,e,s,n,o,a,!0,!1,h);r.type=\"fillPath\",c.push(r)}else c.push(function(t,e,s,n,o,a,h){const r=t,i=e;let c=Math.abs(s/2),l=Math.abs(n/2);c+=G(.01*c,h),l+=G(.01*l,h);let u=o,p=a;for(;u<0;)u+=2*Math.PI,p+=2*Math.PI;p-u>2*Math.PI&&(u=0,p=2*Math.PI);const f=(p-u)/h.curveStepCount,d=[];for(let t=u;t<=p;t+=f)d.push([r+c*Math.cos(t),i+l*Math.sin(t)]);return d.push([r+c*Math.cos(p),i+l*Math.sin(p)]),d.push([r,i]),C([d],h)}(t,e,s,n,o,a,i));return i.stroke!==tt&&c.push(l),this._d(\"arc\",c,i)}curve(t,e){const s=this._o(e),n=[],o=L(t,s);if(s.fill&&s.fill!==tt)if(\"solid\"===s.fillStyle){const e=L(t,Object.assign(Object.assign({},s),{disableMultiStroke:!0,roughness:s.roughness?s.roughness+s.fillShapeRoughnessGain:0}));n.push({type:\"fillPath\",ops:this._mergedShape(e.ops)})}else{const e=[],o=t;if(o.length){const t=\"number\"==typeof o[0][0]?[o]:o;for(const n of t)n.length<3?e.push(...n):3===n.length?e.push(...Y(H([n[0],n[0],n[1],n[2]]),10,(1+s.roughness)/2)):e.push(...Y(H(n),10,(1+s.roughness)/2))}e.length&&n.push(C([e],s))}return s.stroke!==tt&&n.push(o),this._d(\"curve\",n,s)}polygon(t,e){const s=this._o(e),n=[],o=S(t,!0,s);return s.fill&&(\"solid\"===s.fillStyle?n.push(I([t],s)):n.push(C([t],s))),s.stroke!==tt&&n.push(o),this._d(\"polygon\",n,s)}path(t,e){const s=this._o(e),n=[];if(!t)return this._d(\"path\",n,s);t=(t||\"\").replace(/\\n/g,\" \").replace(/(-\\s)/g,\"-\").replace(\"/(ss)/g\",\" \");const o=s.fill&&\"transparent\"!==s.fill&&s.fill!==tt,a=s.stroke!==tt,h=!!(s.simplification&&s.simplification<1),r=function(t,e,s){const n=m(y(b(t))),o=[];let a=[],h=[0,0],r=[];const i=()=>{r.length>=4&&a.push(...Y(r,e)),r=[]},c=()=>{i(),a.length&&(o.push(a),a=[])};for(const{key:t,data:e}of n)switch(t){case\"M\":c(),h=[e[0],e[1]],a.push(h);break;case\"L\":i(),a.push([e[0],e[1]]);break;case\"C\":if(!r.length){const t=a.length?a[a.length-1]:h;r.push([t[0],t[1]])}r.push([e[0],e[1]]),r.push([e[2],e[3]]),r.push([e[4],e[5]]);break;case\"Z\":i(),a.push([h[0],h[1]])}if(c(),!s)return o;const l=[];for(const t of o){const e=U(t,s);e.length&&l.push(e)}return l}(t,1,h?4-4*(s.simplification||1):(1+s.roughness)/2),i=_(t,s);if(o)if(\"solid\"===s.fillStyle)if(1===r.length){const e=_(t,Object.assign(Object.assign({},s),{disableMultiStroke:!0,roughness:s.roughness?s.roughness+s.fillShapeRoughnessGain:0}));n.push({type:\"fillPath\",ops:this._mergedShape(e.ops)})}else n.push(I(r,s));else n.push(C(r,s));return a&&(h?r.forEach((t=>{n.push(S(t,!1,s))})):n.push(i)),this._d(\"path\",n,s)}opsToPath(t,e){let s=\"\";for(const n of t.ops){const t=\"number\"==typeof e&&e>=0?n.data.map((t=>+t.toFixed(e))):n.data;switch(n.op){case\"move\":s+=`M${t[0]} ${t[1]} `;break;case\"bcurveTo\":s+=`C${t[0]} ${t[1]}, ${t[2]} ${t[3]}, ${t[4]} ${t[5]} `;break;case\"lineTo\":s+=`L${t[0]} ${t[1]} `}}return s.trim()}toPaths(t){const e=t.sets||[],s=t.options||this.defaultOptions,n=[];for(const t of e){let e=null;switch(t.type){case\"path\":e={d:this.opsToPath(t),stroke:s.stroke,strokeWidth:s.strokeWidth,fill:tt};break;case\"fillPath\":e={d:this.opsToPath(t),stroke:tt,strokeWidth:0,fill:s.fill||tt};break;case\"fillSketch\":e=this.fillSketch(t,s)}e&&n.push(e)}return n}fillSketch(t,e){let s=e.fillWeight;return s<0&&(s=e.strokeWidth/2),{d:this.opsToPath(t),stroke:e.fill||tt,strokeWidth:s,fill:tt}}_mergedShape(t){return t.filter(((t,e)=>0===e||\"move\"!==t.op))}}class st{constructor(t,e){this.canvas=t,this.ctx=this.canvas.getContext(\"2d\"),this.gen=new et(e)}draw(t){const e=t.sets||[],s=t.options||this.getDefaultOptions(),n=this.ctx,o=t.options.fixedDecimalPlaceDigits;for(const a of e)switch(a.type){case\"path\":n.save(),n.strokeStyle=\"none\"===s.stroke?\"transparent\":s.stroke,n.lineWidth=s.strokeWidth,s.strokeLineDash&&n.setLineDash(s.strokeLineDash),s.strokeLineDashOffset&&(n.lineDashOffset=s.strokeLineDashOffset),this._drawToContext(n,a,o),n.restore();break;case\"fillPath\":{n.save(),n.fillStyle=s.fill||\"\";const e=\"curve\"===t.shape||\"polygon\"===t.shape||\"path\"===t.shape?\"evenodd\":\"nonzero\";this._drawToContext(n,a,o,e),n.restore();break}case\"fillSketch\":this.fillSketch(n,a,s)}}fillSketch(t,e,s){let n=s.fillWeight;n<0&&(n=s.strokeWidth/2),t.save(),s.fillLineDash&&t.setLineDash(s.fillLineDash),s.fillLineDashOffset&&(t.lineDashOffset=s.fillLineDashOffset),t.strokeStyle=s.fill||\"\",t.lineWidth=n,this._drawToContext(t,e,s.fixedDecimalPlaceDigits),t.restore()}_drawToContext(t,e,s,n=\"nonzero\"){t.beginPath();for(const n of e.ops){const e=\"number\"==typeof s&&s>=0?n.data.map((t=>+t.toFixed(s))):n.data;switch(n.op){case\"move\":t.moveTo(e[0],e[1]);break;case\"bcurveTo\":t.bezierCurveTo(e[0],e[1],e[2],e[3],e[4],e[5]);break;case\"lineTo\":t.lineTo(e[0],e[1])}}\"fillPath\"===e.type?t.fill(n):t.stroke()}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}line(t,e,s,n,o){const a=this.gen.line(t,e,s,n,o);return this.draw(a),a}rectangle(t,e,s,n,o){const a=this.gen.rectangle(t,e,s,n,o);return this.draw(a),a}ellipse(t,e,s,n,o){const a=this.gen.ellipse(t,e,s,n,o);return this.draw(a),a}circle(t,e,s,n){const o=this.gen.circle(t,e,s,n);return this.draw(o),o}linearPath(t,e){const s=this.gen.linearPath(t,e);return this.draw(s),s}polygon(t,e){const s=this.gen.polygon(t,e);return this.draw(s),s}arc(t,e,s,n,o,a,h=!1,r){const i=this.gen.arc(t,e,s,n,o,a,h,r);return this.draw(i),i}curve(t,e){const s=this.gen.curve(t,e);return this.draw(s),s}path(t,e){const s=this.gen.path(t,e);return this.draw(s),s}}const nt=\"http://www.w3.org/2000/svg\";class ot{constructor(t,e){this.svg=t,this.gen=new et(e)}draw(t){const e=t.sets||[],s=t.options||this.getDefaultOptions(),n=this.svg.ownerDocument||window.document,o=n.createElementNS(nt,\"g\"),a=t.options.fixedDecimalPlaceDigits;for(const h of e){let e=null;switch(h.type){case\"path\":e=n.createElementNS(nt,\"path\"),e.setAttribute(\"d\",this.opsToPath(h,a)),e.setAttribute(\"stroke\",s.stroke),e.setAttribute(\"stroke-width\",s.strokeWidth+\"\"),e.setAttribute(\"fill\",\"none\"),s.strokeLineDash&&e.setAttribute(\"stroke-dasharray\",s.strokeLineDash.join(\" \").trim()),s.strokeLineDashOffset&&e.setAttribute(\"stroke-dashoffset\",`${s.strokeLineDashOffset}`);break;case\"fillPath\":e=n.createElementNS(nt,\"path\"),e.setAttribute(\"d\",this.opsToPath(h,a)),e.setAttribute(\"stroke\",\"none\"),e.setAttribute(\"stroke-width\",\"0\"),e.setAttribute(\"fill\",s.fill||\"\"),\"curve\"!==t.shape&&\"polygon\"!==t.shape||e.setAttribute(\"fill-rule\",\"evenodd\");break;case\"fillSketch\":e=this.fillSketch(n,h,s)}e&&o.appendChild(e)}return o}fillSketch(t,e,s){let n=s.fillWeight;n<0&&(n=s.strokeWidth/2);const o=t.createElementNS(nt,\"path\");return o.setAttribute(\"d\",this.opsToPath(e,s.fixedDecimalPlaceDigits)),o.setAttribute(\"stroke\",s.fill||\"\"),o.setAttribute(\"stroke-width\",n+\"\"),o.setAttribute(\"fill\",\"none\"),s.fillLineDash&&o.setAttribute(\"stroke-dasharray\",s.fillLineDash.join(\" \").trim()),s.fillLineDashOffset&&o.setAttribute(\"stroke-dashoffset\",`${s.fillLineDashOffset}`),o}get generator(){return this.gen}getDefaultOptions(){return this.gen.defaultOptions}opsToPath(t,e){return this.gen.opsToPath(t,e)}line(t,e,s,n,o){const a=this.gen.line(t,e,s,n,o);return this.draw(a)}rectangle(t,e,s,n,o){const a=this.gen.rectangle(t,e,s,n,o);return this.draw(a)}ellipse(t,e,s,n,o){const a=this.gen.ellipse(t,e,s,n,o);return this.draw(a)}circle(t,e,s,n){const o=this.gen.circle(t,e,s,n);return this.draw(o)}linearPath(t,e){const s=this.gen.linearPath(t,e);return this.draw(s)}polygon(t,e){const s=this.gen.polygon(t,e);return this.draw(s)}arc(t,e,s,n,o,a,h=!1,r){const i=this.gen.arc(t,e,s,n,o,a,h,r);return this.draw(i)}curve(t,e){const s=this.gen.curve(t,e);return this.draw(s)}path(t,e){const s=this.gen.path(t,e);return this.draw(s)}}var at={canvas:(t,e)=>new st(t,e),svg:(t,e)=>new ot(t,e),generator:t=>new et(t),newSeed:()=>et.newSeed()};export{at as default};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}