{"ast":null,"code":"var _Class;\nimport { AbstractMermaidTokenBuilder, CommonValueConverter, GitGraphGeneratedModule, MermaidGeneratedSharedModule, __name } from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/gitGraph/module.ts\nimport { inject, createDefaultCoreModule, createDefaultSharedCoreModule, EmptyFileSystem } from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = (_Class = class GitGraphTokenBuilder extends AbstractMermaidTokenBuilder {\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n}, __name(_Class, \"GitGraphTokenBuilder\"), _Class);\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */__name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */__name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(createDefaultSharedCoreModule(context), MermaidGeneratedSharedModule);\n  const GitGraph = inject(createDefaultCoreModule({\n    shared\n  }), GitGraphGeneratedModule, GitGraphModule);\n  shared.ServiceRegistry.register(GitGraph);\n  return {\n    shared,\n    GitGraph\n  };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\nexport { GitGraphModule, createGitGraphServices };","map":{"version":3,"names":["AbstractMermaidTokenBuilder","CommonValueConverter","GitGraphGeneratedModule","MermaidGeneratedSharedModule","__name","inject","createDefaultCoreModule","createDefaultSharedCoreModule","EmptyFileSystem","GitGraphTokenBuilder","_Class","constructor","GitGraphModule","parser","TokenBuilder","ValueConverter","createGitGraphServices","context","shared","GitGraph","ServiceRegistry","register"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-2NYFTIL2.mjs"],"sourcesContent":["import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n"],"mappings":";AAAA,SACEA,2BAA2B,EAC3BC,oBAAoB,EACpBC,uBAAuB,EACvBC,4BAA4B,EAC5BC,MAAM,QACD,sBAAsB;;AAE7B;AACA,SACEC,MAAM,EACNC,uBAAuB,EACvBC,6BAA6B,EAC7BC,eAAe,QACV,SAAS;;AAEhB;AACA,IAAIC,oBAAoB,IAAAC,MAAA,GAAG,MAAvBD,oBAAoB,SAAiBT,2BAA2B,CAAC;EAInEW,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC;EACrB;AACF,CAAC,EALGP,MAAM,CAAAM,MAAA,EAAO,sBAAsB,CAAC,EAAAA,MAAA,CAKvC;;AAED;AACA,IAAIE,cAAc,GAAG;EACnBC,MAAM,EAAE;IACNC,YAAY,EAAE,eAAgBV,MAAM,CAAC,MAAM,IAAIK,oBAAoB,CAAC,CAAC,EAAE,cAAc,CAAC;IACtFM,cAAc,EAAE,eAAgBX,MAAM,CAAC,MAAM,IAAIH,oBAAoB,CAAC,CAAC,EAAE,gBAAgB;EAC3F;AACF,CAAC;AACD,SAASe,sBAAsBA,CAACC,OAAO,GAAGT,eAAe,EAAE;EACzD,MAAMU,MAAM,GAAGb,MAAM,CACnBE,6BAA6B,CAACU,OAAO,CAAC,EACtCd,4BACF,CAAC;EACD,MAAMgB,QAAQ,GAAGd,MAAM,CACrBC,uBAAuB,CAAC;IAAEY;EAAO,CAAC,CAAC,EACnChB,uBAAuB,EACvBU,cACF,CAAC;EACDM,MAAM,CAACE,eAAe,CAACC,QAAQ,CAACF,QAAQ,CAAC;EACzC,OAAO;IAAED,MAAM;IAAEC;EAAS,CAAC;AAC7B;AACAf,MAAM,CAACY,sBAAsB,EAAE,wBAAwB,CAAC;AAExD,SACEJ,cAAc,EACdI,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}