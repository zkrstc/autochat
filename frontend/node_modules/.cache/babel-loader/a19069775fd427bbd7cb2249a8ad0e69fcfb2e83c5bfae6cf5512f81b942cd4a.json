{"ast":null,"code":"import { buildProps } from '../../../utils/vue/props/runtime.mjs';\nconst splitterPanelProps = buildProps({\n  min: {\n    type: [String, Number]\n  },\n  max: {\n    type: [String, Number]\n  },\n  size: {\n    type: [String, Number]\n  },\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  collapsible: {\n    type: Boolean,\n    default: false\n  }\n});\nexport { splitterPanelProps };","map":{"version":3,"names":["splitterPanelProps","buildProps","min","type","String","Number","max","size","resizable","Boolean","default","collapsible"],"sources":["../../../../../../packages/components/splitter/src/split-panel.ts"],"sourcesContent":["import { buildProps } from '@element-plus/utils'\n\nimport type { ExtractPropTypes } from 'vue'\nimport type SplitterPanel from './split-panel.vue'\n\nexport const splitterPanelProps = buildProps({\n  min: {\n    type: [String, Number],\n  },\n  max: {\n    type: [String, Number],\n  },\n  size: {\n    type: [String, Number],\n  },\n  resizable: {\n    type: Boolean,\n    default: true,\n  },\n  collapsible: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport type SplitterPanelProps = ExtractPropTypes<typeof splitterPanelProps>\nexport type SplitterPanelInstance = InstanceType<typeof SplitterPanel> & unknown\n"],"mappings":";AACY,MAACA,kBAAkB,GAAGC,UAAU,CAAC;EAC3CC,GAAG,EAAE;IACHC,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM;EACzB,CAAG;EACDC,GAAG,EAAE;IACHH,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM;EACzB,CAAG;EACDE,IAAI,EAAE;IACJJ,IAAI,EAAE,CAACC,MAAM,EAAEC,MAAM;EACzB,CAAG;EACDG,SAAS,EAAE;IACTL,IAAI,EAAEM,OAAO;IACbC,OAAO,EAAE;EACb,CAAG;EACDC,WAAW,EAAE;IACXR,IAAI,EAAEM,OAAO;IACbC,OAAO,EAAE;EACb;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}