{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ModulesPage',\n  data() {\n    return {\n      requirements: [],\n      selectedRequirement: '',\n      selectedRequirementId: '',\n      architecture: null,\n      architectureModules: [],\n      selectedModule: '',\n      moduleCodes: [],\n      loading: false,\n      error: null,\n      selectedArchitectureId: ''\n    };\n  },\n  mounted() {\n    this.fetchRequirements();\n  },\n  methods: {\n    // 选择需求\n    handleRequirementSelected(id) {\n      this.selectedRequirementId = id;\n      this.fetchArchitecture(id);\n      this.resetModuleSelection();\n    },\n    // 获取架构信息\n    async fetchArchitecture(requirementId) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/api/architectures/${requirementId}`);\n        if (response.data.status === 'success') {\n          this.architecture = JSON.parse(response.data.data.architecture_json);\n          this.selectedArchitectureId = response.data.data.id;\n          this.architectureModules = this.architecture.modules || [];\n        } else {\n          throw new Error(response.data.message || 'Failed to fetch architecture');\n        }\n      } catch (error) {\n        console.error('Error fetching architecture:', error);\n        this.error = error.message;\n        this.architectureModules = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 选择模块\n    handleModuleSelected(moduleName) {\n      if (!this.selectedRequirementId || !moduleName) return;\n      this.fetchModuleCodes(this.selectedRequirementId, moduleName);\n    },\n    // 获取模块代码\n    async fetchModuleCodes(architectureId, moduleName) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/module_code', {\n          params: {\n            architecture_id: architectureId,\n            module_name: moduleName\n          }\n        });\n        this.moduleCodes = response.data;\n      } catch (error) {\n        console.error('Error fetching module codes:', error);\n        this.error = error.response?.data?.error || error.message;\n        this.moduleCodes = [];\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchRequirements() {\n      const res = await axios.get('http://127.0.0.1:5000//api/requirements/list');\n      this.requirements = res.data;\n    },\n    async onRequirementChange() {\n      const res = await axios.post('/api/modules/generate', {\n        requirement_id: this.selectedRequirementId\n      });\n      this.modules = res.data;\n      this.selectedModuleCode = '';\n    },\n    onModuleChange(event) {\n      const moduleId = parseInt(event.target.value);\n      const mod = this.modules.find(m => m.id === moduleId);\n      this.selectedModuleCode = mod ? mod.code : '// 无模块代码';\n    },\n    copyCode() {\n      navigator.clipboard.writeText(this.selectedModuleCode);\n    },\n    // 重置模块选择\n    resetModuleSelection() {\n      this.selectedModule = '';\n      this.moduleCodes = [];\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","requirements","selectedRequirement","selectedRequirementId","architecture","architectureModules","selectedModule","moduleCodes","loading","error","selectedArchitectureId","mounted","fetchRequirements","methods","handleRequirementSelected","id","fetchArchitecture","resetModuleSelection","requirementId","response","get","status","JSON","parse","architecture_json","modules","Error","message","console","handleModuleSelected","moduleName","fetchModuleCodes","architectureId","params","architecture_id","module_name","res","onRequirementChange","post","requirement_id","selectedModuleCode","onModuleChange","event","moduleId","parseInt","target","value","mod","find","m","code","copyCode","navigator","clipboard","writeText"],"sources":["C:\\Users\\ASUS\\Desktop\\autochat\\frontend\\src\\views\\ModulesPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-8\">\r\n    <!-- 需求选择 -->\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <div class=\"w-1/2 pr-4\">\r\n        <label class=\"block text-gray-700 mb-2\">需求选择：</label>\r\n        <select v-model=\"selectedRequirement\"\r\n          class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          @change=\"handleRequirementSelected(selectedRequirement)\">\r\n          <option disabled value=\"\">请选择需求</option>\r\n          <option v-for=\"req in requirements\" :key=\"req.id\" :value=\"req.id\">\r\n            {{ req.name }} v{{ req.version }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- 模块选择 -->\r\n      <div class=\"w-1/2 pl-4\">\r\n        <label class=\"block text-gray-700 mb-2\">模块选择：</label>\r\n        <select v-model=\"selectedModule\"\r\n          class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n          :disabled=\"!selectedRequirementId\" @change=\"handleModuleSelected(selectedModule)\">\r\n          <option disabled value=\"\">请选择模块</option>\r\n          <option v-for=\"module in architectureModules\" :key=\"module\" :value=\"module\">\r\n            {{ module }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"bg-white rounded-lg shadow p-6\">\r\n      <div class=\"flex items-center justify-between mb-4\">\r\n        <div class=\"flex items-center\">\r\n          <i class=\"fas fa-code text-primary text-xl\"></i>\r\n          <h3 class=\"ml-2 text-lg font-medium\">代码预览</h3>\r\n        </div>\r\n        <div class=\"flex space-x-2\">\r\n          <button @click=\"copyCombinedCode\" class=\"px-4 py-2 bg-primary text-white !rounded-button\">\r\n            <i class=\"far fa-copy mr-2\"></i>复制代码\r\n          </button>\r\n          <button class=\"px-4 py-2 border border-gray-300 !rounded-button\">\r\n            <i class=\"fas fa-download mr-2\"></i>生成代码\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <pre v-if=\"moduleCodes.length > 0\" class=\"...\" style=\"height: 600px;\">\r\n        <div v-for=\"(code, index) in moduleCodes\" :key=\"index\" class=\"mb-6\">\r\n          <div class=\"text-sm text-gray-500 mb-1\">// {{ code.language }} 代码</div>\r\n          <code>{{ code.code }}</code>\r\n        </div>\r\n      </pre>\r\n      <pre v-else class=\"...\" style=\"height: 600px;\">\r\n        // 请选择需求和模块查看代码\r\n      </pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'ModulesPage',\r\n  data() {\r\n    return {\r\n      requirements: [],\r\n      selectedRequirement: '',\r\n      selectedRequirementId: '',\r\n      architecture: null,\r\n      architectureModules: [],\r\n      selectedModule: '',\r\n      moduleCodes: [],\r\n      loading: false,\r\n      error: null,\r\n      selectedArchitectureId: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchRequirements();\r\n  },\r\n  methods: {\r\n    // 选择需求\r\n    handleRequirementSelected(id) {\r\n      this.selectedRequirementId = id;\r\n      this.fetchArchitecture(id);\r\n      this.resetModuleSelection();\r\n    },\r\n    // 获取架构信息\r\n    async fetchArchitecture(requirementId) {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:5000/api/architectures/${requirementId}`);\r\n        if (response.data.status === 'success') {\r\n          this.architecture = JSON.parse(response.data.data.architecture_json);\r\n          this.selectedArchitectureId = response.data.data.id;\r\n          this.architectureModules = this.architecture.modules || [];\r\n        } else {\r\n          throw new Error(response.data.message || 'Failed to fetch architecture');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching architecture:', error);\r\n        this.error = error.message;\r\n        this.architectureModules = [];\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    // 选择模块\r\n    handleModuleSelected(moduleName) {\r\n      if (!this.selectedRequirementId || !moduleName) return;\r\n      this.fetchModuleCodes(this.selectedRequirementId, moduleName);\r\n    },\r\n    // 获取模块代码\r\n    async fetchModuleCodes(architectureId, moduleName) {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:5000/api/module_code', {\r\n          params: {\r\n            architecture_id: architectureId,\r\n            module_name: moduleName\r\n          }\r\n        });\r\n        this.moduleCodes = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching module codes:', error);\r\n        this.error = error.response?.data?.error || error.message;\r\n        this.moduleCodes = [];\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    async fetchRequirements() {\r\n      const res = await axios.get('http://127.0.0.1:5000//api/requirements/list');\r\n      this.requirements = res.data;\r\n    },\r\n    async onRequirementChange() {\r\n      const res = await axios.post('/api/modules/generate', {\r\n        requirement_id: this.selectedRequirementId\r\n      });\r\n      this.modules = res.data;\r\n      this.selectedModuleCode = '';\r\n    },\r\n    onModuleChange(event) {\r\n      const moduleId = parseInt(event.target.value);\r\n      const mod = this.modules.find(m => m.id === moduleId);\r\n      this.selectedModuleCode = mod ? mod.code : '// 无模块代码';\r\n    },\r\n    copyCode() {\r\n      navigator.clipboard.writeText(this.selectedModuleCode);\r\n    },\r\n    // 重置模块选择\r\n    resetModuleSelection() {\r\n      this.selectedModule = '';\r\n      this.moduleCodes = [];\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}