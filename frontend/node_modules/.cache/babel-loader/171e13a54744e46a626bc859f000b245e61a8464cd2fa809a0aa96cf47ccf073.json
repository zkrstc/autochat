{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ArchitecturePage',\n  data() {\n    return {\n      requirements: [],\n      selectedRequirement: '',\n      selectedRequirementId: null,\n      loading: false,\n      error: null,\n      architecture: null,\n      techIcons: {\n        frontend: 'fab fa-vuejs',\n        backend: 'fab fa-python',\n        database: 'fas fa-database'\n      }\n    };\n  },\n  computed: {\n    technologyStack() {\n      if (!this.architecture) return [];\n      return Object.entries(this.architecture.architecture_json.technologyStack).map(([category, value]) => ({\n        category: category.charAt(0).toUpperCase() + category.slice(1),\n        value,\n        icon: this.techIcons[category] || 'fas fa-code'\n      }));\n    }\n  },\n  watch: {\n    requirementId(newVal) {\n      if (newVal) {\n        this.fetchArchitecture(newVal);\n      }\n    }\n  },\n  created() {\n    this.fetchRequirements();\n  },\n  methods: {\n    handleRequirementSelected(id) {\n      this.selectedRequirementId = id;\n      console.log('Selected Requirement ID:', this.selectedRequirementId);\n      this.fetchArchitecture(this.selectedRequirementId);\n      const user = JSON.parse(localStorage.getItem('user'));\n      console.log('当前用户:', user.username);\n    },\n    async fetchRequirements() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/requirements/list');\n        this.requirements = response.data;\n      } catch (err) {\n        console.error('Error fetching requirements:', err);\n        this.error = '无法加载需求列表';\n      } finally {\n        this.loading = false;\n      }\n    },\n    onRequirementChange() {\n      this.$emit('requirement-selected', this.selectedRequirement);\n    },\n    async fetchArchitecture(requirementId) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get(`http://127.0.0.1:5000/api/architectures/${requirementId}`);\n        console.log('Response:', response.data);\n        if (response.data.status === 'success') {\n          this.architecture = JSON.parse(response.data.data.architecture_json);\n        } else {\n          throw new Error(response.data.message || 'Failed to fetch data.');\n        }\n      } catch (err) {\n        console.error('Error fetching architecture:', err);\n        this.error = err.response?.data?.error || err.message || '获取架构信息失败';\n        this.architecture = null;\n\n        // 可以在这里添加更多特定的错误处理\n        if (err.response?.status === 404) {\n          this.error = \"未找到对应的架构设计\";\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    downloadDiagram() {\n      if (!this.architecture) return;\n\n      // Implement download functionality\n      const blob = new Blob([this.architecture.architecture_json.architectureDiagram.diagram], {\n        type: 'text/plain'\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = `architecture-${this.architecture.id}.txt`;\n      link.click();\n    },\n    // 生成架构按钮点击处理\n    async generateArchitecture() {\n      if (!this.selectedRequirement) {\n        this.$toast.warning('请先选择需求');\n        return;\n      }\n      this.isLoading = true;\n      try {\n        // 获取存储的用户信息\n        const user = JSON.parse(localStorage.getItem('user'));\n        const username = user.username;\n        if (user) {\n          console.log('当前用户:', user.username);\n          // 使用 user.username 或 user.id\n        } else {\n          console.log('用户未登录');\n        }\n        const response = await axios.post('http://127.0.0.1:5000/api/architectures/generate', {\n          requirement_id: this.selectedRequirement,\n          user_name: username\n        });\n        //this.architecture = JSON.parse(response.data.data.architecture_json);\n        const data = await response.json();\n        if (response.ok) {\n          this.architecture = data.data.architecture_json;\n          this.$toast.success('架构生成成功！');\n        } else {\n          throw new Error(data.message || 'Failed to generate architecture');\n        }\n      } catch (error) {\n        console.error('Error generating architecture:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","requirements","selectedRequirement","selectedRequirementId","loading","error","architecture","techIcons","frontend","backend","database","computed","technologyStack","Object","entries","architecture_json","map","category","value","charAt","toUpperCase","slice","icon","watch","requirementId","newVal","fetchArchitecture","created","fetchRequirements","methods","handleRequirementSelected","id","console","log","user","JSON","parse","localStorage","getItem","username","response","get","err","onRequirementChange","$emit","status","Error","message","downloadDiagram","blob","Blob","architectureDiagram","diagram","type","link","document","createElement","href","URL","createObjectURL","download","click","generateArchitecture","$toast","warning","isLoading","post","requirement_id","user_name","json","ok","success"],"sources":["C:\\Users\\ASUS\\Desktop\\autochat\\frontend\\src\\views\\ArchitecturePage.vue"],"sourcesContent":["<template>\r\n    <div class=\"p-8\">\r\n        <!-- 需求选择和生成按钮 -->\r\n        <div class=\"flex items-center justify-between mb-6\">\r\n            <div class=\"flex items-center space-x-4\">\r\n                <div class=\"text-lg font-medium\">需求选择：</div>\r\n                <select v-model=\"selectedRequirement\"\r\n                    class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    @change=\"handleRequirementSelected(selectedRequirement)\">\r\n                    <option disabled value=\"\">请选择需求</option>\r\n                    <option v-for=\"req in requirements\" :key=\"req.id\" :value=\"req.id\">\r\n                        {{ req.name }} v{{ req.version }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n            <button id=\"generateBtn\"\r\n                class=\"px-6 py-2 bg-primary text-white !rounded-button hover:bg-blue-600 transition-colors\"\r\n                @click=\"generateArchitecture\" :disabled=\"!selectedRequirement || isLoading\">\r\n                <i class=\"fas fa-magic mr-2\"></i>\r\n                {{ isLoading ? '生成中...' : '生成架构' }}\r\n            </button>\r\n        </div>\r\n\r\n        <!-- 架构展示区域 -->\r\n        <div class=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n            <div class=\"flex items-center justify-between mb-4\">\r\n                <div class=\"flex items-center\">\r\n                    <i class=\"fas fa-sitemap text-primary text-xl\"></i>\r\n                    <h3 class=\"ml-2 text-lg font-medium\">系统架构图</h3>\r\n                </div>\r\n                <div class=\"flex space-x-2\">\r\n                    <button @click=\"downloadDiagram\" class=\"px-4 py-2 border border-gray-300 !rounded-button\">\r\n                        <i class=\"fas fa-download mr-2\"></i>下载\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"architectureContainer\" class=\"architecture-diagram\">\r\n                <div v-if=\"loading\" class=\"text-center py-10\">\r\n                    <i class=\"fas fa-spinner fa-spin text-4xl mb-2 text-primary\"></i>\r\n                    <p>正在加载架构图...</p>\r\n                </div>\r\n                <div v-else-if=\"error\" class=\"text-center py-10 text-red-500\">\r\n                    <i class=\"fas fa-exclamation-circle text-4xl mb-2\"></i>\r\n                    <p>{{ error }}</p>\r\n                </div>\r\n                <div v-else-if=\"!architecture\" class=\"text-center py-10\">\r\n                    <i class=\"fas fa-sitemap text-4xl mb-2\"></i>\r\n                    <p>请选择需求并点击\"生成架构\"按钮</p>\r\n                </div>\r\n                <pre v-else\r\n                    class=\"bg-gray-100 p-4 rounded overflow-auto\">{{ architecture.architectureDiagram.diagram }}</pre>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 技术栈和模块划分 -->\r\n        <div class=\"grid grid-cols-2 gap-6\">\r\n            <!-- 技术栈 -->\r\n            <div class=\"bg-white rounded-lg shadow p-6\">\r\n                <div class=\"flex items-center mb-4\">\r\n                    <i class=\"fas fa-code-branch text-primary text-xl\"></i>\r\n                    <h3 class=\"ml-2 text-lg font-medium\">推荐技术栈</h3>\r\n                </div>\r\n                <div id=\"techStackContainer\" class=\"space-y-3\">\r\n                    <div v-if=\"loading\" class=\"text-center py-10\">\r\n                        <i class=\"fas fa-spinner fa-spin text-4xl mb-2 text-primary\"></i>\r\n                        <p>正在加载技术栈...</p>\r\n                    </div>\r\n                    <div v-else-if=\"error\" class=\"text-center py-10 text-red-500\">\r\n                        <i class=\"fas fa-exclamation-circle text-4xl mb-2\"></i>\r\n                        <p>{{ error }}</p>\r\n                    </div>\r\n                    <div v-else-if=\"!architecture\" class=\"text-center text-gray-500 py-10\">\r\n                        <i class=\"fas fa-cog text-4xl mb-2\"></i>\r\n                        <p>架构生成后将显示推荐技术栈</p>\r\n                    </div>\r\n                    <div v-else>\r\n                        <!-- Frontend -->\r\n                        <div class=\"flex items-start\">\r\n                            <div class=\"bg-gray-100 rounded-full p-2 mr-3\">\r\n                                <i class=\"fab fa-vuejs text-primary\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h4 class=\"font-medium\">前端技术</h4>\r\n                                <p class=\"text-gray-600\">{{ architecture.technologyStack.frontend }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Backend -->\r\n                        <div class=\"flex items-start\">\r\n                            <div class=\"bg-gray-100 rounded-full p-2 mr-3\">\r\n                                <i class=\"fas fa-server text-primary\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h4 class=\"font-medium\">后端技术</h4>\r\n                                <p class=\"text-gray-600\">{{ architecture.technologyStack.backend }}</p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- Database -->\r\n                        <div class=\"flex items-start\">\r\n                            <div class=\"bg-gray-100 rounded-full p-2 mr-3\">\r\n                                <i class=\"fas fa-database text-primary\"></i>\r\n                            </div>\r\n                            <div>\r\n                                <h4 class=\"font-medium\">数据库</h4>\r\n                                <p class=\"text-gray-600\">{{ architecture.technologyStack.database }}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- 模块划分 -->\r\n            <div class=\"bg-white rounded-lg shadow p-6\">\r\n                <div class=\"flex items-center mb-4\">\r\n                    <i class=\"fas fa-tasks text-primary text-xl\"></i>\r\n                    <h3 class=\"ml-2 text-lg font-medium\">模块划分</h3>\r\n                </div>\r\n                <div id=\"modulesContainer\" class=\"space-y-3\">\r\n                    <div v-if=\"loading\" class=\"text-center py-10\">\r\n                        <i class=\"fas fa-spinner fa-spin text-4xl mb-2 text-primary\"></i>\r\n                        <p>正在加载模块...</p>\r\n                    </div>\r\n                    <div v-else-if=\"error\" class=\"text-center py-10 text-red-500\">\r\n                        <i class=\"fas fa-exclamation-circle text-4xl mb-2\"></i>\r\n                        <p>{{ error }}</p>\r\n                    </div>\r\n                    <div v-else-if=\"!architecture\" class=\"text-center text-gray-500 py-10\">\r\n                        <i class=\"fas fa-project-diagram text-4xl mb-2\"></i>\r\n                        <p>架构生成后将显示模块划分</p>\r\n                    </div>\r\n                    <div v-else>\r\n                        <div v-for=\"(module, index) in architecture.modules\" :key=\"index\"\r\n                            class=\"flex items-center p-3 bg-gray-50 rounded\">\r\n                            <i class=\"fas fa-cube text-primary mr-3\"></i>\r\n                            <span>{{ module }}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n    name: 'ArchitecturePage',\r\n    data() {\r\n        return {\r\n            requirements: [],\r\n            selectedRequirement: '',\r\n            selectedRequirementId: null,\r\n            loading: false,\r\n            error: null,\r\n            architecture: null,\r\n\r\n            techIcons: {\r\n                frontend: 'fab fa-vuejs',\r\n                backend: 'fab fa-python',\r\n                database: 'fas fa-database'\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        technologyStack() {\r\n            if (!this.architecture) return [];\r\n\r\n            return Object.entries(this.architecture.architecture_json.technologyStack).map(\r\n                ([category, value]) => ({\r\n                    category: category.charAt(0).toUpperCase() + category.slice(1),\r\n                    value,\r\n                    icon: this.techIcons[category] || 'fas fa-code'\r\n                })\r\n            );\r\n        }\r\n    },\r\n    watch: {\r\n        requirementId(newVal) {\r\n            if (newVal) {\r\n                this.fetchArchitecture(newVal);\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchRequirements();\r\n    },\r\n    methods: {\r\n        handleRequirementSelected(id) {\r\n            this.selectedRequirementId = id;\r\n            console.log('Selected Requirement ID:', this.selectedRequirementId);\r\n            this.fetchArchitecture(this.selectedRequirementId);\r\n            const user = JSON.parse(localStorage.getItem('user'));\r\n            console.log('当前用户:', user.username);\r\n            \r\n        },\r\n        async fetchRequirements() {\r\n            this.loading = true;\r\n            this.error = null;\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/requirements/list');\r\n                this.requirements = response.data;\r\n            } catch (err) {\r\n                console.error('Error fetching requirements:', err);\r\n                this.error = '无法加载需求列表';\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n        onRequirementChange() {\r\n            this.$emit('requirement-selected', this.selectedRequirement);\r\n        },\r\n        async fetchArchitecture(requirementId) {\r\n            this.loading = true;\r\n            this.error = null;\r\n\r\n            try {\r\n                const response = await axios.get(`http://127.0.0.1:5000/api/architectures/${requirementId}`);\r\n                console.log('Response:', response.data);\r\n                if (response.data.status === 'success') {\r\n                    this.architecture = JSON.parse(response.data.data.architecture_json);\r\n                } else {\r\n                    throw new Error(response.data.message || 'Failed to fetch data.');\r\n                }\r\n\r\n            } catch (err) {\r\n                console.error('Error fetching architecture:', err);\r\n                this.error = err.response?.data?.error ||\r\n                    err.message ||\r\n                    '获取架构信息失败';\r\n                this.architecture = null;\r\n\r\n                // 可以在这里添加更多特定的错误处理\r\n                if (err.response?.status === 404) {\r\n                    this.error = \"未找到对应的架构设计\";\r\n                }\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n        downloadDiagram() {\r\n            if (!this.architecture) return;\r\n\r\n            // Implement download functionality\r\n            const blob = new Blob([this.architecture.architecture_json.architectureDiagram.diagram],\r\n                { type: 'text/plain' });\r\n            const link = document.createElement('a');\r\n            link.href = URL.createObjectURL(blob);\r\n            link.download = `architecture-${this.architecture.id}.txt`;\r\n            link.click();\r\n        },\r\n        // 生成架构按钮点击处理\r\n        async generateArchitecture() {\r\n            if (!this.selectedRequirement) {\r\n                this.$toast.warning('请先选择需求');\r\n                return;\r\n            }\r\n\r\n            this.isLoading = true;\r\n            try {\r\n                // 获取存储的用户信息\r\n                const user = JSON.parse(localStorage.getItem('user'));\r\n                \r\n                const username = user.username;\r\n                if (user) {\r\n                    console.log('当前用户:', user.username);\r\n                    // 使用 user.username 或 user.id\r\n                } else {\r\n                    console.log('用户未登录');\r\n                }\r\n\r\n                const response = await axios.post('http://127.0.0.1:5000/api/architectures/generate', {\r\n                    requirement_id: this.selectedRequirement,\r\n                    user_name: username\r\n                });\r\n                //this.architecture = JSON.parse(response.data.data.architecture_json);\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    this.architecture = data.data.architecture_json;\r\n                    this.$toast.success('架构生成成功！');\r\n                } else {\r\n                    throw new Error(data.message || 'Failed to generate architecture');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error generating architecture:', error);\r\n            } finally {\r\n                this.isLoading = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}