{"ast":null,"code":"import { __name, log } from \"./chunk-YTJNT7DU.mjs\";\n\n// src/rendering-util/icons.ts\nimport { getIconData, iconToHTML, iconToSVG, replaceIDs, stringToIcon } from \"@iconify/utils\";\nvar unknownIcon = {\n  body: '<g><rect width=\"80\" height=\"80\" style=\"fill: #087ebf; stroke-width: 0px;\"/><text transform=\"translate(21.16 64.67)\" style=\"fill: #fff; font-family: ArialMT, Arial; font-size: 67.75px;\"><tspan x=\"0\" y=\"0\">?</tspan></text></g>',\n  height: 80,\n  width: 80\n};\nvar iconsStore = /* @__PURE__ */new Map();\nvar loaderStore = /* @__PURE__ */new Map();\nvar registerIconPacks = /* @__PURE__ */__name(iconLoaders => {\n  for (const iconLoader of iconLoaders) {\n    if (!iconLoader.name) {\n      throw new Error('Invalid icon loader. Must have a \"name\" property with non-empty string value.');\n    }\n    log.debug(\"Registering icon pack:\", iconLoader.name);\n    if (\"loader\" in iconLoader) {\n      loaderStore.set(iconLoader.name, iconLoader.loader);\n    } else if (\"icons\" in iconLoader) {\n      iconsStore.set(iconLoader.name, iconLoader.icons);\n    } else {\n      log.error(\"Invalid icon loader:\", iconLoader);\n      throw new Error('Invalid icon loader. Must have either \"icons\" or \"loader\" property.');\n    }\n  }\n}, \"registerIconPacks\");\nvar getRegisteredIconData = /* @__PURE__ */__name(async (iconName, fallbackPrefix) => {\n  const data = stringToIcon(iconName, true, fallbackPrefix !== void 0);\n  if (!data) {\n    throw new Error(`Invalid icon name: ${iconName}`);\n  }\n  const prefix = data.prefix || fallbackPrefix;\n  if (!prefix) {\n    throw new Error(`Icon name must contain a prefix: ${iconName}`);\n  }\n  let icons = iconsStore.get(prefix);\n  if (!icons) {\n    const loader = loaderStore.get(prefix);\n    if (!loader) {\n      throw new Error(`Icon set not found: ${data.prefix}`);\n    }\n    try {\n      const loaded = await loader();\n      icons = {\n        ...loaded,\n        prefix\n      };\n      iconsStore.set(prefix, icons);\n    } catch (e) {\n      log.error(e);\n      throw new Error(`Failed to load icon set: ${data.prefix}`);\n    }\n  }\n  const iconData = getIconData(icons, data.name);\n  if (!iconData) {\n    throw new Error(`Icon not found: ${iconName}`);\n  }\n  return iconData;\n}, \"getRegisteredIconData\");\nvar getIconSVG = /* @__PURE__ */__name(async (iconName, customisations) => {\n  let iconData;\n  try {\n    iconData = await getRegisteredIconData(iconName, customisations?.fallbackPrefix);\n  } catch (e) {\n    log.error(e);\n    iconData = unknownIcon;\n  }\n  const renderData = iconToSVG(iconData, customisations);\n  const svg = iconToHTML(replaceIDs(renderData.body), renderData.attributes);\n  return svg;\n}, \"getIconSVG\");\nexport { unknownIcon, registerIconPacks, getIconSVG };","map":{"version":3,"names":["__name","log","getIconData","iconToHTML","iconToSVG","replaceIDs","stringToIcon","unknownIcon","body","height","width","iconsStore","Map","loaderStore","registerIconPacks","iconLoaders","iconLoader","name","Error","debug","set","loader","icons","error","getRegisteredIconData","iconName","fallbackPrefix","data","prefix","get","loaded","e","iconData","getIconSVG","customisations","renderData","svg","attributes"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/mermaid/dist/chunks/mermaid.core/chunk-H2D2JQ3I.mjs"],"sourcesContent":["import {\n  __name,\n  log\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/rendering-util/icons.ts\nimport { getIconData, iconToHTML, iconToSVG, replaceIDs, stringToIcon } from \"@iconify/utils\";\nvar unknownIcon = {\n  body: '<g><rect width=\"80\" height=\"80\" style=\"fill: #087ebf; stroke-width: 0px;\"/><text transform=\"translate(21.16 64.67)\" style=\"fill: #fff; font-family: ArialMT, Arial; font-size: 67.75px;\"><tspan x=\"0\" y=\"0\">?</tspan></text></g>',\n  height: 80,\n  width: 80\n};\nvar iconsStore = /* @__PURE__ */ new Map();\nvar loaderStore = /* @__PURE__ */ new Map();\nvar registerIconPacks = /* @__PURE__ */ __name((iconLoaders) => {\n  for (const iconLoader of iconLoaders) {\n    if (!iconLoader.name) {\n      throw new Error(\n        'Invalid icon loader. Must have a \"name\" property with non-empty string value.'\n      );\n    }\n    log.debug(\"Registering icon pack:\", iconLoader.name);\n    if (\"loader\" in iconLoader) {\n      loaderStore.set(iconLoader.name, iconLoader.loader);\n    } else if (\"icons\" in iconLoader) {\n      iconsStore.set(iconLoader.name, iconLoader.icons);\n    } else {\n      log.error(\"Invalid icon loader:\", iconLoader);\n      throw new Error('Invalid icon loader. Must have either \"icons\" or \"loader\" property.');\n    }\n  }\n}, \"registerIconPacks\");\nvar getRegisteredIconData = /* @__PURE__ */ __name(async (iconName, fallbackPrefix) => {\n  const data = stringToIcon(iconName, true, fallbackPrefix !== void 0);\n  if (!data) {\n    throw new Error(`Invalid icon name: ${iconName}`);\n  }\n  const prefix = data.prefix || fallbackPrefix;\n  if (!prefix) {\n    throw new Error(`Icon name must contain a prefix: ${iconName}`);\n  }\n  let icons = iconsStore.get(prefix);\n  if (!icons) {\n    const loader = loaderStore.get(prefix);\n    if (!loader) {\n      throw new Error(`Icon set not found: ${data.prefix}`);\n    }\n    try {\n      const loaded = await loader();\n      icons = { ...loaded, prefix };\n      iconsStore.set(prefix, icons);\n    } catch (e) {\n      log.error(e);\n      throw new Error(`Failed to load icon set: ${data.prefix}`);\n    }\n  }\n  const iconData = getIconData(icons, data.name);\n  if (!iconData) {\n    throw new Error(`Icon not found: ${iconName}`);\n  }\n  return iconData;\n}, \"getRegisteredIconData\");\nvar getIconSVG = /* @__PURE__ */ __name(async (iconName, customisations) => {\n  let iconData;\n  try {\n    iconData = await getRegisteredIconData(iconName, customisations?.fallbackPrefix);\n  } catch (e) {\n    log.error(e);\n    iconData = unknownIcon;\n  }\n  const renderData = iconToSVG(iconData, customisations);\n  const svg = iconToHTML(replaceIDs(renderData.body), renderData.attributes);\n  return svg;\n}, \"getIconSVG\");\n\nexport {\n  unknownIcon,\n  registerIconPacks,\n  getIconSVG\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}