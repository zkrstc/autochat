{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\n/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n  constructor(services) {\n    this.nameProvider = services.references.NameProvider;\n    this.index = services.shared.workspace.IndexManager;\n    this.nodeLocator = services.workspace.AstNodeLocator;\n  }\n  findDeclaration(sourceCstNode) {\n    if (sourceCstNode) {\n      const assignment = findAssignment(sourceCstNode);\n      const nodeElem = sourceCstNode.astNode;\n      if (assignment && nodeElem) {\n        const reference = nodeElem[assignment.feature];\n        if (isReference(reference)) {\n          return reference.ref;\n        } else if (Array.isArray(reference)) {\n          for (const ref of reference) {\n            if (isReference(ref) && ref.$refNode && ref.$refNode.offset <= sourceCstNode.offset && ref.$refNode.end >= sourceCstNode.end) {\n              return ref.ref;\n            }\n          }\n        }\n      }\n      if (nodeElem) {\n        const nameNode = this.nameProvider.getNameNode(nodeElem);\n        // Only return the targeted node in case the targeted cst node is the name node or part of it\n        if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n          return nodeElem;\n        }\n      }\n    }\n    return undefined;\n  }\n  findDeclarationNode(sourceCstNode) {\n    const astNode = this.findDeclaration(sourceCstNode);\n    if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n      const targetNode = this.nameProvider.getNameNode(astNode);\n      return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n    }\n    return undefined;\n  }\n  findReferences(targetNode, options) {\n    const refs = [];\n    if (options.includeDeclaration) {\n      const ref = this.getReferenceToSelf(targetNode);\n      if (ref) {\n        refs.push(ref);\n      }\n    }\n    let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n    if (options.documentUri) {\n      indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n    }\n    refs.push(...indexReferences);\n    return stream(refs);\n  }\n  getReferenceToSelf(targetNode) {\n    const nameNode = this.nameProvider.getNameNode(targetNode);\n    if (nameNode) {\n      const doc = getDocument(targetNode);\n      const path = this.nodeLocator.getAstNodePath(targetNode);\n      return {\n        sourceUri: doc.uri,\n        sourcePath: path,\n        targetUri: doc.uri,\n        targetPath: path,\n        segment: toDocumentSegment(nameNode),\n        local: true\n      };\n    }\n    return undefined;\n  }\n}","map":{"version":3,"names":["findAssignment","isReference","getDocument","isChildNode","toDocumentSegment","stream","UriUtils","DefaultReferences","constructor","services","nameProvider","references","NameProvider","index","shared","workspace","IndexManager","nodeLocator","AstNodeLocator","findDeclaration","sourceCstNode","assignment","nodeElem","astNode","reference","feature","ref","Array","isArray","$refNode","offset","end","nameNode","getNameNode","undefined","findDeclarationNode","$cstNode","targetNode","findReferences","options","refs","includeDeclaration","getReferenceToSelf","push","indexReferences","findAllReferences","getAstNodePath","documentUri","filter","equals","sourceUri","doc","path","uri","sourcePath","targetUri","targetPath","segment","local"],"sources":["../../src/references/references.ts"],"sourcesContent":[null],"mappings":";;;AAAA;;;;;AAcA,SAASA,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,uBAAuB;AACtE,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,QAAQ,QAAQ,uBAAuB;AA8ChD,OAAM,MAAOC,iBAAiB;EAK1BC,YAAYC,QAA6B;IACrC,IAAI,CAACC,YAAY,GAAGD,QAAQ,CAACE,UAAU,CAACC,YAAY;IACpD,IAAI,CAACC,KAAK,GAAGJ,QAAQ,CAACK,MAAM,CAACC,SAAS,CAACC,YAAY;IACnD,IAAI,CAACC,WAAW,GAAGR,QAAQ,CAACM,SAAS,CAACG,cAAc;EACxD;EAEAC,eAAeA,CAACC,aAAsB;IAClC,IAAIA,aAAa,EAAE;MACf,MAAMC,UAAU,GAAGrB,cAAc,CAACoB,aAAa,CAAC;MAChD,MAAME,QAAQ,GAAGF,aAAa,CAACG,OAAO;MACtC,IAAIF,UAAU,IAAIC,QAAQ,EAAE;QACxB,MAAME,SAAS,GAAIF,QAA2B,CAACD,UAAU,CAACI,OAAO,CAAC;QAElE,IAAIxB,WAAW,CAACuB,SAAS,CAAC,EAAE;UACxB,OAAOA,SAAS,CAACE,GAAG;QACxB,CAAC,MAAM,IAAIC,KAAK,CAACC,OAAO,CAACJ,SAAS,CAAC,EAAE;UACjC,KAAK,MAAME,GAAG,IAAIF,SAAS,EAAE;YACzB,IAAIvB,WAAW,CAACyB,GAAG,CAAC,IAAIA,GAAG,CAACG,QAAQ,IAC7BH,GAAG,CAACG,QAAQ,CAACC,MAAM,IAAIV,aAAa,CAACU,MAAM,IAC3CJ,GAAG,CAACG,QAAQ,CAACE,GAAG,IAAIX,aAAa,CAACW,GAAG,EAAE;cAC1C,OAAOL,GAAG,CAACA,GAAG;YAClB;UACJ;QACJ;MACJ;MACA,IAAIJ,QAAQ,EAAE;QACV,MAAMU,QAAQ,GAAG,IAAI,CAACtB,YAAY,CAACuB,WAAW,CAACX,QAAQ,CAAC;QACxD;QACA,IAAIU,QAAQ,KAAKA,QAAQ,KAAKZ,aAAa,IAAIjB,WAAW,CAACiB,aAAa,EAAEY,QAAQ,CAAC,CAAC,EAAE;UAClF,OAAOV,QAAQ;QACnB;MACJ;IACJ;IACA,OAAOY,SAAS;EACpB;EAEAC,mBAAmBA,CAACf,aAAsB;IACtC,MAAMG,OAAO,GAAG,IAAI,CAACJ,eAAe,CAACC,aAAa,CAAC;IACnD,IAAIG,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,QAAQ,EAAE;MACnB,MAAMC,UAAU,GAAG,IAAI,CAAC3B,YAAY,CAACuB,WAAW,CAACV,OAAO,CAAC;MACzD,OAAOc,UAAU,aAAVA,UAAU,cAAVA,UAAU,GAAId,OAAO,CAACa,QAAQ;IACzC;IACA,OAAOF,SAAS;EACpB;EAEAI,cAAcA,CAACD,UAAmB,EAAEE,OAA8B;IAC9D,MAAMC,IAAI,GAA2B,EAAE;IACvC,IAAID,OAAO,CAACE,kBAAkB,EAAE;MAC5B,MAAMf,GAAG,GAAG,IAAI,CAACgB,kBAAkB,CAACL,UAAU,CAAC;MAC/C,IAAIX,GAAG,EAAE;QACLc,IAAI,CAACG,IAAI,CAACjB,GAAG,CAAC;MAClB;IACJ;IACA,IAAIkB,eAAe,GAAG,IAAI,CAAC/B,KAAK,CAACgC,iBAAiB,CAACR,UAAU,EAAE,IAAI,CAACpB,WAAW,CAAC6B,cAAc,CAACT,UAAU,CAAC,CAAC;IAC3G,IAAIE,OAAO,CAACQ,WAAW,EAAE;MACrBH,eAAe,GAAGA,eAAe,CAACI,MAAM,CAACtB,GAAG,IAAIpB,QAAQ,CAAC2C,MAAM,CAACvB,GAAG,CAACwB,SAAS,EAAEX,OAAO,CAACQ,WAAW,CAAC,CAAC;IACxG;IACAP,IAAI,CAACG,IAAI,CAAC,GAAGC,eAAe,CAAC;IAC7B,OAAOvC,MAAM,CAACmC,IAAI,CAAC;EACvB;EAEUE,kBAAkBA,CAACL,UAAmB;IAC5C,MAAML,QAAQ,GAAG,IAAI,CAACtB,YAAY,CAACuB,WAAW,CAACI,UAAU,CAAC;IAC1D,IAAIL,QAAQ,EAAE;MACV,MAAMmB,GAAG,GAAGjD,WAAW,CAACmC,UAAU,CAAC;MACnC,MAAMe,IAAI,GAAG,IAAI,CAACnC,WAAW,CAAC6B,cAAc,CAACT,UAAU,CAAC;MACxD,OAAO;QACHa,SAAS,EAAEC,GAAG,CAACE,GAAG;QAClBC,UAAU,EAAEF,IAAI;QAChBG,SAAS,EAAEJ,GAAG,CAACE,GAAG;QAClBG,UAAU,EAAEJ,IAAI;QAChBK,OAAO,EAAErD,iBAAiB,CAAC4B,QAAQ,CAAC;QACpC0B,KAAK,EAAE;OACV;IACL;IACA,OAAOxB,SAAS;EACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}