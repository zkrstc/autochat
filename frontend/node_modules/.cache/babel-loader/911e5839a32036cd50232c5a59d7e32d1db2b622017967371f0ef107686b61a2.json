{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'SelfPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const currentTitle = ref('');\n    const name = ref('');\n    watch(() => route.meta.title,\n    // 直接监听meta.title\n    newTitle => {\n      currentTitle.value = newTitle || '默认标题';\n    }, {\n      immediate: true\n    });\n    const router = useRouter();\n    const handleLogout = async () => {\n      try {\n        // 1. 调用后端退出接口（如果有）\n        // await logoutApi()\n\n        // 2. 清除本地认证信息\n        localStorage.removeItem('user');\n\n        // 3. 跳转到登录页\n        router.push('/architecture');\n\n        // 4. 显示提示\n        // 使用你喜欢的通知库，如 Element Plus 的 ElMessage\n      } catch (error) {\n        console.error('退出失败:', error);\n      }\n    };\n    onMounted(() => {\n      const user = JSON.parse(localStorage.getItem('user'));\n      name.value = user.username;\n      const button = document.querySelector('button:has(img)');\n      const dropdown = document.querySelector('.absolute.right-0');\n      if (button && dropdown) {\n        button.addEventListener('click', function () {\n          dropdown.classList.toggle('hidden');\n        });\n      }\n    });\n    const __returned__ = {\n      route,\n      currentTitle,\n      name,\n      router,\n      handleLogout,\n      onMounted,\n      ref,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["onMounted","ref","watch","useRoute","useRouter","route","currentTitle","name","meta","title","newTitle","value","immediate","router","handleLogout","localStorage","removeItem","push","error","console","user","JSON","parse","getItem","username","button","document","querySelector","dropdown","addEventListener","classList","toggle"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/src/components/SelfPage.vue"],"sourcesContent":["<template>\r\n  <header class=\"bg-white shadow-sm\">\r\n    <div class=\"flex justify-between items-center px-8 py-4\">\r\n      <div class=\"text-xl font-medium\">{{ currentTitle }}</div>\r\n      <div class=\"relative\">\r\n        <button class=\"flex items-center space-x-3 !rounded-button\">\r\n          <img src=\"https://ai-public.mastergo.com/ai/img_res/c7de0a2547793954cd19a41b0e9ca26a.jpg\"\r\n            class=\"w-10 h-10 rounded-full object-cover\" alt=\"用户头像\">\r\n          <span class=\"text-gray-700\">{{name}}</span>\r\n          <i class=\"fas fa-chevron-down text-gray-400 text-sm\"></i>\r\n        </button>\r\n        <div class=\"absolute right-0 mt-2 w-48 bg-white rounded shadow-lg py-2 hidden\">\r\n          <a href=\"#\" class=\"block px-4 py-2 text-gray-700 hover:bg-gray-100\">\r\n            <i class=\"fas fa-user mr-2\"></i>个人设置\r\n          </a>\r\n          <a href=\"#\" class=\"block px-4 py-2 text-gray-700 hover:bg-gray-100\">\r\n            <i class=\"fas fa-bell mr-2\"></i>消息通知\r\n          </a>\r\n          <a href=\"#\" class=\"block px-4 py-2 text-gray-700 hover:bg-gray-100\" @click=\"handleLogout\">\r\n            <i class=\"fas fa-sign-out-alt mr-2\"></i>退出登录\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </header>\r\n</template>\r\n  \r\n  <script setup>\r\nimport { onMounted, ref, watch } from 'vue';\r\nimport { useRoute } from 'vue-router';\r\nconst route = useRoute();\r\nconst currentTitle = ref('');\r\nconst name = ref('');\r\nwatch(\r\n  () => route.meta.title,  // 直接监听meta.title\r\n  (newTitle) => {\r\n    currentTitle.value = newTitle || '默认标题';\r\n  },\r\n  { immediate: true }\r\n);\r\n\r\n  import { useRouter } from 'vue-router'\r\n\r\n  const router = useRouter()\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // 1. 调用后端退出接口（如果有）\r\n      // await logoutApi()\r\n\r\n      // 2. 清除本地认证信息\r\n      localStorage.removeItem('user')\r\n\r\n      // 3. 跳转到登录页\r\n      router.push('/architecture')\r\n\r\n      // 4. 显示提示\r\n      // 使用你喜欢的通知库，如 Element Plus 的 ElMessage\r\n    } catch (error) {\r\n      console.error('退出失败:', error)\r\n    }\r\n  }\r\n  onMounted(() => {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n    name.value = user.username;\r\n  const button = document.querySelector('button:has(img)');\r\n  const dropdown = document.querySelector('.absolute.right-0');\r\n    \r\n  if (button && dropdown) {\r\n    button.addEventListener('click', function () {\r\n      dropdown.classList.toggle('hidden');\r\n    });\r\n  }\r\n});\r\n\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* 这里可以添加一些样式 */\r\n  </style>\r\n  "],"mappings":";AA4BA,SAASA,SAAS,EAAEC,GAAG,EAAEC,KAAK,QAAQ,KAAK;AAC3C,SAASC,QAAQ,QAAQ,YAAY;AAYnC,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAXxC,MAAMC,KAAK,GAAGF,QAAQ,CAAC,CAAC;IACxB,MAAMG,YAAY,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMM,IAAI,GAAGN,GAAG,CAAC,EAAE,CAAC;IACpBC,KAAK,CACH,MAAMG,KAAK,CAACG,IAAI,CAACC,KAAK;IAAG;IACxBC,QAAQ,IAAK;MACZJ,YAAY,CAACK,KAAK,GAAGD,QAAQ,IAAI,MAAM;IACzC,CAAC,EACD;MAAEE,SAAS,EAAE;IAAK,CACpB,CAAC;IAIC,MAAMC,MAAM,GAAGT,SAAS,CAAC,CAAC;IAE1B,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA;;QAEA;QACAC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;;QAE/B;QACAH,MAAM,CAACI,IAAI,CAAC,eAAe,CAAC;;QAE5B;QACA;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;MAC/B;IACF,CAAC;IACDlB,SAAS,CAAC,MAAM;MACd,MAAMoB,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC;MACrDhB,IAAI,CAACI,KAAK,GAAGS,IAAI,CAACI,QAAQ;MAC5B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;MACxD,MAAMC,QAAQ,GAAGF,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;MAE5D,IAAIF,MAAM,IAAIG,QAAQ,EAAE;QACtBH,MAAM,CAACI,gBAAgB,CAAC,OAAO,EAAE,YAAY;UAC3CD,QAAQ,CAACE,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;QACrC,CAAC,CAAC;MACJ;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}