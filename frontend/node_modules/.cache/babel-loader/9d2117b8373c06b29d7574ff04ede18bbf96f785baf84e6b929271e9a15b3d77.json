{"ast":null,"code":"var _Class, _Class2;\nimport { AbstractMermaidTokenBuilder, AbstractMermaidValueConverter, ArchitectureGeneratedModule, MermaidGeneratedSharedModule, __name } from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/architecture/module.ts\nimport { EmptyFileSystem, createDefaultCoreModule, createDefaultSharedCoreModule, inject } from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = (_Class = class ArchitectureTokenBuilder extends AbstractMermaidTokenBuilder {\n  constructor() {\n    super([\"architecture\"]);\n  }\n}, __name(_Class, \"ArchitectureTokenBuilder\"), _Class);\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = (_Class2 = class ArchitectureValueConverter extends AbstractMermaidValueConverter {\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n}, __name(_Class2, \"ArchitectureValueConverter\"), _Class2);\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */__name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */__name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(createDefaultSharedCoreModule(context), MermaidGeneratedSharedModule);\n  const Architecture = inject(createDefaultCoreModule({\n    shared\n  }), ArchitectureGeneratedModule, ArchitectureModule);\n  shared.ServiceRegistry.register(Architecture);\n  return {\n    shared,\n    Architecture\n  };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\nexport { ArchitectureModule, createArchitectureServices };","map":{"version":3,"names":["AbstractMermaidTokenBuilder","AbstractMermaidValueConverter","ArchitectureGeneratedModule","MermaidGeneratedSharedModule","__name","EmptyFileSystem","createDefaultCoreModule","createDefaultSharedCoreModule","inject","ArchitectureTokenBuilder","_Class","constructor","ArchitectureValueConverter","_Class2","runCustomConverter","rule","input","_cstNode","name","replace","trim","ArchitectureModule","parser","TokenBuilder","ValueConverter","createArchitectureServices","context","shared","Architecture","ServiceRegistry","register"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-C4OEIS7N.mjs"],"sourcesContent":["import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-7PKI6E2E.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n"],"mappings":";AAAA,SACEA,2BAA2B,EAC3BC,6BAA6B,EAC7BC,2BAA2B,EAC3BC,4BAA4B,EAC5BC,MAAM,QACD,sBAAsB;;AAE7B;AACA,SACEC,eAAe,EACfC,uBAAuB,EACvBC,6BAA6B,EAC7BC,MAAM,QACD,SAAS;;AAEhB;AACA,IAAIC,wBAAwB,IAAAC,MAAA,GAAG,MAA3BD,wBAAwB,SAAiBT,2BAA2B,CAAC;EAIvEW,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC,cAAc,CAAC,CAAC;EACzB;AACF,CAAC,EALGP,MAAM,CAAAM,MAAA,EAAO,0BAA0B,CAAC,EAAAA,MAAA,CAK3C;;AAED;AACA,IAAIE,0BAA0B,IAAAC,OAAA,GAAG,MAA7BD,0BAA0B,SAAiBX,6BAA6B,CAAC;EAI3Ea,kBAAkBA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IACxC,IAAIF,IAAI,CAACG,IAAI,KAAK,WAAW,EAAE;MAC7B,OAAOF,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;IAC1C,CAAC,MAAM,IAAIL,IAAI,CAACG,IAAI,KAAK,gBAAgB,EAAE;MACzC,OAAOF,KAAK,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;IACpC,CAAC,MAAM,IAAIJ,IAAI,CAACG,IAAI,KAAK,YAAY,EAAE;MACrC,OAAOF,KAAK,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;IAC3C;IACA,OAAO,KAAK,CAAC;EACf;AACF,CAAC,EAZGhB,MAAM,CAAAS,OAAA,EAAO,4BAA4B,CAAC,EAAAA,OAAA,CAY7C;;AAED;AACA,IAAIQ,kBAAkB,GAAG;EACvBC,MAAM,EAAE;IACNC,YAAY,EAAE,eAAgBnB,MAAM,CAAC,MAAM,IAAIK,wBAAwB,CAAC,CAAC,EAAE,cAAc,CAAC;IAC1Fe,cAAc,EAAE,eAAgBpB,MAAM,CAAC,MAAM,IAAIQ,0BAA0B,CAAC,CAAC,EAAE,gBAAgB;EACjG;AACF,CAAC;AACD,SAASa,0BAA0BA,CAACC,OAAO,GAAGrB,eAAe,EAAE;EAC7D,MAAMsB,MAAM,GAAGnB,MAAM,CACnBD,6BAA6B,CAACmB,OAAO,CAAC,EACtCvB,4BACF,CAAC;EACD,MAAMyB,YAAY,GAAGpB,MAAM,CACzBF,uBAAuB,CAAC;IAAEqB;EAAO,CAAC,CAAC,EACnCzB,2BAA2B,EAC3BmB,kBACF,CAAC;EACDM,MAAM,CAACE,eAAe,CAACC,QAAQ,CAACF,YAAY,CAAC;EAC7C,OAAO;IAAED,MAAM;IAAEC;EAAa,CAAC;AACjC;AACAxB,MAAM,CAACqB,0BAA0B,EAAE,4BAA4B,CAAC;AAEhE,SACEJ,kBAAkB,EAClBI,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}