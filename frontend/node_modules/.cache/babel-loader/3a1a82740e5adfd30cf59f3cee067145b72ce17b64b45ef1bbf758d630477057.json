{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\n/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { findRootNode, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nconst ref_resolving = Symbol('ref_resolving');\nexport class DefaultLinker {\n  constructor(services) {\n    this.reflection = services.shared.AstReflection;\n    this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n    this.scopeProvider = services.references.ScopeProvider;\n    this.astNodeLocator = services.workspace.AstNodeLocator;\n  }\n  async link(document, cancelToken = CancellationToken.None) {\n    for (const node of streamAst(document.parseResult.value)) {\n      await interruptAndCheck(cancelToken);\n      streamReferences(node).forEach(ref => this.doLink(ref, document));\n    }\n  }\n  doLink(refInfo, document) {\n    var _a;\n    const ref = refInfo.reference;\n    // The reference may already have been resolved lazily by accessing its `ref` property.\n    if (ref._ref === undefined) {\n      ref._ref = ref_resolving;\n      try {\n        const description = this.getCandidate(refInfo);\n        if (isLinkingError(description)) {\n          ref._ref = description;\n        } else {\n          ref._nodeDescription = description;\n          if (this.langiumDocuments().hasDocument(description.documentUri)) {\n            // The target document is already loaded\n            const linkedNode = this.loadAstNode(description);\n            ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n          } else {\n            // Try to load the target AST node later using the already provided description\n            ref._ref = undefined;\n          }\n        }\n      } catch (err) {\n        console.error(`An error occurred while resolving reference to '${ref.$refText}':`, err);\n        const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n        ref._ref = Object.assign(Object.assign({}, refInfo), {\n          message: `An error occurred while resolving reference to '${ref.$refText}': ${errorMessage}`\n        });\n      }\n      // Add the reference to the document's array of references\n      // Only add if the reference has been not been resolved earlier\n      // Otherwise we end up with duplicates\n      // See also implementation of `buildReference`\n      document.references.push(ref);\n    }\n  }\n  unlink(document) {\n    for (const ref of document.references) {\n      delete ref._ref;\n      delete ref._nodeDescription;\n    }\n    document.references = [];\n  }\n  getCandidate(refInfo) {\n    const scope = this.scopeProvider.getScope(refInfo);\n    const description = scope.getElement(refInfo.reference.$refText);\n    return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n  }\n  buildReference(node, property, refNode, refText) {\n    // See behavior description in doc of Linker, update that on changes in here.\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const linker = this;\n    const reference = {\n      $refNode: refNode,\n      $refText: refText,\n      get ref() {\n        var _a;\n        if (isAstNode(this._ref)) {\n          // Most frequent case: the target is already resolved.\n          return this._ref;\n        } else if (isAstNodeDescription(this._nodeDescription)) {\n          // A candidate has been found before, but it is not loaded yet.\n          const linkedNode = linker.loadAstNode(this._nodeDescription);\n          this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({\n            reference,\n            container: node,\n            property\n          }, this._nodeDescription);\n        } else if (this._ref === undefined) {\n          // The reference has not been linked yet, so do that now.\n          this._ref = ref_resolving;\n          const document = findRootNode(node).$document;\n          const refData = linker.getLinkedNode({\n            reference,\n            container: node,\n            property\n          });\n          if (refData.error && document && document.state < DocumentState.ComputedScopes) {\n            // Document scope is not ready, don't set `this._ref` so linker can retry later.\n            return this._ref = undefined;\n          }\n          this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n          this._nodeDescription = refData.descr;\n          document === null || document === void 0 ? void 0 : document.references.push(this);\n        } else if (this._ref === ref_resolving) {\n          throw new Error(`Cyclic reference resolution detected: ${linker.astNodeLocator.getAstNodePath(node)}/${property} (symbol '${refText}')`);\n        }\n        return isAstNode(this._ref) ? this._ref : undefined;\n      },\n      get $nodeDescription() {\n        return this._nodeDescription;\n      },\n      get error() {\n        return isLinkingError(this._ref) ? this._ref : undefined;\n      }\n    };\n    return reference;\n  }\n  getLinkedNode(refInfo) {\n    var _a;\n    try {\n      const description = this.getCandidate(refInfo);\n      if (isLinkingError(description)) {\n        return {\n          error: description\n        };\n      }\n      const linkedNode = this.loadAstNode(description);\n      if (linkedNode) {\n        return {\n          node: linkedNode,\n          descr: description\n        };\n      } else {\n        return {\n          descr: description,\n          error: this.createLinkingError(refInfo, description)\n        };\n      }\n    } catch (err) {\n      console.error(`An error occurred while resolving reference to '${refInfo.reference.$refText}':`, err);\n      const errorMessage = (_a = err.message) !== null && _a !== void 0 ? _a : String(err);\n      return {\n        error: Object.assign(Object.assign({}, refInfo), {\n          message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${errorMessage}`\n        })\n      };\n    }\n  }\n  loadAstNode(nodeDescription) {\n    if (nodeDescription.node) {\n      return nodeDescription.node;\n    }\n    const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n    if (!doc) {\n      return undefined;\n    }\n    return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n  }\n  createLinkingError(refInfo, targetDescription) {\n    // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n    // in the language implementation.\n    const document = findRootNode(refInfo.container).$document;\n    if (document && document.state < DocumentState.ComputedScopes) {\n      console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n    }\n    const referenceType = this.reflection.getReferenceType(refInfo);\n    return Object.assign(Object.assign({}, refInfo), {\n      message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`,\n      targetDescription\n    });\n  }\n}","map":{"version":3,"names":["CancellationToken","isAstNode","isAstNodeDescription","isLinkingError","findRootNode","streamAst","streamReferences","interruptAndCheck","DocumentState","ref_resolving","Symbol","DefaultLinker","constructor","services","reflection","shared","AstReflection","langiumDocuments","workspace","LangiumDocuments","scopeProvider","references","ScopeProvider","astNodeLocator","AstNodeLocator","link","document","cancelToken","None","node","parseResult","value","forEach","ref","doLink","refInfo","reference","_ref","undefined","description","getCandidate","_nodeDescription","hasDocument","documentUri","linkedNode","loadAstNode","createLinkingError","err","console","error","$refText","errorMessage","_a","message","String","Object","assign","push","unlink","scope","getScope","getElement","buildReference","property","refNode","refText","linker","$refNode","container","$document","refData","getLinkedNode","state","ComputedScopes","descr","Error","getAstNodePath","$nodeDescription","nodeDescription","doc","getDocument","getAstNode","path","targetDescription","warn","uri","referenceType","getReferenceType"],"sources":["../../src/references/linker.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}