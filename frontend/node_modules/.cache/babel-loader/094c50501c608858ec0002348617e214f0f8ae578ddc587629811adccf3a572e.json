{"ast":null,"code":"function splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\nexport { mergeDefsAndContent, splitSVGDefs, wrapSVGContent };","map":{"version":3,"names":["splitSVGDefs","content","tag","defs","index","indexOf","start","end","endEnd","slice","trim","mergeDefsAndContent","wrapSVGContent","body","split"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/@iconify/utils/lib/svg/defs.mjs"],"sourcesContent":["function splitSVGDefs(content, tag = \"defs\") {\n  let defs = \"\";\n  const index = content.indexOf(\"<\" + tag);\n  while (index >= 0) {\n    const start = content.indexOf(\">\", index);\n    const end = content.indexOf(\"</\" + tag);\n    if (start === -1 || end === -1) {\n      break;\n    }\n    const endEnd = content.indexOf(\">\", end);\n    if (endEnd === -1) {\n      break;\n    }\n    defs += content.slice(start + 1, end).trim();\n    content = content.slice(0, index).trim() + content.slice(endEnd + 1);\n  }\n  return {\n    defs,\n    content\n  };\n}\nfunction mergeDefsAndContent(defs, content) {\n  return defs ? \"<defs>\" + defs + \"</defs>\" + content : content;\n}\nfunction wrapSVGContent(body, start, end) {\n  const split = splitSVGDefs(body);\n  return mergeDefsAndContent(split.defs, start + split.content + end);\n}\n\nexport { mergeDefsAndContent, splitSVGDefs, wrapSVGContent };\n"],"mappings":"AAAA,SAASA,YAAYA,CAACC,OAAO,EAAEC,GAAG,GAAG,MAAM,EAAE;EAC3C,IAAIC,IAAI,GAAG,EAAE;EACb,MAAMC,KAAK,GAAGH,OAAO,CAACI,OAAO,CAAC,GAAG,GAAGH,GAAG,CAAC;EACxC,OAAOE,KAAK,IAAI,CAAC,EAAE;IACjB,MAAME,KAAK,GAAGL,OAAO,CAACI,OAAO,CAAC,GAAG,EAAED,KAAK,CAAC;IACzC,MAAMG,GAAG,GAAGN,OAAO,CAACI,OAAO,CAAC,IAAI,GAAGH,GAAG,CAAC;IACvC,IAAII,KAAK,KAAK,CAAC,CAAC,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAE;MAC9B;IACF;IACA,MAAMC,MAAM,GAAGP,OAAO,CAACI,OAAO,CAAC,GAAG,EAAEE,GAAG,CAAC;IACxC,IAAIC,MAAM,KAAK,CAAC,CAAC,EAAE;MACjB;IACF;IACAL,IAAI,IAAIF,OAAO,CAACQ,KAAK,CAACH,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC,CAACG,IAAI,CAAC,CAAC;IAC5CT,OAAO,GAAGA,OAAO,CAACQ,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC,CAACM,IAAI,CAAC,CAAC,GAAGT,OAAO,CAACQ,KAAK,CAACD,MAAM,GAAG,CAAC,CAAC;EACtE;EACA,OAAO;IACLL,IAAI;IACJF;EACF,CAAC;AACH;AACA,SAASU,mBAAmBA,CAACR,IAAI,EAAEF,OAAO,EAAE;EAC1C,OAAOE,IAAI,GAAG,QAAQ,GAAGA,IAAI,GAAG,SAAS,GAAGF,OAAO,GAAGA,OAAO;AAC/D;AACA,SAASW,cAAcA,CAACC,IAAI,EAAEP,KAAK,EAAEC,GAAG,EAAE;EACxC,MAAMO,KAAK,GAAGd,YAAY,CAACa,IAAI,CAAC;EAChC,OAAOF,mBAAmB,CAACG,KAAK,CAACX,IAAI,EAAEG,KAAK,GAAGQ,KAAK,CAACb,OAAO,GAAGM,GAAG,CAAC;AACrE;AAEA,SAASI,mBAAmB,EAAEX,YAAY,EAAEY,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}