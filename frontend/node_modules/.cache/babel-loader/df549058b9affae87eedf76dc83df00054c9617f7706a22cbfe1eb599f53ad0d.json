{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch, provide, computed } from 'vue';\nimport { collapseContextKey } from './constants.mjs';\nimport { castArray } from 'lodash-unified';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { isPromise } from '@vue/shared';\nimport { isBoolean } from '../../../utils/types.mjs';\nimport { throwError, debugWarn } from '../../../utils/error.mjs';\nconst SCOPE = \"ElCollapse\";\nconst useCollapse = (props, emit) => {\n  const activeNames = ref(castArray(props.modelValue));\n  const setActiveNames = _activeNames => {\n    activeNames.value = _activeNames;\n    const value = props.accordion ? activeNames.value[0] : activeNames.value;\n    emit(UPDATE_MODEL_EVENT, value);\n    emit(CHANGE_EVENT, value);\n  };\n  const handleChange = name => {\n    if (props.accordion) {\n      setActiveNames([activeNames.value[0] === name ? \"\" : name]);\n    } else {\n      const _activeNames = [...activeNames.value];\n      const index = _activeNames.indexOf(name);\n      if (index > -1) {\n        _activeNames.splice(index, 1);\n      } else {\n        _activeNames.push(name);\n      }\n      setActiveNames(_activeNames);\n    }\n  };\n  const handleItemClick = async name => {\n    const {\n      beforeCollapse\n    } = props;\n    if (!beforeCollapse) {\n      handleChange(name);\n      return;\n    }\n    const shouldChange = beforeCollapse(name);\n    const isPromiseOrBool = [isPromise(shouldChange), isBoolean(shouldChange)].includes(true);\n    if (!isPromiseOrBool) {\n      throwError(SCOPE, \"beforeCollapse must return type `Promise<boolean>` or `boolean`\");\n    }\n    if (isPromise(shouldChange)) {\n      shouldChange.then(result => {\n        if (result !== false) {\n          handleChange(name);\n        }\n      }).catch(e => {\n        debugWarn(SCOPE, `some error occurred: ${e}`);\n      });\n    } else if (shouldChange) {\n      handleChange(name);\n    }\n  };\n  watch(() => props.modelValue, () => activeNames.value = castArray(props.modelValue), {\n    deep: true\n  });\n  provide(collapseContextKey, {\n    activeNames,\n    handleItemClick\n  });\n  return {\n    activeNames,\n    setActiveNames\n  };\n};\nconst useCollapseDOM = props => {\n  const ns = useNamespace(\"collapse\");\n  const rootKls = computed(() => [ns.b(), ns.b(`icon-position-${props.expandIconPosition}`)]);\n  return {\n    rootKls\n  };\n};\nexport { useCollapse, useCollapseDOM };","map":{"version":3,"names":["SCOPE","useCollapse","props","emit","activeNames","ref","castArray","modelValue","setActiveNames","_activeNames","value","accordion","UPDATE_MODEL_EVENT","CHANGE_EVENT","handleChange","name","index","indexOf","splice","push","handleItemClick","beforeCollapse","shouldChange","isPromiseOrBool","isPromise","isBoolean","includes","throwError","then","result","catch","e","debugWarn","watch","deep","provide","collapseContextKey","useCollapseDOM","ns","useNamespace","rootKls","computed","b","expandIconPosition"],"sources":["../../../../../../packages/components/collapse/src/use-collapse.ts"],"sourcesContent":["import { computed, provide, ref, watch } from 'vue'\nimport {\n  debugWarn,\n  ensureArray,\n  isBoolean,\n  isPromise,\n  throwError,\n} from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { collapseContextKey } from './constants'\n\nimport type { SetupContext } from 'vue'\nimport type {\n  CollapseActiveName,\n  CollapseEmits,\n  CollapseProps,\n} from './collapse'\n\nconst SCOPE = 'ElCollapse'\nexport const useCollapse = (\n  props: CollapseProps,\n  emit: SetupContext<CollapseEmits>['emit']\n) => {\n  const activeNames = ref(ensureArray(props.modelValue))\n\n  const setActiveNames = (_activeNames: CollapseActiveName[]) => {\n    activeNames.value = _activeNames\n    const value = props.accordion ? activeNames.value[0] : activeNames.value\n    emit(UPDATE_MODEL_EVENT, value)\n    emit(CHANGE_EVENT, value)\n  }\n\n  const handleChange = (name: CollapseActiveName) => {\n    if (props.accordion) {\n      setActiveNames([activeNames.value[0] === name ? '' : name])\n    } else {\n      const _activeNames = [...activeNames.value]\n      const index = _activeNames.indexOf(name)\n\n      if (index > -1) {\n        _activeNames.splice(index, 1)\n      } else {\n        _activeNames.push(name)\n      }\n      setActiveNames(_activeNames)\n    }\n  }\n\n  const handleItemClick = async (name: CollapseActiveName) => {\n    const { beforeCollapse } = props\n    if (!beforeCollapse) {\n      handleChange(name)\n      return\n    }\n\n    const shouldChange = beforeCollapse(name)\n    const isPromiseOrBool = [\n      isPromise(shouldChange),\n      isBoolean(shouldChange),\n    ].includes(true)\n    if (!isPromiseOrBool) {\n      throwError(\n        SCOPE,\n        'beforeCollapse must return type `Promise<boolean>` or `boolean`'\n      )\n    }\n\n    if (isPromise(shouldChange)) {\n      shouldChange\n        .then((result) => {\n          if (result !== false) {\n            handleChange(name)\n          }\n        })\n        .catch((e) => {\n          debugWarn(SCOPE, `some error occurred: ${e}`)\n        })\n    } else if (shouldChange) {\n      handleChange(name)\n    }\n  }\n\n  watch(\n    () => props.modelValue,\n    () => (activeNames.value = ensureArray(props.modelValue)),\n    { deep: true }\n  )\n\n  provide(collapseContextKey, {\n    activeNames,\n    handleItemClick,\n  })\n  return {\n    activeNames,\n    setActiveNames,\n  }\n}\n\nexport const useCollapseDOM = (props: CollapseProps) => {\n  const ns = useNamespace('collapse')\n\n  const rootKls = computed(() => [\n    ns.b(),\n    ns.b(`icon-position-${props.expandIconPosition}`),\n  ])\n\n  return {\n    rootKls,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}