{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\n/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n  constructor(services) {\n    this.astNodeLocator = services.workspace.AstNodeLocator;\n    this.nameProvider = services.references.NameProvider;\n  }\n  createDescription(node, name, document) {\n    const doc = document !== null && document !== void 0 ? document : getDocument(node);\n    name !== null && name !== void 0 ? name : name = this.nameProvider.getName(node);\n    const path = this.astNodeLocator.getAstNodePath(node);\n    if (!name) {\n      throw new Error(`Node at path ${path} has no name.`);\n    }\n    let nameNodeSegment;\n    const nameSegmentGetter = () => {\n      var _a;\n      return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode);\n    };\n    return {\n      node,\n      name,\n      get nameSegment() {\n        return nameSegmentGetter();\n      },\n      selectionSegment: toDocumentSegment(node.$cstNode),\n      type: node.$type,\n      documentUri: doc.uri,\n      path\n    };\n  }\n}\nexport class DefaultReferenceDescriptionProvider {\n  constructor(services) {\n    this.nodeLocator = services.workspace.AstNodeLocator;\n  }\n  async createDescriptions(document, cancelToken = CancellationToken.None) {\n    const descr = [];\n    const rootNode = document.parseResult.value;\n    for (const astNode of streamAst(rootNode)) {\n      await interruptAndCheck(cancelToken);\n      streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n        // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n        const description = this.createDescription(refInfo);\n        if (description) {\n          descr.push(description);\n        }\n      });\n    }\n    return descr;\n  }\n  createDescription(refInfo) {\n    const targetNodeDescr = refInfo.reference.$nodeDescription;\n    const refCstNode = refInfo.reference.$refNode;\n    if (!targetNodeDescr || !refCstNode) {\n      return undefined;\n    }\n    const docUri = getDocument(refInfo.container).uri;\n    return {\n      sourceUri: docUri,\n      sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n      targetUri: targetNodeDescr.documentUri,\n      targetPath: targetNodeDescr.path,\n      segment: toDocumentSegment(refCstNode),\n      local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n    };\n  }\n}","map":{"version":3,"names":["CancellationToken","isLinkingError","getDocument","streamAst","streamReferences","toDocumentSegment","interruptAndCheck","UriUtils","DefaultAstNodeDescriptionProvider","constructor","services","astNodeLocator","workspace","AstNodeLocator","nameProvider","references","NameProvider","createDescription","node","name","document","doc","getName","path","getAstNodePath","Error","nameNodeSegment","nameSegmentGetter","_a","getNameNode","$cstNode","nameSegment","selectionSegment","type","$type","documentUri","uri","DefaultReferenceDescriptionProvider","nodeLocator","createDescriptions","cancelToken","None","descr","rootNode","parseResult","value","astNode","filter","refInfo","forEach","description","push","targetNodeDescr","reference","$nodeDescription","refCstNode","$refNode","undefined","docUri","container","sourceUri","sourcePath","targetUri","targetPath","segment","local","equals"],"sources":["../../src/workspace/ast-descriptions.ts"],"sourcesContent":[null],"mappings":";;;;AAAA;;;;;AAYA,SAASA,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,cAAc,QAAQ,mBAAmB;AAClD,SAASC,WAAW,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,uBAAuB;AAChF,SAASC,iBAAiB,QAAQ,uBAAuB;AACzD,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,QAAQ,QAAQ,uBAAuB;AAqBhD,OAAM,MAAOC,iCAAiC;EAK1CC,YAAYC,QAA6B;IACrC,IAAI,CAACC,cAAc,GAAGD,QAAQ,CAACE,SAAS,CAACC,cAAc;IACvD,IAAI,CAACC,YAAY,GAAGJ,QAAQ,CAACK,UAAU,CAACC,YAAY;EACxD;EAEAC,iBAAiBA,CAACC,IAAa,EAAEC,IAAwB,EAAEC,QAA0B;IACjF,MAAMC,GAAG,GAAGD,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GAAIlB,WAAW,CAACgB,IAAI,CAAC;IACzCC,IAAI,aAAJA,IAAI,cAAJA,IAAI,GAAJA,IAAI,GAAK,IAAI,CAACL,YAAY,CAACQ,OAAO,CAACJ,IAAI,CAAC;IACxC,MAAMK,IAAI,GAAG,IAAI,CAACZ,cAAc,CAACa,cAAc,CAACN,IAAI,CAAC;IACrD,IAAI,CAACC,IAAI,EAAE;MACP,MAAM,IAAIM,KAAK,CAAC,gBAAgBF,IAAI,eAAe,CAAC;IACxD;IACA,IAAIG,eAA4C;IAChD,MAAMC,iBAAiB,GAAGA,CAAA,KAAK;MAAA,IAAAC,EAAA;MAAA,OAACF,eAAe,aAAfA,eAAe,cAAfA,eAAe,GAAfA,eAAe,GAAKrB,iBAAiB,CAAC,CAAAuB,EAAA,OAAI,CAACd,YAAY,CAACe,WAAW,CAACX,IAAI,CAAC,cAAAU,EAAA,cAAAA,EAAA,GAAIV,IAAI,CAACY,QAAQ,CAAC;IAAA;IAC3H,OAAO;MACHZ,IAAI;MACJC,IAAI;MACJ,IAAIY,WAAWA,CAAA;QACX,OAAOJ,iBAAiB,EAAE;MAC9B,CAAC;MACDK,gBAAgB,EAAE3B,iBAAiB,CAACa,IAAI,CAACY,QAAQ,CAAC;MAClDG,IAAI,EAAEf,IAAI,CAACgB,KAAK;MAChBC,WAAW,EAAEd,GAAG,CAACe,GAAG;MACpBb;KACH;EACL;;AAuCJ,OAAM,MAAOc,mCAAmC;EAI5C5B,YAAYC,QAA6B;IACrC,IAAI,CAAC4B,WAAW,GAAG5B,QAAQ,CAACE,SAAS,CAACC,cAAc;EACxD;EAEA,MAAM0B,kBAAkBA,CAACnB,QAAyB,EAAEoB,WAAW,GAAGxC,iBAAiB,CAACyC,IAAI;IACpF,MAAMC,KAAK,GAA2B,EAAE;IACxC,MAAMC,QAAQ,GAAGvB,QAAQ,CAACwB,WAAW,CAACC,KAAK;IAC3C,KAAK,MAAMC,OAAO,IAAI3C,SAAS,CAACwC,QAAQ,CAAC,EAAE;MACvC,MAAMrC,iBAAiB,CAACkC,WAAW,CAAC;MACpCpC,gBAAgB,CAAC0C,OAAO,CAAC,CAACC,MAAM,CAACC,OAAO,IAAI,CAAC/C,cAAc,CAAC+C,OAAO,CAAC,CAAC,CAACC,OAAO,CAACD,OAAO,IAAG;QACpF;QACA,MAAME,WAAW,GAAG,IAAI,CAACjC,iBAAiB,CAAC+B,OAAO,CAAC;QACnD,IAAIE,WAAW,EAAE;UACbR,KAAK,CAACS,IAAI,CAACD,WAAW,CAAC;QAC3B;MACJ,CAAC,CAAC;IACN;IACA,OAAOR,KAAK;EAChB;EAEUzB,iBAAiBA,CAAC+B,OAAsB;IAC9C,MAAMI,eAAe,GAAGJ,OAAO,CAACK,SAAS,CAACC,gBAAgB;IAC1D,MAAMC,UAAU,GAAGP,OAAO,CAACK,SAAS,CAACG,QAAQ;IAC7C,IAAI,CAACJ,eAAe,IAAI,CAACG,UAAU,EAAE;MACjC,OAAOE,SAAS;IACpB;IACA,MAAMC,MAAM,GAAGxD,WAAW,CAAC8C,OAAO,CAACW,SAAS,CAAC,CAACvB,GAAG;IACjD,OAAO;MACHwB,SAAS,EAAEF,MAAM;MACjBG,UAAU,EAAE,IAAI,CAACvB,WAAW,CAACd,cAAc,CAACwB,OAAO,CAACW,SAAS,CAAC;MAC9DG,SAAS,EAAEV,eAAe,CAACjB,WAAW;MACtC4B,UAAU,EAAEX,eAAe,CAAC7B,IAAI;MAChCyC,OAAO,EAAE3D,iBAAiB,CAACkD,UAAU,CAAC;MACtCU,KAAK,EAAE1D,QAAQ,CAAC2D,MAAM,CAACd,eAAe,CAACjB,WAAW,EAAEuB,MAAM;KAC7D;EACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}