{"ast":null,"code":"/* IMPORT */\nimport Color from '../color/index.js';\nimport rgba from './rgba.js';\n/* MAIN */\n//SOURCE: https://github.com/sass/dart-sass/blob/7457d2e9e7e623d9844ffd037a070cf32d39c348/lib/src/functions/color.dart#L718-L756\nconst mix = (color1, color2, weight = 50) => {\n  const {\n    r: r1,\n    g: g1,\n    b: b1,\n    a: a1\n  } = Color.parse(color1);\n  const {\n    r: r2,\n    g: g2,\n    b: b2,\n    a: a2\n  } = Color.parse(color2);\n  const weightScale = weight / 100;\n  const weightNormalized = weightScale * 2 - 1;\n  const alphaDelta = a1 - a2;\n  const weight1combined = weightNormalized * alphaDelta === -1 ? weightNormalized : (weightNormalized + alphaDelta) / (1 + weightNormalized * alphaDelta);\n  const weight1 = (weight1combined + 1) / 2;\n  const weight2 = 1 - weight1;\n  const r = r1 * weight1 + r2 * weight2;\n  const g = g1 * weight1 + g2 * weight2;\n  const b = b1 * weight1 + b2 * weight2;\n  const a = a1 * weightScale + a2 * (1 - weightScale);\n  return rgba(r, g, b, a);\n};\n/* EXPORT */\nexport default mix;","map":{"version":3,"names":["Color","rgba","mix","color1","color2","weight","r","r1","g","g1","b","b1","a","a1","parse","r2","g2","b2","a2","weightScale","weightNormalized","alphaDelta","weight1combined","weight1","weight2"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/khroma/dist/methods/mix.js"],"sourcesContent":["/* IMPORT */\nimport Color from '../color/index.js';\nimport rgba from './rgba.js';\n/* MAIN */\n//SOURCE: https://github.com/sass/dart-sass/blob/7457d2e9e7e623d9844ffd037a070cf32d39c348/lib/src/functions/color.dart#L718-L756\nconst mix = (color1, color2, weight = 50) => {\n    const { r: r1, g: g1, b: b1, a: a1 } = Color.parse(color1);\n    const { r: r2, g: g2, b: b2, a: a2 } = Color.parse(color2);\n    const weightScale = weight / 100;\n    const weightNormalized = (weightScale * 2) - 1;\n    const alphaDelta = a1 - a2;\n    const weight1combined = ((weightNormalized * alphaDelta) === -1) ? weightNormalized : (weightNormalized + alphaDelta) / (1 + weightNormalized * alphaDelta);\n    const weight1 = (weight1combined + 1) / 2;\n    const weight2 = 1 - weight1;\n    const r = (r1 * weight1) + (r2 * weight2);\n    const g = (g1 * weight1) + (g2 * weight2);\n    const b = (b1 * weight1) + (b2 * weight2);\n    const a = (a1 * weightScale) + (a2 * (1 - weightScale));\n    return rgba(r, g, b, a);\n};\n/* EXPORT */\nexport default mix;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,mBAAmB;AACrC,OAAOC,IAAI,MAAM,WAAW;AAC5B;AACA;AACA,MAAMC,GAAG,GAAGA,CAACC,MAAM,EAAEC,MAAM,EAAEC,MAAM,GAAG,EAAE,KAAK;EACzC,MAAM;IAAEC,CAAC,EAAEC,EAAE;IAAEC,CAAC,EAAEC,EAAE;IAAEC,CAAC,EAAEC,EAAE;IAAEC,CAAC,EAAEC;EAAG,CAAC,GAAGb,KAAK,CAACc,KAAK,CAACX,MAAM,CAAC;EAC1D,MAAM;IAAEG,CAAC,EAAES,EAAE;IAAEP,CAAC,EAAEQ,EAAE;IAAEN,CAAC,EAAEO,EAAE;IAAEL,CAAC,EAAEM;EAAG,CAAC,GAAGlB,KAAK,CAACc,KAAK,CAACV,MAAM,CAAC;EAC1D,MAAMe,WAAW,GAAGd,MAAM,GAAG,GAAG;EAChC,MAAMe,gBAAgB,GAAID,WAAW,GAAG,CAAC,GAAI,CAAC;EAC9C,MAAME,UAAU,GAAGR,EAAE,GAAGK,EAAE;EAC1B,MAAMI,eAAe,GAAKF,gBAAgB,GAAGC,UAAU,KAAM,CAAC,CAAC,GAAID,gBAAgB,GAAG,CAACA,gBAAgB,GAAGC,UAAU,KAAK,CAAC,GAAGD,gBAAgB,GAAGC,UAAU,CAAC;EAC3J,MAAME,OAAO,GAAG,CAACD,eAAe,GAAG,CAAC,IAAI,CAAC;EACzC,MAAME,OAAO,GAAG,CAAC,GAAGD,OAAO;EAC3B,MAAMjB,CAAC,GAAIC,EAAE,GAAGgB,OAAO,GAAKR,EAAE,GAAGS,OAAQ;EACzC,MAAMhB,CAAC,GAAIC,EAAE,GAAGc,OAAO,GAAKP,EAAE,GAAGQ,OAAQ;EACzC,MAAMd,CAAC,GAAIC,EAAE,GAAGY,OAAO,GAAKN,EAAE,GAAGO,OAAQ;EACzC,MAAMZ,CAAC,GAAIC,EAAE,GAAGM,WAAW,GAAKD,EAAE,IAAI,CAAC,GAAGC,WAAW,CAAE;EACvD,OAAOlB,IAAI,CAACK,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;AAC3B,CAAC;AACD;AACA,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}