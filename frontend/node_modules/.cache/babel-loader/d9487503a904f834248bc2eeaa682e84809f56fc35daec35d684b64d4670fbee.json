{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from \"vue\";\nimport axios from \"axios\";\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'LoginPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const username = ref(\"\");\n    const password = ref(\"\");\n    const rememberPassword = ref(false);\n    const showPassword = ref(false);\n    const clearUsername = () => {\n      username.value = \"\";\n    };\n    const togglePassword = () => {\n      showPassword.value = !showPassword.value;\n    };\n    const handleLogin = async () => {\n      if (!username.value || !password.value) {\n        alert(\"请输入用户名和密码\");\n        return;\n      }\n      try {\n        const response = await axios.post(\"http://127.0.0.1:5000/api/login\", {\n          username: username.value,\n          password: password.value,\n          rememberPassword: rememberPassword.value\n        });\n\n        // 存储到 localStorage\n        localStorage.setItem('user', JSON.stringify({\n          id: response.data.user_id,\n          username: response.data.username\n        }));\n        console.log(r);\n        if (response.data.message === \"Login successful\") {\n          router.push('/requirements');\n\n          // 登录成功后的处理\n          console.log(\"Login successful\");\n        } else {\n          // 登录失败的处理\n          console.log(\"登录失败\");\n        }\n      } catch (error) {\n        console.error(\"登录请求失败:\", error);\n      }\n    };\n    const showRegister = ref(false);\n    const registerUsername = ref('');\n    const registerPassword = ref('');\n    const registerError = ref('');\n    const registerSuccess = ref('');\n    const submitRegister = async () => {\n      registerError.value = '';\n      registerSuccess.value = '';\n      if (!registerUsername.value || !registerPassword.value) {\n        registerError.value = '请输入用户名和密码';\n        return;\n      }\n      try {\n        const response = await axios.post('/api/register', {\n          username: registerUsername.value,\n          password: registerPassword.value\n        });\n        if (response.data.message === 'Register successful') {\n          registerSuccess.value = '注册成功！请返回登录';\n          setTimeout(() => {\n            showRegister.value = false;\n            registerUsername.value = '';\n            registerPassword.value = '';\n          }, 1500);\n        }\n      } catch (err) {\n        registerError.value = err.response?.data?.error || '注册失败';\n      }\n    };\n    const __returned__ = {\n      router,\n      username,\n      password,\n      rememberPassword,\n      showPassword,\n      clearUsername,\n      togglePassword,\n      handleLogin,\n      showRegister,\n      registerUsername,\n      registerPassword,\n      registerError,\n      registerSuccess,\n      submitRegister,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","router","username","password","rememberPassword","showPassword","clearUsername","value","togglePassword","handleLogin","alert","response","post","localStorage","setItem","JSON","stringify","id","data","user_id","console","log","r","message","push","error","showRegister","registerUsername","registerPassword","registerError","registerSuccess","submitRegister","setTimeout","err"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/src/views/LoginPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"min-h-screen w-full bg-gray-50 flex items-center justify-center bg-image\">\r\n          <div class=\"bg-white p-8 rounded-lg shadow-xl w-[420px] relative\">\r\n              <div class=\"text-center mb-8\">\r\n                  <!-- <img src=\"https://ai-public.mastergo.com/ai/img_res/726384cc65a0f97c97beb2433acac92d.jpg\" alt=\"公司标志\"\r\n                      class=\"w-16 h-16 mx-auto mb-4 object-cover\"> -->\r\n                  <h2 class=\"text-2xl font-bold text-gray-800\">欢迎登录</h2>\r\n                  <p class=\"text-gray-500 mt-2\">登录后开启您的专属服务</p>\r\n              </div>\r\n      <div class=\"space-y-6\">\r\n        <div class=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            v-model=\"username\"\r\n            placeholder=\"用户名/手机号\"\r\n            class=\"w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:border-primary text-sm\"\r\n          />\r\n          <i\r\n            class=\"fas fa-times-circle absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 cursor-pointer\"\r\n            :class=\"{ hidden: !username }\"\r\n            @click=\"clearUsername\"\r\n          ></i>\r\n        </div>\r\n    \r\n        <div class=\"relative\">\r\n          <input\r\n            :type=\"showPassword ? 'text' : 'password'\"\r\n            id=\"password\"\r\n            v-model=\"password\"\r\n            placeholder=\"请输入密码\"\r\n            class=\"w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:border-primary text-sm\"\r\n          />\r\n          <i\r\n            class=\"fas cursor-pointer absolute right-3 top-1/2 -translate-y-1/2 text-gray-400\"\r\n            :class=\"showPassword ? 'fa-eye-slash' : 'fa-eye'\"\r\n            @click=\"togglePassword\"\r\n          ></i>\r\n        </div>\r\n    \r\n        <div class=\"flex items-center justify-between text-sm\">\r\n          <label class=\"flex items-center space-x-2 cursor-pointer\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"rememberPassword\"\r\n              v-model=\"rememberPassword\"\r\n              class=\"rounded text-primary\"\r\n            />\r\n            <span class=\"text-gray-600\">记住密码</span>\r\n          </label>\r\n          <a href=\"#\" class=\"text-primary hover:text-blue-600\">忘记密码？</a>\r\n        </div>\r\n    \r\n        <button\r\n          @click=\"handleLogin\"\r\n          class=\"w-full bg-primary text-white py-3 rounded-lg hover:bg-blue-600 transition-colors !rounded-button whitespace-nowrap\"\r\n        >\r\n          登录\r\n        </button>\r\n    \r\n        <div class=\"text-center\">\r\n          <p class=\"text-gray-500 text-sm\">\r\n            还没有账号？\r\n            <a href=\"#\" @click.prevent=\"showRegister = true\" class=\"text-primary hover:text-blue-600\">立即注册</a>\r\n  \r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <!-- 注册弹窗 -->\r\n  <div\r\n    v-if=\"showRegister\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50\"\r\n  >\r\n    <div class=\"bg-white rounded-lg p-6 w-96 shadow-lg relative\">\r\n      <h2 class=\"text-xl font-semibold text-gray-800 mb-4\">注册新账号</h2>\r\n  \r\n      <input\r\n        v-model=\"registerUsername\"\r\n        type=\"text\"\r\n        placeholder=\"请输入用户名\"\r\n        class=\"w-full mb-3 p-2 border rounded\"\r\n      />\r\n      <input\r\n        v-model=\"registerPassword\"\r\n        type=\"password\"\r\n        placeholder=\"请输入密码\"\r\n        class=\"w-full mb-4 p-2 border rounded\"\r\n      />\r\n  \r\n      <div class=\"flex justify-end space-x-3\">\r\n        <button @click=\"showRegister = false\" class=\"px-4 py-2 text-gray-600 border rounded\">取消</button>\r\n        <button @click=\"submitRegister\" class=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">注册</button>\r\n      </div>\r\n  \r\n      <p class=\"text-sm text-red-500 mt-2\" v-if=\"registerError\">{{ registerError }}</p>\r\n      <p class=\"text-sm text-green-500 mt-2\" v-if=\"registerSuccess\">{{ registerSuccess }}</p>\r\n    </div>\r\n  </div>\r\n  \r\n    </template>\r\n    \r\n    <script setup>\r\n    import { ref } from \"vue\";\r\n    import axios from \"axios\";\r\n    import { useRouter } from 'vue-router'\r\n  \r\n  const router = useRouter()\r\n    const username = ref(\"\");\r\n    const password = ref(\"\");\r\n    const rememberPassword = ref(false);\r\n    const showPassword = ref(false);\r\n    \r\n    const clearUsername = () => {\r\n      username.value = \"\";\r\n    };\r\n    \r\n    const togglePassword = () => {\r\n      showPassword.value = !showPassword.value;\r\n    };\r\n    \r\n    const handleLogin = async () => {\r\n      if (!username.value || !password.value) {\r\n        alert(\"请输入用户名和密码\");\r\n        return;\r\n      }\r\n    \r\n      try {\r\n        const response = await axios.post(\"http://127.0.0.1:5000/api/login\", {\r\n          username: username.value,\r\n          password: password.value,\r\n          rememberPassword: rememberPassword.value,\r\n        });\r\n\r\n        // 存储到 localStorage\r\n        localStorage.setItem('user', JSON.stringify({\r\n          id: response.data.user_id,\r\n          username: response.data.username\r\n        }));\r\n        console.log(r)\r\n\r\n        if (response.data.message === \"Login successful\") {\r\n          router.push('/requirements')\r\n  \r\n          // 登录成功后的处理\r\n          console.log(\"Login successful\");\r\n        } else {\r\n          // 登录失败的处理\r\n          console.log(\"登录失败\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"登录请求失败:\", error);\r\n      }\r\n    };\r\n    const showRegister = ref(false)\r\n  const registerUsername = ref('')\r\n  const registerPassword = ref('')\r\n  const registerError = ref('')\r\n  const registerSuccess = ref('')\r\n  \r\n  const submitRegister = async () => {\r\n    registerError.value = ''\r\n    registerSuccess.value = ''\r\n  \r\n    if (!registerUsername.value || !registerPassword.value) {\r\n      registerError.value = '请输入用户名和密码'\r\n      return\r\n    }\r\n  \r\n    try {\r\n      const response = await axios.post('/api/register', {\r\n        username: registerUsername.value,\r\n        password: registerPassword.value\r\n      })\r\n  \r\n      if (response.data.message === 'Register successful') {\r\n        registerSuccess.value = '注册成功！请返回登录'\r\n        setTimeout(() => {\r\n          showRegister.value = false\r\n          registerUsername.value = ''\r\n          registerPassword.value = ''\r\n        }, 1500)\r\n      }\r\n    } catch (err) {\r\n      registerError.value = err.response?.data?.error || '注册失败'\r\n    }\r\n  }\r\n  \r\n    </script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}