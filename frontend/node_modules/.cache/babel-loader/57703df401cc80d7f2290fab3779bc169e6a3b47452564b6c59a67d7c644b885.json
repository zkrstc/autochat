{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { getIconSVG, registerIconPacks, unknownIcon } from \"./chunk-H2D2JQ3I.mjs\";\nimport { createText } from \"./chunk-C3MQ5ANM.mjs\";\nimport { populateCommonDb } from \"./chunk-4BMEZGHF.mjs\";\nimport { ImperativeState } from \"./chunk-XZIHB7SX.mjs\";\nimport \"./chunk-O4NI6UNU.mjs\";\nimport { selectSvgElement } from \"./chunk-7B677QYD.mjs\";\nimport { __name, clear, defaultConfig_default, getAccDescription, getAccTitle, getConfig2 as getConfig, getDiagramTitle, log, setAccDescription, setAccTitle, setDiagramTitle, setupGraphViewbox } from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/architecture/architectureParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/architecture/architectureTypes.ts\nvar ArchitectureDirectionName = {\n  L: \"left\",\n  R: \"right\",\n  T: \"top\",\n  B: \"bottom\"\n};\nvar ArchitectureDirectionArrow = {\n  L: /* @__PURE__ */__name(scale => `${scale},${scale / 2} 0,${scale} 0,0`, \"L\"),\n  R: /* @__PURE__ */__name(scale => `0,${scale / 2} ${scale},0 ${scale},${scale}`, \"R\"),\n  T: /* @__PURE__ */__name(scale => `0,0 ${scale},0 ${scale / 2},${scale}`, \"T\"),\n  B: /* @__PURE__ */__name(scale => `${scale / 2},0 ${scale},${scale} 0,${scale}`, \"B\")\n};\nvar ArchitectureDirectionArrowShift = {\n  L: /* @__PURE__ */__name((orig, arrowSize) => orig - arrowSize + 2, \"L\"),\n  R: /* @__PURE__ */__name((orig, _arrowSize) => orig - 2, \"R\"),\n  T: /* @__PURE__ */__name((orig, arrowSize) => orig - arrowSize + 2, \"T\"),\n  B: /* @__PURE__ */__name((orig, _arrowSize) => orig - 2, \"B\")\n};\nvar getOppositeArchitectureDirection = /* @__PURE__ */__name(function (x) {\n  if (isArchitectureDirectionX(x)) {\n    return x === \"L\" ? \"R\" : \"L\";\n  } else {\n    return x === \"T\" ? \"B\" : \"T\";\n  }\n}, \"getOppositeArchitectureDirection\");\nvar isArchitectureDirection = /* @__PURE__ */__name(function (x) {\n  const temp = x;\n  return temp === \"L\" || temp === \"R\" || temp === \"T\" || temp === \"B\";\n}, \"isArchitectureDirection\");\nvar isArchitectureDirectionX = /* @__PURE__ */__name(function (x) {\n  const temp = x;\n  return temp === \"L\" || temp === \"R\";\n}, \"isArchitectureDirectionX\");\nvar isArchitectureDirectionY = /* @__PURE__ */__name(function (x) {\n  const temp = x;\n  return temp === \"T\" || temp === \"B\";\n}, \"isArchitectureDirectionY\");\nvar isArchitectureDirectionXY = /* @__PURE__ */__name(function (a, b) {\n  const aX_bY = isArchitectureDirectionX(a) && isArchitectureDirectionY(b);\n  const aY_bX = isArchitectureDirectionY(a) && isArchitectureDirectionX(b);\n  return aX_bY || aY_bX;\n}, \"isArchitectureDirectionXY\");\nvar isArchitecturePairXY = /* @__PURE__ */__name(function (pair) {\n  const lhs = pair[0];\n  const rhs = pair[1];\n  const aX_bY = isArchitectureDirectionX(lhs) && isArchitectureDirectionY(rhs);\n  const aY_bX = isArchitectureDirectionY(lhs) && isArchitectureDirectionX(rhs);\n  return aX_bY || aY_bX;\n}, \"isArchitecturePairXY\");\nvar isValidArchitectureDirectionPair = /* @__PURE__ */__name(function (x) {\n  return x !== \"LL\" && x !== \"RR\" && x !== \"TT\" && x !== \"BB\";\n}, \"isValidArchitectureDirectionPair\");\nvar getArchitectureDirectionPair = /* @__PURE__ */__name(function (sourceDir, targetDir) {\n  const pair = `${sourceDir}${targetDir}`;\n  return isValidArchitectureDirectionPair(pair) ? pair : void 0;\n}, \"getArchitectureDirectionPair\");\nvar shiftPositionByArchitectureDirectionPair = /* @__PURE__ */__name(function ([x, y], pair) {\n  const lhs = pair[0];\n  const rhs = pair[1];\n  if (isArchitectureDirectionX(lhs)) {\n    if (isArchitectureDirectionY(rhs)) {\n      return [x + (lhs === \"L\" ? -1 : 1), y + (rhs === \"T\" ? 1 : -1)];\n    } else {\n      return [x + (lhs === \"L\" ? -1 : 1), y];\n    }\n  } else {\n    if (isArchitectureDirectionX(rhs)) {\n      return [x + (rhs === \"L\" ? 1 : -1), y + (lhs === \"T\" ? 1 : -1)];\n    } else {\n      return [x, y + (lhs === \"T\" ? 1 : -1)];\n    }\n  }\n}, \"shiftPositionByArchitectureDirectionPair\");\nvar getArchitectureDirectionXYFactors = /* @__PURE__ */__name(function (pair) {\n  if (pair === \"LT\" || pair === \"TL\") {\n    return [1, 1];\n  } else if (pair === \"BL\" || pair === \"LB\") {\n    return [1, -1];\n  } else if (pair === \"BR\" || pair === \"RB\") {\n    return [-1, -1];\n  } else {\n    return [-1, 1];\n  }\n}, \"getArchitectureDirectionXYFactors\");\nvar getArchitectureDirectionAlignment = /* @__PURE__ */__name(function (a, b) {\n  if (isArchitectureDirectionXY(a, b)) {\n    return \"bend\";\n  } else if (isArchitectureDirectionX(a)) {\n    return \"horizontal\";\n  }\n  return \"vertical\";\n}, \"getArchitectureDirectionAlignment\");\nvar isArchitectureService = /* @__PURE__ */__name(function (x) {\n  const temp = x;\n  return temp.type === \"service\";\n}, \"isArchitectureService\");\nvar isArchitectureJunction = /* @__PURE__ */__name(function (x) {\n  const temp = x;\n  return temp.type === \"junction\";\n}, \"isArchitectureJunction\");\nvar edgeData = /* @__PURE__ */__name(edge => {\n  return edge.data();\n}, \"edgeData\");\nvar nodeData = /* @__PURE__ */__name(node => {\n  return node.data();\n}, \"nodeData\");\n\n// src/diagrams/architecture/architectureDb.ts\nvar DEFAULT_ARCHITECTURE_CONFIG = defaultConfig_default.architecture;\nvar state = new ImperativeState(() => ({\n  nodes: {},\n  groups: {},\n  edges: [],\n  registeredIds: {},\n  config: DEFAULT_ARCHITECTURE_CONFIG,\n  dataStructures: void 0,\n  elements: {}\n}));\nvar clear2 = /* @__PURE__ */__name(() => {\n  state.reset();\n  clear();\n}, \"clear\");\nvar addService = /* @__PURE__ */__name(function ({\n  id,\n  icon,\n  in: parent,\n  title,\n  iconText\n}) {\n  if (state.records.registeredIds[id] !== void 0) {\n    throw new Error(`The service id [${id}] is already in use by another ${state.records.registeredIds[id]}`);\n  }\n  if (parent !== void 0) {\n    if (id === parent) {\n      throw new Error(`The service [${id}] cannot be placed within itself`);\n    }\n    if (state.records.registeredIds[parent] === void 0) {\n      throw new Error(`The service [${id}]'s parent does not exist. Please make sure the parent is created before this service`);\n    }\n    if (state.records.registeredIds[parent] === \"node\") {\n      throw new Error(`The service [${id}]'s parent is not a group`);\n    }\n  }\n  state.records.registeredIds[id] = \"node\";\n  state.records.nodes[id] = {\n    id,\n    type: \"service\",\n    icon,\n    iconText,\n    title,\n    edges: [],\n    in: parent\n  };\n}, \"addService\");\nvar getServices = /* @__PURE__ */__name(() => Object.values(state.records.nodes).filter(isArchitectureService), \"getServices\");\nvar addJunction = /* @__PURE__ */__name(function ({\n  id,\n  in: parent\n}) {\n  state.records.registeredIds[id] = \"node\";\n  state.records.nodes[id] = {\n    id,\n    type: \"junction\",\n    edges: [],\n    in: parent\n  };\n}, \"addJunction\");\nvar getJunctions = /* @__PURE__ */__name(() => Object.values(state.records.nodes).filter(isArchitectureJunction), \"getJunctions\");\nvar getNodes = /* @__PURE__ */__name(() => Object.values(state.records.nodes), \"getNodes\");\nvar getNode = /* @__PURE__ */__name(id => state.records.nodes[id], \"getNode\");\nvar addGroup = /* @__PURE__ */__name(function ({\n  id,\n  icon,\n  in: parent,\n  title\n}) {\n  if (state.records.registeredIds[id] !== void 0) {\n    throw new Error(`The group id [${id}] is already in use by another ${state.records.registeredIds[id]}`);\n  }\n  if (parent !== void 0) {\n    if (id === parent) {\n      throw new Error(`The group [${id}] cannot be placed within itself`);\n    }\n    if (state.records.registeredIds[parent] === void 0) {\n      throw new Error(`The group [${id}]'s parent does not exist. Please make sure the parent is created before this group`);\n    }\n    if (state.records.registeredIds[parent] === \"node\") {\n      throw new Error(`The group [${id}]'s parent is not a group`);\n    }\n  }\n  state.records.registeredIds[id] = \"group\";\n  state.records.groups[id] = {\n    id,\n    icon,\n    title,\n    in: parent\n  };\n}, \"addGroup\");\nvar getGroups = /* @__PURE__ */__name(() => {\n  return Object.values(state.records.groups);\n}, \"getGroups\");\nvar addEdge = /* @__PURE__ */__name(function ({\n  lhsId,\n  rhsId,\n  lhsDir,\n  rhsDir,\n  lhsInto,\n  rhsInto,\n  lhsGroup,\n  rhsGroup,\n  title\n}) {\n  if (!isArchitectureDirection(lhsDir)) {\n    throw new Error(`Invalid direction given for left hand side of edge ${lhsId}--${rhsId}. Expected (L,R,T,B) got ${lhsDir}`);\n  }\n  if (!isArchitectureDirection(rhsDir)) {\n    throw new Error(`Invalid direction given for right hand side of edge ${lhsId}--${rhsId}. Expected (L,R,T,B) got ${rhsDir}`);\n  }\n  if (state.records.nodes[lhsId] === void 0 && state.records.groups[lhsId] === void 0) {\n    throw new Error(`The left-hand id [${lhsId}] does not yet exist. Please create the service/group before declaring an edge to it.`);\n  }\n  if (state.records.nodes[rhsId] === void 0 && state.records.groups[lhsId] === void 0) {\n    throw new Error(`The right-hand id [${rhsId}] does not yet exist. Please create the service/group before declaring an edge to it.`);\n  }\n  const lhsGroupId = state.records.nodes[lhsId].in;\n  const rhsGroupId = state.records.nodes[rhsId].in;\n  if (lhsGroup && lhsGroupId && rhsGroupId && lhsGroupId == rhsGroupId) {\n    throw new Error(`The left-hand id [${lhsId}] is modified to traverse the group boundary, but the edge does not pass through two groups.`);\n  }\n  if (rhsGroup && lhsGroupId && rhsGroupId && lhsGroupId == rhsGroupId) {\n    throw new Error(`The right-hand id [${rhsId}] is modified to traverse the group boundary, but the edge does not pass through two groups.`);\n  }\n  const edge = {\n    lhsId,\n    lhsDir,\n    lhsInto,\n    lhsGroup,\n    rhsId,\n    rhsDir,\n    rhsInto,\n    rhsGroup,\n    title\n  };\n  state.records.edges.push(edge);\n  if (state.records.nodes[lhsId] && state.records.nodes[rhsId]) {\n    state.records.nodes[lhsId].edges.push(state.records.edges[state.records.edges.length - 1]);\n    state.records.nodes[rhsId].edges.push(state.records.edges[state.records.edges.length - 1]);\n  }\n}, \"addEdge\");\nvar getEdges = /* @__PURE__ */__name(() => state.records.edges, \"getEdges\");\nvar getDataStructures = /* @__PURE__ */__name(() => {\n  if (state.records.dataStructures === void 0) {\n    const groupAlignments = {};\n    const adjList = Object.entries(state.records.nodes).reduce((prevOuter, [id, service]) => {\n      prevOuter[id] = service.edges.reduce((prevInner, edge) => {\n        const lhsGroupId = getNode(edge.lhsId)?.in;\n        const rhsGroupId = getNode(edge.rhsId)?.in;\n        if (lhsGroupId && rhsGroupId && lhsGroupId !== rhsGroupId) {\n          const alignment = getArchitectureDirectionAlignment(edge.lhsDir, edge.rhsDir);\n          if (alignment !== \"bend\") {\n            groupAlignments[lhsGroupId] ??= {};\n            groupAlignments[lhsGroupId][rhsGroupId] = alignment;\n            groupAlignments[rhsGroupId] ??= {};\n            groupAlignments[rhsGroupId][lhsGroupId] = alignment;\n          }\n        }\n        if (edge.lhsId === id) {\n          const pair = getArchitectureDirectionPair(edge.lhsDir, edge.rhsDir);\n          if (pair) {\n            prevInner[pair] = edge.rhsId;\n          }\n        } else {\n          const pair = getArchitectureDirectionPair(edge.rhsDir, edge.lhsDir);\n          if (pair) {\n            prevInner[pair] = edge.lhsId;\n          }\n        }\n        return prevInner;\n      }, {});\n      return prevOuter;\n    }, {});\n    const firstId = Object.keys(adjList)[0];\n    const visited = {\n      [firstId]: 1\n    };\n    const notVisited = Object.keys(adjList).reduce((prev, id) => id === firstId ? prev : {\n      ...prev,\n      [id]: 1\n    }, {});\n    const BFS = /* @__PURE__ */__name(startingId => {\n      const spatialMap = {\n        [startingId]: [0, 0]\n      };\n      const queue = [startingId];\n      while (queue.length > 0) {\n        const id = queue.shift();\n        if (id) {\n          visited[id] = 1;\n          delete notVisited[id];\n          const adj = adjList[id];\n          const [posX, posY] = spatialMap[id];\n          Object.entries(adj).forEach(([dir, rhsId]) => {\n            if (!visited[rhsId]) {\n              spatialMap[rhsId] = shiftPositionByArchitectureDirectionPair([posX, posY], dir);\n              queue.push(rhsId);\n            }\n          });\n        }\n      }\n      return spatialMap;\n    }, \"BFS\");\n    const spatialMaps = [BFS(firstId)];\n    while (Object.keys(notVisited).length > 0) {\n      spatialMaps.push(BFS(Object.keys(notVisited)[0]));\n    }\n    state.records.dataStructures = {\n      adjList,\n      spatialMaps,\n      groupAlignments\n    };\n  }\n  return state.records.dataStructures;\n}, \"getDataStructures\");\nvar setElementForId = /* @__PURE__ */__name((id, element) => {\n  state.records.elements[id] = element;\n}, \"setElementForId\");\nvar getElementById = /* @__PURE__ */__name(id => state.records.elements[id], \"getElementById\");\nvar db = {\n  clear: clear2,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addService,\n  getServices,\n  addJunction,\n  getJunctions,\n  getNodes,\n  getNode,\n  addGroup,\n  getGroups,\n  addEdge,\n  getEdges,\n  setElementForId,\n  getElementById,\n  getDataStructures\n};\nfunction getConfigField(field) {\n  const arch = getConfig().architecture;\n  if (arch?.[field]) {\n    return arch[field];\n  }\n  return DEFAULT_ARCHITECTURE_CONFIG[field];\n}\n__name(getConfigField, \"getConfigField\");\n\n// src/diagrams/architecture/architectureParser.ts\nvar populateDb = /* @__PURE__ */__name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  ast.groups.map(db2.addGroup);\n  ast.services.map(service => db2.addService({\n    ...service,\n    type: \"service\"\n  }));\n  ast.junctions.map(service => db2.addJunction({\n    ...service,\n    type: \"junction\"\n  }));\n  ast.edges.map(db2.addEdge);\n}, \"populateDb\");\nvar parser = {\n  parse: /* @__PURE__ */__name(async input => {\n    const ast = await parse(\"architecture\", input);\n    log.debug(ast);\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/architecture/architectureStyles.ts\nvar getStyles = /* @__PURE__ */__name(options => `\n  .edge {\n    stroke-width: ${options.archEdgeWidth};\n    stroke: ${options.archEdgeColor};\n    fill: none;\n  }\n\n  .arrow {\n    fill: ${options.archEdgeArrowColor};\n  }\n\n  .node-bkg {\n    fill: none;\n    stroke: ${options.archGroupBorderColor};\n    stroke-width: ${options.archGroupBorderWidth};\n    stroke-dasharray: 8;\n  }\n  .node-icon-text {\n    display: flex; \n    align-items: center;\n  }\n  \n  .node-icon-text > div {\n    color: #fff;\n    margin: 1px;\n    height: fit-content;\n    text-align: center;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n  }\n`, \"getStyles\");\nvar architectureStyles_default = getStyles;\n\n// src/diagrams/architecture/architectureRenderer.ts\nimport cytoscape from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\nimport { select } from \"d3\";\n\n// src/diagrams/architecture/architectureIcons.ts\nvar wrapIcon = /* @__PURE__ */__name(icon => {\n  return `<g><rect width=\"80\" height=\"80\" style=\"fill: #087ebf; stroke-width: 0px;\"/>${icon}</g>`;\n}, \"wrapIcon\");\nvar architectureIcons = {\n  prefix: \"mermaid-architecture\",\n  height: 80,\n  width: 80,\n  icons: {\n    database: {\n      body: wrapIcon('<path id=\"b\" data-name=\"4\" d=\"m20,57.86c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path id=\"c\" data-name=\"3\" d=\"m20,45.95c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path id=\"d\" data-name=\"2\" d=\"m20,34.05c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse id=\"e\" data-name=\"1\" cx=\"40\" cy=\"22.14\" rx=\"20\" ry=\"7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"20\" y1=\"57.86\" x2=\"20\" y2=\"22.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"60\" y1=\"57.86\" x2=\"60\" y2=\"22.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>')\n    },\n    server: {\n      body: wrapIcon('<rect x=\"17.5\" y=\"17.5\" width=\"45\" height=\"45\" rx=\"2\" ry=\"2\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"32.5\" x2=\"62.5\" y2=\"32.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"47.5\" x2=\"62.5\" y2=\"47.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><g><path d=\"m56.25,25c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,25c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><path d=\"m56.25,40c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,40c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><path d=\"m56.25,55c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,55c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g>')\n    },\n    disk: {\n      body: wrapIcon('<rect x=\"20\" y=\"15\" width=\"40\" height=\"50\" rx=\"1\" ry=\"1\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"24\" cy=\"19.17\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"56\" cy=\"19.17\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"24\" cy=\"60.83\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"56\" cy=\"60.83\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"40\" cy=\"33.75\" rx=\"14\" ry=\"14.58\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"40\" cy=\"33.75\" rx=\"4\" ry=\"4.17\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m37.51,42.52l-4.83,13.22c-.26.71-1.1,1.02-1.76.64l-4.18-2.42c-.66-.38-.81-1.26-.33-1.84l9.01-10.8c.88-1.05,2.56-.08,2.09,1.2Z\" style=\"fill: #fff; stroke-width: 0px;\"/>')\n    },\n    internet: {\n      body: wrapIcon('<circle cx=\"40\" cy=\"40\" r=\"22.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"40\" y1=\"17.5\" x2=\"40\" y2=\"62.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"40\" x2=\"62.5\" y2=\"40\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m39.99,17.51c-15.28,11.1-15.28,33.88,0,44.98\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m40.01,17.51c15.28,11.1,15.28,33.88,0,44.98\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"19.75\" y1=\"30.1\" x2=\"60.25\" y2=\"30.1\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"19.75\" y1=\"49.9\" x2=\"60.25\" y2=\"49.9\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>')\n    },\n    cloud: {\n      body: wrapIcon('<path d=\"m65,47.5c0,2.76-2.24,5-5,5H20c-2.76,0-5-2.24-5-5,0-1.87,1.03-3.51,2.56-4.36-.04-.21-.06-.42-.06-.64,0-2.6,2.48-4.74,5.65-4.97,1.65-4.51,6.34-7.76,11.85-7.76.86,0,1.69.08,2.5.23,2.09-1.57,4.69-2.5,7.5-2.5,6.1,0,11.19,4.38,12.28,10.17,2.14.56,3.72,2.51,3.72,4.83,0,.03,0,.07-.01.1,2.29.46,4.01,2.48,4.01,4.9Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>')\n    },\n    unknown: unknownIcon,\n    blank: {\n      body: wrapIcon(\"\")\n    }\n  }\n};\n\n// src/diagrams/architecture/svgDraw.ts\nvar drawEdges = /* @__PURE__ */__name(async function (edgesEl, cy) {\n  const padding = getConfigField(\"padding\");\n  const iconSize = getConfigField(\"iconSize\");\n  const halfIconSize = iconSize / 2;\n  const arrowSize = iconSize / 6;\n  const halfArrowSize = arrowSize / 2;\n  await Promise.all(cy.edges().map(async edge => {\n    const {\n      source,\n      sourceDir,\n      sourceArrow,\n      sourceGroup,\n      target,\n      targetDir,\n      targetArrow,\n      targetGroup,\n      label\n    } = edgeData(edge);\n    let {\n      x: startX,\n      y: startY\n    } = edge[0].sourceEndpoint();\n    const {\n      x: midX,\n      y: midY\n    } = edge[0].midpoint();\n    let {\n      x: endX,\n      y: endY\n    } = edge[0].targetEndpoint();\n    const groupEdgeShift = padding + 4;\n    if (sourceGroup) {\n      if (isArchitectureDirectionX(sourceDir)) {\n        startX += sourceDir === \"L\" ? -groupEdgeShift : groupEdgeShift;\n      } else {\n        startY += sourceDir === \"T\" ? -groupEdgeShift : groupEdgeShift + 18;\n      }\n    }\n    if (targetGroup) {\n      if (isArchitectureDirectionX(targetDir)) {\n        endX += targetDir === \"L\" ? -groupEdgeShift : groupEdgeShift;\n      } else {\n        endY += targetDir === \"T\" ? -groupEdgeShift : groupEdgeShift + 18;\n      }\n    }\n    if (!sourceGroup && db.getNode(source)?.type === \"junction\") {\n      if (isArchitectureDirectionX(sourceDir)) {\n        startX += sourceDir === \"L\" ? halfIconSize : -halfIconSize;\n      } else {\n        startY += sourceDir === \"T\" ? halfIconSize : -halfIconSize;\n      }\n    }\n    if (!targetGroup && db.getNode(target)?.type === \"junction\") {\n      if (isArchitectureDirectionX(targetDir)) {\n        endX += targetDir === \"L\" ? halfIconSize : -halfIconSize;\n      } else {\n        endY += targetDir === \"T\" ? halfIconSize : -halfIconSize;\n      }\n    }\n    if (edge[0]._private.rscratch) {\n      const g = edgesEl.insert(\"g\");\n      g.insert(\"path\").attr(\"d\", `M ${startX},${startY} L ${midX},${midY} L${endX},${endY} `).attr(\"class\", \"edge\");\n      if (sourceArrow) {\n        const xShift = isArchitectureDirectionX(sourceDir) ? ArchitectureDirectionArrowShift[sourceDir](startX, arrowSize) : startX - halfArrowSize;\n        const yShift = isArchitectureDirectionY(sourceDir) ? ArchitectureDirectionArrowShift[sourceDir](startY, arrowSize) : startY - halfArrowSize;\n        g.insert(\"polygon\").attr(\"points\", ArchitectureDirectionArrow[sourceDir](arrowSize)).attr(\"transform\", `translate(${xShift},${yShift})`).attr(\"class\", \"arrow\");\n      }\n      if (targetArrow) {\n        const xShift = isArchitectureDirectionX(targetDir) ? ArchitectureDirectionArrowShift[targetDir](endX, arrowSize) : endX - halfArrowSize;\n        const yShift = isArchitectureDirectionY(targetDir) ? ArchitectureDirectionArrowShift[targetDir](endY, arrowSize) : endY - halfArrowSize;\n        g.insert(\"polygon\").attr(\"points\", ArchitectureDirectionArrow[targetDir](arrowSize)).attr(\"transform\", `translate(${xShift},${yShift})`).attr(\"class\", \"arrow\");\n      }\n      if (label) {\n        const axis = !isArchitectureDirectionXY(sourceDir, targetDir) ? isArchitectureDirectionX(sourceDir) ? \"X\" : \"Y\" : \"XY\";\n        let width = 0;\n        if (axis === \"X\") {\n          width = Math.abs(startX - endX);\n        } else if (axis === \"Y\") {\n          width = Math.abs(startY - endY) / 1.5;\n        } else {\n          width = Math.abs(startX - endX) / 2;\n        }\n        const textElem = g.append(\"g\");\n        await createText(textElem, label, {\n          useHtmlLabels: false,\n          width,\n          classes: \"architecture-service-label\"\n        }, getConfig());\n        textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n        if (axis === \"X\") {\n          textElem.attr(\"transform\", \"translate(\" + midX + \", \" + midY + \")\");\n        } else if (axis === \"Y\") {\n          textElem.attr(\"transform\", \"translate(\" + midX + \", \" + midY + \") rotate(-90)\");\n        } else if (axis === \"XY\") {\n          const pair = getArchitectureDirectionPair(sourceDir, targetDir);\n          if (pair && isArchitecturePairXY(pair)) {\n            const bboxOrig = textElem.node().getBoundingClientRect();\n            const [x, y] = getArchitectureDirectionXYFactors(pair);\n            textElem.attr(\"dominant-baseline\", \"auto\").attr(\"transform\", `rotate(${-1 * x * y * 45})`);\n            const bboxNew = textElem.node().getBoundingClientRect();\n            textElem.attr(\"transform\", `\n                translate(${midX}, ${midY - bboxOrig.height / 2})\n                translate(${x * bboxNew.width / 2}, ${y * bboxNew.height / 2})\n                rotate(${-1 * x * y * 45}, 0, ${bboxOrig.height / 2})\n              `);\n          }\n        }\n      }\n    }\n  }));\n}, \"drawEdges\");\nvar drawGroups = /* @__PURE__ */__name(async function (groupsEl, cy) {\n  const padding = getConfigField(\"padding\");\n  const groupIconSize = padding * 0.75;\n  const fontSize = getConfigField(\"fontSize\");\n  const iconSize = getConfigField(\"iconSize\");\n  const halfIconSize = iconSize / 2;\n  await Promise.all(cy.nodes().map(async node => {\n    const data = nodeData(node);\n    if (data.type === \"group\") {\n      const {\n        h,\n        w,\n        x1,\n        y1\n      } = node.boundingBox();\n      groupsEl.append(\"rect\").attr(\"x\", x1 + halfIconSize).attr(\"y\", y1 + halfIconSize).attr(\"width\", w).attr(\"height\", h).attr(\"class\", \"node-bkg\");\n      const groupLabelContainer = groupsEl.append(\"g\");\n      let shiftedX1 = x1;\n      let shiftedY1 = y1;\n      if (data.icon) {\n        const bkgElem = groupLabelContainer.append(\"g\");\n        bkgElem.html(`<g>${await getIconSVG(data.icon, {\n          height: groupIconSize,\n          width: groupIconSize,\n          fallbackPrefix: architectureIcons.prefix\n        })}</g>`);\n        bkgElem.attr(\"transform\", \"translate(\" + (shiftedX1 + halfIconSize + 1) + \", \" + (shiftedY1 + halfIconSize + 1) + \")\");\n        shiftedX1 += groupIconSize;\n        shiftedY1 += fontSize / 2 - 1 - 2;\n      }\n      if (data.label) {\n        const textElem = groupLabelContainer.append(\"g\");\n        await createText(textElem, data.label, {\n          useHtmlLabels: false,\n          width: w,\n          classes: \"architecture-service-label\"\n        }, getConfig());\n        textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"start\").attr(\"text-anchor\", \"start\");\n        textElem.attr(\"transform\", \"translate(\" + (shiftedX1 + halfIconSize + 4) + \", \" + (shiftedY1 + halfIconSize + 2) + \")\");\n      }\n    }\n  }));\n}, \"drawGroups\");\nvar drawServices = /* @__PURE__ */__name(async function (db2, elem, services) {\n  for (const service of services) {\n    const serviceElem = elem.append(\"g\");\n    const iconSize = getConfigField(\"iconSize\");\n    if (service.title) {\n      const textElem = serviceElem.append(\"g\");\n      await createText(textElem, service.title, {\n        useHtmlLabels: false,\n        width: iconSize * 1.5,\n        classes: \"architecture-service-label\"\n      }, getConfig());\n      textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n      textElem.attr(\"transform\", \"translate(\" + iconSize / 2 + \", \" + iconSize + \")\");\n    }\n    const bkgElem = serviceElem.append(\"g\");\n    if (service.icon) {\n      bkgElem.html(`<g>${await getIconSVG(service.icon, {\n        height: iconSize,\n        width: iconSize,\n        fallbackPrefix: architectureIcons.prefix\n      })}</g>`);\n    } else if (service.iconText) {\n      bkgElem.html(`<g>${await getIconSVG(\"blank\", {\n        height: iconSize,\n        width: iconSize,\n        fallbackPrefix: architectureIcons.prefix\n      })}</g>`);\n      const textElemContainer = bkgElem.append(\"g\");\n      const fo = textElemContainer.append(\"foreignObject\").attr(\"width\", iconSize).attr(\"height\", iconSize);\n      const divElem = fo.append(\"div\").attr(\"class\", \"node-icon-text\").attr(\"style\", `height: ${iconSize}px;`).append(\"div\").html(service.iconText);\n      const fontSize = parseInt(window.getComputedStyle(divElem.node(), null).getPropertyValue(\"font-size\").replace(/\\D/g, \"\")) ?? 16;\n      divElem.attr(\"style\", `-webkit-line-clamp: ${Math.floor((iconSize - 2) / fontSize)};`);\n    } else {\n      bkgElem.append(\"path\").attr(\"class\", \"node-bkg\").attr(\"id\", \"node-\" + service.id).attr(\"d\", `M0 ${iconSize} v${-iconSize} q0,-5 5,-5 h${iconSize} q5,0 5,5 v${iconSize} H0 Z`);\n    }\n    serviceElem.attr(\"class\", \"architecture-service\");\n    const {\n      width,\n      height\n    } = serviceElem._groups[0][0].getBBox();\n    service.width = width;\n    service.height = height;\n    db2.setElementForId(service.id, serviceElem);\n  }\n  return 0;\n}, \"drawServices\");\nvar drawJunctions = /* @__PURE__ */__name(function (db2, elem, junctions) {\n  junctions.forEach(junction => {\n    const junctionElem = elem.append(\"g\");\n    const iconSize = getConfigField(\"iconSize\");\n    const bkgElem = junctionElem.append(\"g\");\n    bkgElem.append(\"rect\").attr(\"id\", \"node-\" + junction.id).attr(\"fill-opacity\", \"0\").attr(\"width\", iconSize).attr(\"height\", iconSize);\n    junctionElem.attr(\"class\", \"architecture-junction\");\n    const {\n      width,\n      height\n    } = junctionElem._groups[0][0].getBBox();\n    junctionElem.width = width;\n    junctionElem.height = height;\n    db2.setElementForId(junction.id, junctionElem);\n  });\n}, \"drawJunctions\");\n\n// src/diagrams/architecture/architectureRenderer.ts\nregisterIconPacks([{\n  name: architectureIcons.prefix,\n  icons: architectureIcons\n}]);\ncytoscape.use(fcose);\nfunction addServices(services, cy) {\n  services.forEach(service => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"service\",\n        id: service.id,\n        icon: service.icon,\n        label: service.title,\n        parent: service.in,\n        width: getConfigField(\"iconSize\"),\n        height: getConfigField(\"iconSize\")\n      },\n      classes: \"node-service\"\n    });\n  });\n}\n__name(addServices, \"addServices\");\nfunction addJunctions(junctions, cy) {\n  junctions.forEach(junction => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"junction\",\n        id: junction.id,\n        parent: junction.in,\n        width: getConfigField(\"iconSize\"),\n        height: getConfigField(\"iconSize\")\n      },\n      classes: \"node-junction\"\n    });\n  });\n}\n__name(addJunctions, \"addJunctions\");\nfunction positionNodes(db2, cy) {\n  cy.nodes().map(node => {\n    const data = nodeData(node);\n    if (data.type === \"group\") {\n      return;\n    }\n    data.x = node.position().x;\n    data.y = node.position().y;\n    const nodeElem = db2.getElementById(data.id);\n    nodeElem.attr(\"transform\", \"translate(\" + (data.x || 0) + \",\" + (data.y || 0) + \")\");\n  });\n}\n__name(positionNodes, \"positionNodes\");\nfunction addGroups(groups, cy) {\n  groups.forEach(group => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"group\",\n        id: group.id,\n        icon: group.icon,\n        label: group.title,\n        parent: group.in\n      },\n      classes: \"node-group\"\n    });\n  });\n}\n__name(addGroups, \"addGroups\");\nfunction addEdges(edges, cy) {\n  edges.forEach(parsedEdge => {\n    const {\n      lhsId,\n      rhsId,\n      lhsInto,\n      lhsGroup,\n      rhsInto,\n      lhsDir,\n      rhsDir,\n      rhsGroup,\n      title\n    } = parsedEdge;\n    const edgeType = isArchitectureDirectionXY(parsedEdge.lhsDir, parsedEdge.rhsDir) ? \"segments\" : \"straight\";\n    const edge = {\n      id: `${lhsId}-${rhsId}`,\n      label: title,\n      source: lhsId,\n      sourceDir: lhsDir,\n      sourceArrow: lhsInto,\n      sourceGroup: lhsGroup,\n      sourceEndpoint: lhsDir === \"L\" ? \"0 50%\" : lhsDir === \"R\" ? \"100% 50%\" : lhsDir === \"T\" ? \"50% 0\" : \"50% 100%\",\n      target: rhsId,\n      targetDir: rhsDir,\n      targetArrow: rhsInto,\n      targetGroup: rhsGroup,\n      targetEndpoint: rhsDir === \"L\" ? \"0 50%\" : rhsDir === \"R\" ? \"100% 50%\" : rhsDir === \"T\" ? \"50% 0\" : \"50% 100%\"\n    };\n    cy.add({\n      group: \"edges\",\n      data: edge,\n      classes: edgeType\n    });\n  });\n}\n__name(addEdges, \"addEdges\");\nfunction getAlignments(db2, spatialMaps, groupAlignments) {\n  const flattenAlignments = /* @__PURE__ */__name((alignmentObj, alignmentDir) => {\n    return Object.entries(alignmentObj).reduce((prev, [dir, alignments2]) => {\n      let cnt = 0;\n      const arr = Object.entries(alignments2);\n      if (arr.length === 1) {\n        prev[dir] = arr[0][1];\n        return prev;\n      }\n      for (let i = 0; i < arr.length - 1; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n          const [aGroupId, aNodeIds] = arr[i];\n          const [bGroupId, bNodeIds] = arr[j];\n          const alignment = groupAlignments[aGroupId]?.[bGroupId];\n          if (alignment === alignmentDir) {\n            prev[dir] ??= [];\n            prev[dir] = [...prev[dir], ...aNodeIds, ...bNodeIds];\n          } else if (aGroupId === \"default\" || bGroupId === \"default\") {\n            prev[dir] ??= [];\n            prev[dir] = [...prev[dir], ...aNodeIds, ...bNodeIds];\n          } else {\n            const keyA = `${dir}-${cnt++}`;\n            prev[keyA] = aNodeIds;\n            const keyB = `${dir}-${cnt++}`;\n            prev[keyB] = bNodeIds;\n          }\n        }\n      }\n      return prev;\n    }, {});\n  }, \"flattenAlignments\");\n  const alignments = spatialMaps.map(spatialMap => {\n    const horizontalAlignments = {};\n    const verticalAlignments = {};\n    Object.entries(spatialMap).forEach(([id, [x, y]]) => {\n      const nodeGroup = db2.getNode(id)?.in ?? \"default\";\n      horizontalAlignments[y] ??= {};\n      horizontalAlignments[y][nodeGroup] ??= [];\n      horizontalAlignments[y][nodeGroup].push(id);\n      verticalAlignments[x] ??= {};\n      verticalAlignments[x][nodeGroup] ??= [];\n      verticalAlignments[x][nodeGroup].push(id);\n    });\n    return {\n      horiz: Object.values(flattenAlignments(horizontalAlignments, \"horizontal\")).filter(arr => arr.length > 1),\n      vert: Object.values(flattenAlignments(verticalAlignments, \"vertical\")).filter(arr => arr.length > 1)\n    };\n  });\n  const [horizontal, vertical] = alignments.reduce(([prevHoriz, prevVert], {\n    horiz,\n    vert\n  }) => {\n    return [[...prevHoriz, ...horiz], [...prevVert, ...vert]];\n  }, [[], []]);\n  return {\n    horizontal,\n    vertical\n  };\n}\n__name(getAlignments, \"getAlignments\");\nfunction getRelativeConstraints(spatialMaps) {\n  const relativeConstraints = [];\n  const posToStr = /* @__PURE__ */__name(pos => `${pos[0]},${pos[1]}`, \"posToStr\");\n  const strToPos = /* @__PURE__ */__name(pos => pos.split(\",\").map(p => parseInt(p)), \"strToPos\");\n  spatialMaps.forEach(spatialMap => {\n    const invSpatialMap = Object.fromEntries(Object.entries(spatialMap).map(([id, pos]) => [posToStr(pos), id]));\n    const queue = [posToStr([0, 0])];\n    const visited = {};\n    const directions = {\n      L: [-1, 0],\n      R: [1, 0],\n      T: [0, 1],\n      B: [0, -1]\n    };\n    while (queue.length > 0) {\n      const curr = queue.shift();\n      if (curr) {\n        visited[curr] = 1;\n        const currId = invSpatialMap[curr];\n        if (currId) {\n          const currPos = strToPos(curr);\n          Object.entries(directions).forEach(([dir, shift]) => {\n            const newPos = posToStr([currPos[0] + shift[0], currPos[1] + shift[1]]);\n            const newId = invSpatialMap[newPos];\n            if (newId && !visited[newPos]) {\n              queue.push(newPos);\n              relativeConstraints.push({\n                [ArchitectureDirectionName[dir]]: newId,\n                [ArchitectureDirectionName[getOppositeArchitectureDirection(dir)]]: currId,\n                gap: 1.5 * getConfigField(\"iconSize\")\n              });\n            }\n          });\n        }\n      }\n    }\n  });\n  return relativeConstraints;\n}\n__name(getRelativeConstraints, \"getRelativeConstraints\");\nfunction layoutArchitecture(services, junctions, groups, edges, db2, {\n  spatialMaps,\n  groupAlignments\n}) {\n  return new Promise(resolve => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      style: [{\n        selector: \"edge\",\n        style: {\n          \"curve-style\": \"straight\",\n          label: \"data(label)\",\n          \"source-endpoint\": \"data(sourceEndpoint)\",\n          \"target-endpoint\": \"data(targetEndpoint)\"\n        }\n      }, {\n        selector: \"edge.segments\",\n        style: {\n          \"curve-style\": \"segments\",\n          \"segment-weights\": \"0\",\n          \"segment-distances\": [0.5],\n          // @ts-ignore Incorrect library types\n          \"edge-distances\": \"endpoints\",\n          \"source-endpoint\": \"data(sourceEndpoint)\",\n          \"target-endpoint\": \"data(targetEndpoint)\"\n        }\n      }, {\n        selector: \"node\",\n        style: {\n          // @ts-ignore Incorrect library types\n          \"compound-sizing-wrt-labels\": \"include\"\n        }\n      }, {\n        selector: \"node[label]\",\n        style: {\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"center\",\n          \"font-size\": `${getConfigField(\"fontSize\")}px`\n        }\n      }, {\n        selector: \".node-service\",\n        style: {\n          label: \"data(label)\",\n          width: \"data(width)\",\n          height: \"data(height)\"\n        }\n      }, {\n        selector: \".node-junction\",\n        style: {\n          width: \"data(width)\",\n          height: \"data(height)\"\n        }\n      }, {\n        selector: \".node-group\",\n        style: {\n          // @ts-ignore Incorrect library types\n          padding: `${getConfigField(\"padding\")}px`\n        }\n      }]\n    });\n    renderEl.remove();\n    addGroups(groups, cy);\n    addServices(services, cy);\n    addJunctions(junctions, cy);\n    addEdges(edges, cy);\n    const alignmentConstraint = getAlignments(db2, spatialMaps, groupAlignments);\n    const relativePlacementConstraint = getRelativeConstraints(spatialMaps);\n    const layout = cy.layout({\n      name: \"fcose\",\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false,\n      nodeDimensionsIncludeLabels: false,\n      // Adjust the edge parameters if it passes through the border of a group\n      // Hacky fix for: https://github.com/iVis-at-Bilkent/cytoscape.js-fcose/issues/67\n      idealEdgeLength(edge) {\n        const [nodeA, nodeB] = edge.connectedNodes();\n        const {\n          parent: parentA\n        } = nodeData(nodeA);\n        const {\n          parent: parentB\n        } = nodeData(nodeB);\n        const elasticity = parentA === parentB ? 1.5 * getConfigField(\"iconSize\") : 0.5 * getConfigField(\"iconSize\");\n        return elasticity;\n      },\n      edgeElasticity(edge) {\n        const [nodeA, nodeB] = edge.connectedNodes();\n        const {\n          parent: parentA\n        } = nodeData(nodeA);\n        const {\n          parent: parentB\n        } = nodeData(nodeB);\n        const elasticity = parentA === parentB ? 0.45 : 1e-3;\n        return elasticity;\n      },\n      alignmentConstraint,\n      relativePlacementConstraint\n    });\n    layout.one(\"layoutstop\", () => {\n      function getSegmentWeights(source, target, pointX, pointY) {\n        let W, D;\n        const {\n          x: sX,\n          y: sY\n        } = source;\n        const {\n          x: tX,\n          y: tY\n        } = target;\n        D = (pointY - sY + (sX - pointX) * (sY - tY) / (sX - tX)) / Math.sqrt(1 + Math.pow((sY - tY) / (sX - tX), 2));\n        W = Math.sqrt(Math.pow(pointY - sY, 2) + Math.pow(pointX - sX, 2) - Math.pow(D, 2));\n        const distAB = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2));\n        W = W / distAB;\n        let delta1 = (tX - sX) * (pointY - sY) - (tY - sY) * (pointX - sX);\n        switch (true) {\n          case delta1 >= 0:\n            delta1 = 1;\n            break;\n          case delta1 < 0:\n            delta1 = -1;\n            break;\n        }\n        let delta2 = (tX - sX) * (pointX - sX) + (tY - sY) * (pointY - sY);\n        switch (true) {\n          case delta2 >= 0:\n            delta2 = 1;\n            break;\n          case delta2 < 0:\n            delta2 = -1;\n            break;\n        }\n        D = Math.abs(D) * delta1;\n        W = W * delta2;\n        return {\n          distances: D,\n          weights: W\n        };\n      }\n      __name(getSegmentWeights, \"getSegmentWeights\");\n      cy.startBatch();\n      for (const edge of Object.values(cy.edges())) {\n        if (edge.data?.()) {\n          const {\n            x: sX,\n            y: sY\n          } = edge.source().position();\n          const {\n            x: tX,\n            y: tY\n          } = edge.target().position();\n          if (sX !== tX && sY !== tY) {\n            const sEP = edge.sourceEndpoint();\n            const tEP = edge.targetEndpoint();\n            const {\n              sourceDir\n            } = edgeData(edge);\n            const [pointX, pointY] = isArchitectureDirectionY(sourceDir) ? [sEP.x, tEP.y] : [tEP.x, sEP.y];\n            const {\n              weights,\n              distances\n            } = getSegmentWeights(sEP, tEP, pointX, pointY);\n            edge.style(\"segment-distances\", distances);\n            edge.style(\"segment-weights\", weights);\n          }\n        }\n      }\n      cy.endBatch();\n      layout.run();\n    });\n    layout.run();\n    cy.ready(e => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\n__name(layoutArchitecture, \"layoutArchitecture\");\nvar draw = /* @__PURE__ */__name(async (text, id, _version, diagObj) => {\n  const db2 = diagObj.db;\n  const services = db2.getServices();\n  const junctions = db2.getJunctions();\n  const groups = db2.getGroups();\n  const edges = db2.getEdges();\n  const ds = db2.getDataStructures();\n  const svg = selectSvgElement(id);\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"architecture-edges\");\n  const servicesElem = svg.append(\"g\");\n  servicesElem.attr(\"class\", \"architecture-services\");\n  const groupElem = svg.append(\"g\");\n  groupElem.attr(\"class\", \"architecture-groups\");\n  await drawServices(db2, servicesElem, services);\n  drawJunctions(db2, servicesElem, junctions);\n  const cy = await layoutArchitecture(services, junctions, groups, edges, db2, ds);\n  await drawEdges(edgesElem, cy);\n  await drawGroups(groupElem, cy);\n  positionNodes(db2, cy);\n  setupGraphViewbox(void 0, svg, getConfigField(\"padding\"), getConfigField(\"useMaxWidth\"));\n}, \"draw\");\nvar renderer = {\n  draw\n};\n\n// src/diagrams/architecture/architectureDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles: architectureStyles_default\n};\nexport { diagram };","map":{"version":3,"names":["getIconSVG","registerIconPacks","unknownIcon","createText","populateCommonDb","ImperativeState","selectSvgElement","__name","clear","defaultConfig_default","getAccDescription","getAccTitle","getConfig2","getConfig","getDiagramTitle","log","setAccDescription","setAccTitle","setDiagramTitle","setupGraphViewbox","parse","ArchitectureDirectionName","L","R","T","B","ArchitectureDirectionArrow","scale","ArchitectureDirectionArrowShift","orig","arrowSize","_arrowSize","getOppositeArchitectureDirection","x","isArchitectureDirectionX","isArchitectureDirection","temp","isArchitectureDirectionY","isArchitectureDirectionXY","a","b","aX_bY","aY_bX","isArchitecturePairXY","pair","lhs","rhs","isValidArchitectureDirectionPair","getArchitectureDirectionPair","sourceDir","targetDir","shiftPositionByArchitectureDirectionPair","y","getArchitectureDirectionXYFactors","getArchitectureDirectionAlignment","isArchitectureService","type","isArchitectureJunction","edgeData","edge","data","nodeData","node","DEFAULT_ARCHITECTURE_CONFIG","architecture","state","nodes","groups","edges","registeredIds","config","dataStructures","elements","clear2","reset","addService","id","icon","in","parent","title","iconText","records","Error","getServices","Object","values","filter","addJunction","getJunctions","getNodes","getNode","addGroup","getGroups","addEdge","lhsId","rhsId","lhsDir","rhsDir","lhsInto","rhsInto","lhsGroup","rhsGroup","lhsGroupId","rhsGroupId","push","length","getEdges","getDataStructures","groupAlignments","adjList","entries","reduce","prevOuter","service","prevInner","alignment","firstId","keys","visited","notVisited","prev","BFS","startingId","spatialMap","queue","shift","adj","posX","posY","forEach","dir","spatialMaps","setElementForId","element","getElementById","db","getConfigField","field","arch","populateDb","ast","db2","map","services","junctions","parser","input","debug","getStyles","options","archEdgeWidth","archEdgeColor","archEdgeArrowColor","archGroupBorderColor","archGroupBorderWidth","architectureStyles_default","cytoscape","fcose","select","wrapIcon","architectureIcons","prefix","height","width","icons","database","body","server","disk","internet","cloud","unknown","blank","drawEdges","edgesEl","cy","padding","iconSize","halfIconSize","halfArrowSize","Promise","all","source","sourceArrow","sourceGroup","target","targetArrow","targetGroup","label","startX","startY","sourceEndpoint","midX","midY","midpoint","endX","endY","targetEndpoint","groupEdgeShift","_private","rscratch","g","insert","attr","xShift","yShift","axis","Math","abs","textElem","append","useHtmlLabels","classes","bboxOrig","getBoundingClientRect","bboxNew","drawGroups","groupsEl","groupIconSize","fontSize","h","w","x1","y1","boundingBox","groupLabelContainer","shiftedX1","shiftedY1","bkgElem","html","fallbackPrefix","drawServices","elem","serviceElem","textElemContainer","fo","divElem","parseInt","window","getComputedStyle","getPropertyValue","replace","floor","_groups","getBBox","drawJunctions","junction","junctionElem","name","use","addServices","add","group","addJunctions","positionNodes","position","nodeElem","addGroups","addEdges","parsedEdge","edgeType","getAlignments","flattenAlignments","alignmentObj","alignmentDir","alignments2","cnt","arr","i","j","aGroupId","aNodeIds","bGroupId","bNodeIds","keyA","keyB","alignments","horizontalAlignments","verticalAlignments","nodeGroup","horiz","vert","horizontal","vertical","prevHoriz","prevVert","getRelativeConstraints","relativeConstraints","posToStr","pos","strToPos","split","p","invSpatialMap","fromEntries","directions","curr","currId","currPos","newPos","newId","gap","layoutArchitecture","resolve","renderEl","container","document","style","selector","remove","alignmentConstraint","relativePlacementConstraint","layout","quality","styleEnabled","animate","nodeDimensionsIncludeLabels","idealEdgeLength","nodeA","nodeB","connectedNodes","parentA","parentB","elasticity","edgeElasticity","one","getSegmentWeights","pointX","pointY","W","D","sX","sY","tX","tY","sqrt","pow","distAB","delta1","delta2","distances","weights","startBatch","sEP","tEP","endBatch","run","ready","e","info","draw","text","_version","diagObj","ds","svg","edgesElem","servicesElem","groupElem","renderer","diagram","styles"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/mermaid/dist/chunks/mermaid.core/architectureDiagram-IEHRJDOE.mjs"],"sourcesContent":["import {\n  getIconSVG,\n  registerIconPacks,\n  unknownIcon\n} from \"./chunk-H2D2JQ3I.mjs\";\nimport {\n  createText\n} from \"./chunk-C3MQ5ANM.mjs\";\nimport {\n  populateCommonDb\n} from \"./chunk-4BMEZGHF.mjs\";\nimport {\n  ImperativeState\n} from \"./chunk-XZIHB7SX.mjs\";\nimport \"./chunk-O4NI6UNU.mjs\";\nimport {\n  selectSvgElement\n} from \"./chunk-7B677QYD.mjs\";\nimport {\n  __name,\n  clear,\n  defaultConfig_default,\n  getAccDescription,\n  getAccTitle,\n  getConfig2 as getConfig,\n  getDiagramTitle,\n  log,\n  setAccDescription,\n  setAccTitle,\n  setDiagramTitle,\n  setupGraphViewbox\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/architecture/architectureParser.ts\nimport { parse } from \"@mermaid-js/parser\";\n\n// src/diagrams/architecture/architectureTypes.ts\nvar ArchitectureDirectionName = {\n  L: \"left\",\n  R: \"right\",\n  T: \"top\",\n  B: \"bottom\"\n};\nvar ArchitectureDirectionArrow = {\n  L: /* @__PURE__ */ __name((scale) => `${scale},${scale / 2} 0,${scale} 0,0`, \"L\"),\n  R: /* @__PURE__ */ __name((scale) => `0,${scale / 2} ${scale},0 ${scale},${scale}`, \"R\"),\n  T: /* @__PURE__ */ __name((scale) => `0,0 ${scale},0 ${scale / 2},${scale}`, \"T\"),\n  B: /* @__PURE__ */ __name((scale) => `${scale / 2},0 ${scale},${scale} 0,${scale}`, \"B\")\n};\nvar ArchitectureDirectionArrowShift = {\n  L: /* @__PURE__ */ __name((orig, arrowSize) => orig - arrowSize + 2, \"L\"),\n  R: /* @__PURE__ */ __name((orig, _arrowSize) => orig - 2, \"R\"),\n  T: /* @__PURE__ */ __name((orig, arrowSize) => orig - arrowSize + 2, \"T\"),\n  B: /* @__PURE__ */ __name((orig, _arrowSize) => orig - 2, \"B\")\n};\nvar getOppositeArchitectureDirection = /* @__PURE__ */ __name(function(x) {\n  if (isArchitectureDirectionX(x)) {\n    return x === \"L\" ? \"R\" : \"L\";\n  } else {\n    return x === \"T\" ? \"B\" : \"T\";\n  }\n}, \"getOppositeArchitectureDirection\");\nvar isArchitectureDirection = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp === \"L\" || temp === \"R\" || temp === \"T\" || temp === \"B\";\n}, \"isArchitectureDirection\");\nvar isArchitectureDirectionX = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp === \"L\" || temp === \"R\";\n}, \"isArchitectureDirectionX\");\nvar isArchitectureDirectionY = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp === \"T\" || temp === \"B\";\n}, \"isArchitectureDirectionY\");\nvar isArchitectureDirectionXY = /* @__PURE__ */ __name(function(a, b) {\n  const aX_bY = isArchitectureDirectionX(a) && isArchitectureDirectionY(b);\n  const aY_bX = isArchitectureDirectionY(a) && isArchitectureDirectionX(b);\n  return aX_bY || aY_bX;\n}, \"isArchitectureDirectionXY\");\nvar isArchitecturePairXY = /* @__PURE__ */ __name(function(pair) {\n  const lhs = pair[0];\n  const rhs = pair[1];\n  const aX_bY = isArchitectureDirectionX(lhs) && isArchitectureDirectionY(rhs);\n  const aY_bX = isArchitectureDirectionY(lhs) && isArchitectureDirectionX(rhs);\n  return aX_bY || aY_bX;\n}, \"isArchitecturePairXY\");\nvar isValidArchitectureDirectionPair = /* @__PURE__ */ __name(function(x) {\n  return x !== \"LL\" && x !== \"RR\" && x !== \"TT\" && x !== \"BB\";\n}, \"isValidArchitectureDirectionPair\");\nvar getArchitectureDirectionPair = /* @__PURE__ */ __name(function(sourceDir, targetDir) {\n  const pair = `${sourceDir}${targetDir}`;\n  return isValidArchitectureDirectionPair(pair) ? pair : void 0;\n}, \"getArchitectureDirectionPair\");\nvar shiftPositionByArchitectureDirectionPair = /* @__PURE__ */ __name(function([x, y], pair) {\n  const lhs = pair[0];\n  const rhs = pair[1];\n  if (isArchitectureDirectionX(lhs)) {\n    if (isArchitectureDirectionY(rhs)) {\n      return [x + (lhs === \"L\" ? -1 : 1), y + (rhs === \"T\" ? 1 : -1)];\n    } else {\n      return [x + (lhs === \"L\" ? -1 : 1), y];\n    }\n  } else {\n    if (isArchitectureDirectionX(rhs)) {\n      return [x + (rhs === \"L\" ? 1 : -1), y + (lhs === \"T\" ? 1 : -1)];\n    } else {\n      return [x, y + (lhs === \"T\" ? 1 : -1)];\n    }\n  }\n}, \"shiftPositionByArchitectureDirectionPair\");\nvar getArchitectureDirectionXYFactors = /* @__PURE__ */ __name(function(pair) {\n  if (pair === \"LT\" || pair === \"TL\") {\n    return [1, 1];\n  } else if (pair === \"BL\" || pair === \"LB\") {\n    return [1, -1];\n  } else if (pair === \"BR\" || pair === \"RB\") {\n    return [-1, -1];\n  } else {\n    return [-1, 1];\n  }\n}, \"getArchitectureDirectionXYFactors\");\nvar getArchitectureDirectionAlignment = /* @__PURE__ */ __name(function(a, b) {\n  if (isArchitectureDirectionXY(a, b)) {\n    return \"bend\";\n  } else if (isArchitectureDirectionX(a)) {\n    return \"horizontal\";\n  }\n  return \"vertical\";\n}, \"getArchitectureDirectionAlignment\");\nvar isArchitectureService = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp.type === \"service\";\n}, \"isArchitectureService\");\nvar isArchitectureJunction = /* @__PURE__ */ __name(function(x) {\n  const temp = x;\n  return temp.type === \"junction\";\n}, \"isArchitectureJunction\");\nvar edgeData = /* @__PURE__ */ __name((edge) => {\n  return edge.data();\n}, \"edgeData\");\nvar nodeData = /* @__PURE__ */ __name((node) => {\n  return node.data();\n}, \"nodeData\");\n\n// src/diagrams/architecture/architectureDb.ts\nvar DEFAULT_ARCHITECTURE_CONFIG = defaultConfig_default.architecture;\nvar state = new ImperativeState(() => ({\n  nodes: {},\n  groups: {},\n  edges: [],\n  registeredIds: {},\n  config: DEFAULT_ARCHITECTURE_CONFIG,\n  dataStructures: void 0,\n  elements: {}\n}));\nvar clear2 = /* @__PURE__ */ __name(() => {\n  state.reset();\n  clear();\n}, \"clear\");\nvar addService = /* @__PURE__ */ __name(function({\n  id,\n  icon,\n  in: parent,\n  title,\n  iconText\n}) {\n  if (state.records.registeredIds[id] !== void 0) {\n    throw new Error(\n      `The service id [${id}] is already in use by another ${state.records.registeredIds[id]}`\n    );\n  }\n  if (parent !== void 0) {\n    if (id === parent) {\n      throw new Error(`The service [${id}] cannot be placed within itself`);\n    }\n    if (state.records.registeredIds[parent] === void 0) {\n      throw new Error(\n        `The service [${id}]'s parent does not exist. Please make sure the parent is created before this service`\n      );\n    }\n    if (state.records.registeredIds[parent] === \"node\") {\n      throw new Error(`The service [${id}]'s parent is not a group`);\n    }\n  }\n  state.records.registeredIds[id] = \"node\";\n  state.records.nodes[id] = {\n    id,\n    type: \"service\",\n    icon,\n    iconText,\n    title,\n    edges: [],\n    in: parent\n  };\n}, \"addService\");\nvar getServices = /* @__PURE__ */ __name(() => Object.values(state.records.nodes).filter(isArchitectureService), \"getServices\");\nvar addJunction = /* @__PURE__ */ __name(function({ id, in: parent }) {\n  state.records.registeredIds[id] = \"node\";\n  state.records.nodes[id] = {\n    id,\n    type: \"junction\",\n    edges: [],\n    in: parent\n  };\n}, \"addJunction\");\nvar getJunctions = /* @__PURE__ */ __name(() => Object.values(state.records.nodes).filter(isArchitectureJunction), \"getJunctions\");\nvar getNodes = /* @__PURE__ */ __name(() => Object.values(state.records.nodes), \"getNodes\");\nvar getNode = /* @__PURE__ */ __name((id) => state.records.nodes[id], \"getNode\");\nvar addGroup = /* @__PURE__ */ __name(function({ id, icon, in: parent, title }) {\n  if (state.records.registeredIds[id] !== void 0) {\n    throw new Error(\n      `The group id [${id}] is already in use by another ${state.records.registeredIds[id]}`\n    );\n  }\n  if (parent !== void 0) {\n    if (id === parent) {\n      throw new Error(`The group [${id}] cannot be placed within itself`);\n    }\n    if (state.records.registeredIds[parent] === void 0) {\n      throw new Error(\n        `The group [${id}]'s parent does not exist. Please make sure the parent is created before this group`\n      );\n    }\n    if (state.records.registeredIds[parent] === \"node\") {\n      throw new Error(`The group [${id}]'s parent is not a group`);\n    }\n  }\n  state.records.registeredIds[id] = \"group\";\n  state.records.groups[id] = {\n    id,\n    icon,\n    title,\n    in: parent\n  };\n}, \"addGroup\");\nvar getGroups = /* @__PURE__ */ __name(() => {\n  return Object.values(state.records.groups);\n}, \"getGroups\");\nvar addEdge = /* @__PURE__ */ __name(function({\n  lhsId,\n  rhsId,\n  lhsDir,\n  rhsDir,\n  lhsInto,\n  rhsInto,\n  lhsGroup,\n  rhsGroup,\n  title\n}) {\n  if (!isArchitectureDirection(lhsDir)) {\n    throw new Error(\n      `Invalid direction given for left hand side of edge ${lhsId}--${rhsId}. Expected (L,R,T,B) got ${lhsDir}`\n    );\n  }\n  if (!isArchitectureDirection(rhsDir)) {\n    throw new Error(\n      `Invalid direction given for right hand side of edge ${lhsId}--${rhsId}. Expected (L,R,T,B) got ${rhsDir}`\n    );\n  }\n  if (state.records.nodes[lhsId] === void 0 && state.records.groups[lhsId] === void 0) {\n    throw new Error(\n      `The left-hand id [${lhsId}] does not yet exist. Please create the service/group before declaring an edge to it.`\n    );\n  }\n  if (state.records.nodes[rhsId] === void 0 && state.records.groups[lhsId] === void 0) {\n    throw new Error(\n      `The right-hand id [${rhsId}] does not yet exist. Please create the service/group before declaring an edge to it.`\n    );\n  }\n  const lhsGroupId = state.records.nodes[lhsId].in;\n  const rhsGroupId = state.records.nodes[rhsId].in;\n  if (lhsGroup && lhsGroupId && rhsGroupId && lhsGroupId == rhsGroupId) {\n    throw new Error(\n      `The left-hand id [${lhsId}] is modified to traverse the group boundary, but the edge does not pass through two groups.`\n    );\n  }\n  if (rhsGroup && lhsGroupId && rhsGroupId && lhsGroupId == rhsGroupId) {\n    throw new Error(\n      `The right-hand id [${rhsId}] is modified to traverse the group boundary, but the edge does not pass through two groups.`\n    );\n  }\n  const edge = {\n    lhsId,\n    lhsDir,\n    lhsInto,\n    lhsGroup,\n    rhsId,\n    rhsDir,\n    rhsInto,\n    rhsGroup,\n    title\n  };\n  state.records.edges.push(edge);\n  if (state.records.nodes[lhsId] && state.records.nodes[rhsId]) {\n    state.records.nodes[lhsId].edges.push(state.records.edges[state.records.edges.length - 1]);\n    state.records.nodes[rhsId].edges.push(state.records.edges[state.records.edges.length - 1]);\n  }\n}, \"addEdge\");\nvar getEdges = /* @__PURE__ */ __name(() => state.records.edges, \"getEdges\");\nvar getDataStructures = /* @__PURE__ */ __name(() => {\n  if (state.records.dataStructures === void 0) {\n    const groupAlignments = {};\n    const adjList = Object.entries(state.records.nodes).reduce((prevOuter, [id, service]) => {\n      prevOuter[id] = service.edges.reduce((prevInner, edge) => {\n        const lhsGroupId = getNode(edge.lhsId)?.in;\n        const rhsGroupId = getNode(edge.rhsId)?.in;\n        if (lhsGroupId && rhsGroupId && lhsGroupId !== rhsGroupId) {\n          const alignment = getArchitectureDirectionAlignment(edge.lhsDir, edge.rhsDir);\n          if (alignment !== \"bend\") {\n            groupAlignments[lhsGroupId] ??= {};\n            groupAlignments[lhsGroupId][rhsGroupId] = alignment;\n            groupAlignments[rhsGroupId] ??= {};\n            groupAlignments[rhsGroupId][lhsGroupId] = alignment;\n          }\n        }\n        if (edge.lhsId === id) {\n          const pair = getArchitectureDirectionPair(edge.lhsDir, edge.rhsDir);\n          if (pair) {\n            prevInner[pair] = edge.rhsId;\n          }\n        } else {\n          const pair = getArchitectureDirectionPair(edge.rhsDir, edge.lhsDir);\n          if (pair) {\n            prevInner[pair] = edge.lhsId;\n          }\n        }\n        return prevInner;\n      }, {});\n      return prevOuter;\n    }, {});\n    const firstId = Object.keys(adjList)[0];\n    const visited = { [firstId]: 1 };\n    const notVisited = Object.keys(adjList).reduce(\n      (prev, id) => id === firstId ? prev : { ...prev, [id]: 1 },\n      {}\n    );\n    const BFS = /* @__PURE__ */ __name((startingId) => {\n      const spatialMap = { [startingId]: [0, 0] };\n      const queue = [startingId];\n      while (queue.length > 0) {\n        const id = queue.shift();\n        if (id) {\n          visited[id] = 1;\n          delete notVisited[id];\n          const adj = adjList[id];\n          const [posX, posY] = spatialMap[id];\n          Object.entries(adj).forEach(([dir, rhsId]) => {\n            if (!visited[rhsId]) {\n              spatialMap[rhsId] = shiftPositionByArchitectureDirectionPair(\n                [posX, posY],\n                dir\n              );\n              queue.push(rhsId);\n            }\n          });\n        }\n      }\n      return spatialMap;\n    }, \"BFS\");\n    const spatialMaps = [BFS(firstId)];\n    while (Object.keys(notVisited).length > 0) {\n      spatialMaps.push(BFS(Object.keys(notVisited)[0]));\n    }\n    state.records.dataStructures = {\n      adjList,\n      spatialMaps,\n      groupAlignments\n    };\n  }\n  return state.records.dataStructures;\n}, \"getDataStructures\");\nvar setElementForId = /* @__PURE__ */ __name((id, element) => {\n  state.records.elements[id] = element;\n}, \"setElementForId\");\nvar getElementById = /* @__PURE__ */ __name((id) => state.records.elements[id], \"getElementById\");\nvar db = {\n  clear: clear2,\n  setDiagramTitle,\n  getDiagramTitle,\n  setAccTitle,\n  getAccTitle,\n  setAccDescription,\n  getAccDescription,\n  addService,\n  getServices,\n  addJunction,\n  getJunctions,\n  getNodes,\n  getNode,\n  addGroup,\n  getGroups,\n  addEdge,\n  getEdges,\n  setElementForId,\n  getElementById,\n  getDataStructures\n};\nfunction getConfigField(field) {\n  const arch = getConfig().architecture;\n  if (arch?.[field]) {\n    return arch[field];\n  }\n  return DEFAULT_ARCHITECTURE_CONFIG[field];\n}\n__name(getConfigField, \"getConfigField\");\n\n// src/diagrams/architecture/architectureParser.ts\nvar populateDb = /* @__PURE__ */ __name((ast, db2) => {\n  populateCommonDb(ast, db2);\n  ast.groups.map(db2.addGroup);\n  ast.services.map((service) => db2.addService({ ...service, type: \"service\" }));\n  ast.junctions.map((service) => db2.addJunction({ ...service, type: \"junction\" }));\n  ast.edges.map(db2.addEdge);\n}, \"populateDb\");\nvar parser = {\n  parse: /* @__PURE__ */ __name(async (input) => {\n    const ast = await parse(\"architecture\", input);\n    log.debug(ast);\n    populateDb(ast, db);\n  }, \"parse\")\n};\n\n// src/diagrams/architecture/architectureStyles.ts\nvar getStyles = /* @__PURE__ */ __name((options) => `\n  .edge {\n    stroke-width: ${options.archEdgeWidth};\n    stroke: ${options.archEdgeColor};\n    fill: none;\n  }\n\n  .arrow {\n    fill: ${options.archEdgeArrowColor};\n  }\n\n  .node-bkg {\n    fill: none;\n    stroke: ${options.archGroupBorderColor};\n    stroke-width: ${options.archGroupBorderWidth};\n    stroke-dasharray: 8;\n  }\n  .node-icon-text {\n    display: flex; \n    align-items: center;\n  }\n  \n  .node-icon-text > div {\n    color: #fff;\n    margin: 1px;\n    height: fit-content;\n    text-align: center;\n    overflow: hidden;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n  }\n`, \"getStyles\");\nvar architectureStyles_default = getStyles;\n\n// src/diagrams/architecture/architectureRenderer.ts\nimport cytoscape from \"cytoscape\";\nimport fcose from \"cytoscape-fcose\";\nimport { select } from \"d3\";\n\n// src/diagrams/architecture/architectureIcons.ts\nvar wrapIcon = /* @__PURE__ */ __name((icon) => {\n  return `<g><rect width=\"80\" height=\"80\" style=\"fill: #087ebf; stroke-width: 0px;\"/>${icon}</g>`;\n}, \"wrapIcon\");\nvar architectureIcons = {\n  prefix: \"mermaid-architecture\",\n  height: 80,\n  width: 80,\n  icons: {\n    database: {\n      body: wrapIcon(\n        '<path id=\"b\" data-name=\"4\" d=\"m20,57.86c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path id=\"c\" data-name=\"3\" d=\"m20,45.95c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path id=\"d\" data-name=\"2\" d=\"m20,34.05c0,3.94,8.95,7.14,20,7.14s20-3.2,20-7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse id=\"e\" data-name=\"1\" cx=\"40\" cy=\"22.14\" rx=\"20\" ry=\"7.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"20\" y1=\"57.86\" x2=\"20\" y2=\"22.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"60\" y1=\"57.86\" x2=\"60\" y2=\"22.14\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>'\n      )\n    },\n    server: {\n      body: wrapIcon(\n        '<rect x=\"17.5\" y=\"17.5\" width=\"45\" height=\"45\" rx=\"2\" ry=\"2\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"32.5\" x2=\"62.5\" y2=\"32.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"47.5\" x2=\"62.5\" y2=\"47.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><g><path d=\"m56.25,25c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,25c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><path d=\"m56.25,40c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,40c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><path d=\"m56.25,55c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: #fff; stroke-width: 0px;\"/><path d=\"m56.25,55c0,.27-.45.5-1,.5h-10.5c-.55,0-1-.23-1-.5s.45-.5,1-.5h10.5c.55,0,1,.23,1,.5Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"25\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"40\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g><g><circle cx=\"32.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"27.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/><circle cx=\"22.5\" cy=\"55\" r=\".75\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10;\"/></g>'\n      )\n    },\n    disk: {\n      body: wrapIcon(\n        '<rect x=\"20\" y=\"15\" width=\"40\" height=\"50\" rx=\"1\" ry=\"1\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"24\" cy=\"19.17\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"56\" cy=\"19.17\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"24\" cy=\"60.83\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"56\" cy=\"60.83\" rx=\".8\" ry=\".83\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"40\" cy=\"33.75\" rx=\"14\" ry=\"14.58\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><ellipse cx=\"40\" cy=\"33.75\" rx=\"4\" ry=\"4.17\" style=\"fill: #fff; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m37.51,42.52l-4.83,13.22c-.26.71-1.1,1.02-1.76.64l-4.18-2.42c-.66-.38-.81-1.26-.33-1.84l9.01-10.8c.88-1.05,2.56-.08,2.09,1.2Z\" style=\"fill: #fff; stroke-width: 0px;\"/>'\n      )\n    },\n    internet: {\n      body: wrapIcon(\n        '<circle cx=\"40\" cy=\"40\" r=\"22.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"40\" y1=\"17.5\" x2=\"40\" y2=\"62.5\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"17.5\" y1=\"40\" x2=\"62.5\" y2=\"40\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m39.99,17.51c-15.28,11.1-15.28,33.88,0,44.98\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><path d=\"m40.01,17.51c15.28,11.1,15.28,33.88,0,44.98\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"19.75\" y1=\"30.1\" x2=\"60.25\" y2=\"30.1\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/><line x1=\"19.75\" y1=\"49.9\" x2=\"60.25\" y2=\"49.9\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>'\n      )\n    },\n    cloud: {\n      body: wrapIcon(\n        '<path d=\"m65,47.5c0,2.76-2.24,5-5,5H20c-2.76,0-5-2.24-5-5,0-1.87,1.03-3.51,2.56-4.36-.04-.21-.06-.42-.06-.64,0-2.6,2.48-4.74,5.65-4.97,1.65-4.51,6.34-7.76,11.85-7.76.86,0,1.69.08,2.5.23,2.09-1.57,4.69-2.5,7.5-2.5,6.1,0,11.19,4.38,12.28,10.17,2.14.56,3.72,2.51,3.72,4.83,0,.03,0,.07-.01.1,2.29.46,4.01,2.48,4.01,4.9Z\" style=\"fill: none; stroke: #fff; stroke-miterlimit: 10; stroke-width: 2px;\"/>'\n      )\n    },\n    unknown: unknownIcon,\n    blank: {\n      body: wrapIcon(\"\")\n    }\n  }\n};\n\n// src/diagrams/architecture/svgDraw.ts\nvar drawEdges = /* @__PURE__ */ __name(async function(edgesEl, cy) {\n  const padding = getConfigField(\"padding\");\n  const iconSize = getConfigField(\"iconSize\");\n  const halfIconSize = iconSize / 2;\n  const arrowSize = iconSize / 6;\n  const halfArrowSize = arrowSize / 2;\n  await Promise.all(\n    cy.edges().map(async (edge) => {\n      const {\n        source,\n        sourceDir,\n        sourceArrow,\n        sourceGroup,\n        target,\n        targetDir,\n        targetArrow,\n        targetGroup,\n        label\n      } = edgeData(edge);\n      let { x: startX, y: startY } = edge[0].sourceEndpoint();\n      const { x: midX, y: midY } = edge[0].midpoint();\n      let { x: endX, y: endY } = edge[0].targetEndpoint();\n      const groupEdgeShift = padding + 4;\n      if (sourceGroup) {\n        if (isArchitectureDirectionX(sourceDir)) {\n          startX += sourceDir === \"L\" ? -groupEdgeShift : groupEdgeShift;\n        } else {\n          startY += sourceDir === \"T\" ? -groupEdgeShift : groupEdgeShift + 18;\n        }\n      }\n      if (targetGroup) {\n        if (isArchitectureDirectionX(targetDir)) {\n          endX += targetDir === \"L\" ? -groupEdgeShift : groupEdgeShift;\n        } else {\n          endY += targetDir === \"T\" ? -groupEdgeShift : groupEdgeShift + 18;\n        }\n      }\n      if (!sourceGroup && db.getNode(source)?.type === \"junction\") {\n        if (isArchitectureDirectionX(sourceDir)) {\n          startX += sourceDir === \"L\" ? halfIconSize : -halfIconSize;\n        } else {\n          startY += sourceDir === \"T\" ? halfIconSize : -halfIconSize;\n        }\n      }\n      if (!targetGroup && db.getNode(target)?.type === \"junction\") {\n        if (isArchitectureDirectionX(targetDir)) {\n          endX += targetDir === \"L\" ? halfIconSize : -halfIconSize;\n        } else {\n          endY += targetDir === \"T\" ? halfIconSize : -halfIconSize;\n        }\n      }\n      if (edge[0]._private.rscratch) {\n        const g = edgesEl.insert(\"g\");\n        g.insert(\"path\").attr(\"d\", `M ${startX},${startY} L ${midX},${midY} L${endX},${endY} `).attr(\"class\", \"edge\");\n        if (sourceArrow) {\n          const xShift = isArchitectureDirectionX(sourceDir) ? ArchitectureDirectionArrowShift[sourceDir](startX, arrowSize) : startX - halfArrowSize;\n          const yShift = isArchitectureDirectionY(sourceDir) ? ArchitectureDirectionArrowShift[sourceDir](startY, arrowSize) : startY - halfArrowSize;\n          g.insert(\"polygon\").attr(\"points\", ArchitectureDirectionArrow[sourceDir](arrowSize)).attr(\"transform\", `translate(${xShift},${yShift})`).attr(\"class\", \"arrow\");\n        }\n        if (targetArrow) {\n          const xShift = isArchitectureDirectionX(targetDir) ? ArchitectureDirectionArrowShift[targetDir](endX, arrowSize) : endX - halfArrowSize;\n          const yShift = isArchitectureDirectionY(targetDir) ? ArchitectureDirectionArrowShift[targetDir](endY, arrowSize) : endY - halfArrowSize;\n          g.insert(\"polygon\").attr(\"points\", ArchitectureDirectionArrow[targetDir](arrowSize)).attr(\"transform\", `translate(${xShift},${yShift})`).attr(\"class\", \"arrow\");\n        }\n        if (label) {\n          const axis = !isArchitectureDirectionXY(sourceDir, targetDir) ? isArchitectureDirectionX(sourceDir) ? \"X\" : \"Y\" : \"XY\";\n          let width = 0;\n          if (axis === \"X\") {\n            width = Math.abs(startX - endX);\n          } else if (axis === \"Y\") {\n            width = Math.abs(startY - endY) / 1.5;\n          } else {\n            width = Math.abs(startX - endX) / 2;\n          }\n          const textElem = g.append(\"g\");\n          await createText(\n            textElem,\n            label,\n            {\n              useHtmlLabels: false,\n              width,\n              classes: \"architecture-service-label\"\n            },\n            getConfig()\n          );\n          textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n          if (axis === \"X\") {\n            textElem.attr(\"transform\", \"translate(\" + midX + \", \" + midY + \")\");\n          } else if (axis === \"Y\") {\n            textElem.attr(\"transform\", \"translate(\" + midX + \", \" + midY + \") rotate(-90)\");\n          } else if (axis === \"XY\") {\n            const pair = getArchitectureDirectionPair(sourceDir, targetDir);\n            if (pair && isArchitecturePairXY(pair)) {\n              const bboxOrig = textElem.node().getBoundingClientRect();\n              const [x, y] = getArchitectureDirectionXYFactors(pair);\n              textElem.attr(\"dominant-baseline\", \"auto\").attr(\"transform\", `rotate(${-1 * x * y * 45})`);\n              const bboxNew = textElem.node().getBoundingClientRect();\n              textElem.attr(\n                \"transform\",\n                `\n                translate(${midX}, ${midY - bboxOrig.height / 2})\n                translate(${x * bboxNew.width / 2}, ${y * bboxNew.height / 2})\n                rotate(${-1 * x * y * 45}, 0, ${bboxOrig.height / 2})\n              `\n              );\n            }\n          }\n        }\n      }\n    })\n  );\n}, \"drawEdges\");\nvar drawGroups = /* @__PURE__ */ __name(async function(groupsEl, cy) {\n  const padding = getConfigField(\"padding\");\n  const groupIconSize = padding * 0.75;\n  const fontSize = getConfigField(\"fontSize\");\n  const iconSize = getConfigField(\"iconSize\");\n  const halfIconSize = iconSize / 2;\n  await Promise.all(\n    cy.nodes().map(async (node) => {\n      const data = nodeData(node);\n      if (data.type === \"group\") {\n        const { h, w, x1, y1 } = node.boundingBox();\n        groupsEl.append(\"rect\").attr(\"x\", x1 + halfIconSize).attr(\"y\", y1 + halfIconSize).attr(\"width\", w).attr(\"height\", h).attr(\"class\", \"node-bkg\");\n        const groupLabelContainer = groupsEl.append(\"g\");\n        let shiftedX1 = x1;\n        let shiftedY1 = y1;\n        if (data.icon) {\n          const bkgElem = groupLabelContainer.append(\"g\");\n          bkgElem.html(\n            `<g>${await getIconSVG(data.icon, { height: groupIconSize, width: groupIconSize, fallbackPrefix: architectureIcons.prefix })}</g>`\n          );\n          bkgElem.attr(\n            \"transform\",\n            \"translate(\" + (shiftedX1 + halfIconSize + 1) + \", \" + (shiftedY1 + halfIconSize + 1) + \")\"\n          );\n          shiftedX1 += groupIconSize;\n          shiftedY1 += fontSize / 2 - 1 - 2;\n        }\n        if (data.label) {\n          const textElem = groupLabelContainer.append(\"g\");\n          await createText(\n            textElem,\n            data.label,\n            {\n              useHtmlLabels: false,\n              width: w,\n              classes: \"architecture-service-label\"\n            },\n            getConfig()\n          );\n          textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"start\").attr(\"text-anchor\", \"start\");\n          textElem.attr(\n            \"transform\",\n            \"translate(\" + (shiftedX1 + halfIconSize + 4) + \", \" + (shiftedY1 + halfIconSize + 2) + \")\"\n          );\n        }\n      }\n    })\n  );\n}, \"drawGroups\");\nvar drawServices = /* @__PURE__ */ __name(async function(db2, elem, services) {\n  for (const service of services) {\n    const serviceElem = elem.append(\"g\");\n    const iconSize = getConfigField(\"iconSize\");\n    if (service.title) {\n      const textElem = serviceElem.append(\"g\");\n      await createText(\n        textElem,\n        service.title,\n        {\n          useHtmlLabels: false,\n          width: iconSize * 1.5,\n          classes: \"architecture-service-label\"\n        },\n        getConfig()\n      );\n      textElem.attr(\"dy\", \"1em\").attr(\"alignment-baseline\", \"middle\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\");\n      textElem.attr(\"transform\", \"translate(\" + iconSize / 2 + \", \" + iconSize + \")\");\n    }\n    const bkgElem = serviceElem.append(\"g\");\n    if (service.icon) {\n      bkgElem.html(\n        `<g>${await getIconSVG(service.icon, { height: iconSize, width: iconSize, fallbackPrefix: architectureIcons.prefix })}</g>`\n      );\n    } else if (service.iconText) {\n      bkgElem.html(\n        `<g>${await getIconSVG(\"blank\", { height: iconSize, width: iconSize, fallbackPrefix: architectureIcons.prefix })}</g>`\n      );\n      const textElemContainer = bkgElem.append(\"g\");\n      const fo = textElemContainer.append(\"foreignObject\").attr(\"width\", iconSize).attr(\"height\", iconSize);\n      const divElem = fo.append(\"div\").attr(\"class\", \"node-icon-text\").attr(\"style\", `height: ${iconSize}px;`).append(\"div\").html(service.iconText);\n      const fontSize = parseInt(\n        window.getComputedStyle(divElem.node(), null).getPropertyValue(\"font-size\").replace(/\\D/g, \"\")\n      ) ?? 16;\n      divElem.attr(\"style\", `-webkit-line-clamp: ${Math.floor((iconSize - 2) / fontSize)};`);\n    } else {\n      bkgElem.append(\"path\").attr(\"class\", \"node-bkg\").attr(\"id\", \"node-\" + service.id).attr(\n        \"d\",\n        `M0 ${iconSize} v${-iconSize} q0,-5 5,-5 h${iconSize} q5,0 5,5 v${iconSize} H0 Z`\n      );\n    }\n    serviceElem.attr(\"class\", \"architecture-service\");\n    const { width, height } = serviceElem._groups[0][0].getBBox();\n    service.width = width;\n    service.height = height;\n    db2.setElementForId(service.id, serviceElem);\n  }\n  return 0;\n}, \"drawServices\");\nvar drawJunctions = /* @__PURE__ */ __name(function(db2, elem, junctions) {\n  junctions.forEach((junction) => {\n    const junctionElem = elem.append(\"g\");\n    const iconSize = getConfigField(\"iconSize\");\n    const bkgElem = junctionElem.append(\"g\");\n    bkgElem.append(\"rect\").attr(\"id\", \"node-\" + junction.id).attr(\"fill-opacity\", \"0\").attr(\"width\", iconSize).attr(\"height\", iconSize);\n    junctionElem.attr(\"class\", \"architecture-junction\");\n    const { width, height } = junctionElem._groups[0][0].getBBox();\n    junctionElem.width = width;\n    junctionElem.height = height;\n    db2.setElementForId(junction.id, junctionElem);\n  });\n}, \"drawJunctions\");\n\n// src/diagrams/architecture/architectureRenderer.ts\nregisterIconPacks([\n  {\n    name: architectureIcons.prefix,\n    icons: architectureIcons\n  }\n]);\ncytoscape.use(fcose);\nfunction addServices(services, cy) {\n  services.forEach((service) => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"service\",\n        id: service.id,\n        icon: service.icon,\n        label: service.title,\n        parent: service.in,\n        width: getConfigField(\"iconSize\"),\n        height: getConfigField(\"iconSize\")\n      },\n      classes: \"node-service\"\n    });\n  });\n}\n__name(addServices, \"addServices\");\nfunction addJunctions(junctions, cy) {\n  junctions.forEach((junction) => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"junction\",\n        id: junction.id,\n        parent: junction.in,\n        width: getConfigField(\"iconSize\"),\n        height: getConfigField(\"iconSize\")\n      },\n      classes: \"node-junction\"\n    });\n  });\n}\n__name(addJunctions, \"addJunctions\");\nfunction positionNodes(db2, cy) {\n  cy.nodes().map((node) => {\n    const data = nodeData(node);\n    if (data.type === \"group\") {\n      return;\n    }\n    data.x = node.position().x;\n    data.y = node.position().y;\n    const nodeElem = db2.getElementById(data.id);\n    nodeElem.attr(\"transform\", \"translate(\" + (data.x || 0) + \",\" + (data.y || 0) + \")\");\n  });\n}\n__name(positionNodes, \"positionNodes\");\nfunction addGroups(groups, cy) {\n  groups.forEach((group) => {\n    cy.add({\n      group: \"nodes\",\n      data: {\n        type: \"group\",\n        id: group.id,\n        icon: group.icon,\n        label: group.title,\n        parent: group.in\n      },\n      classes: \"node-group\"\n    });\n  });\n}\n__name(addGroups, \"addGroups\");\nfunction addEdges(edges, cy) {\n  edges.forEach((parsedEdge) => {\n    const { lhsId, rhsId, lhsInto, lhsGroup, rhsInto, lhsDir, rhsDir, rhsGroup, title } = parsedEdge;\n    const edgeType = isArchitectureDirectionXY(parsedEdge.lhsDir, parsedEdge.rhsDir) ? \"segments\" : \"straight\";\n    const edge = {\n      id: `${lhsId}-${rhsId}`,\n      label: title,\n      source: lhsId,\n      sourceDir: lhsDir,\n      sourceArrow: lhsInto,\n      sourceGroup: lhsGroup,\n      sourceEndpoint: lhsDir === \"L\" ? \"0 50%\" : lhsDir === \"R\" ? \"100% 50%\" : lhsDir === \"T\" ? \"50% 0\" : \"50% 100%\",\n      target: rhsId,\n      targetDir: rhsDir,\n      targetArrow: rhsInto,\n      targetGroup: rhsGroup,\n      targetEndpoint: rhsDir === \"L\" ? \"0 50%\" : rhsDir === \"R\" ? \"100% 50%\" : rhsDir === \"T\" ? \"50% 0\" : \"50% 100%\"\n    };\n    cy.add({\n      group: \"edges\",\n      data: edge,\n      classes: edgeType\n    });\n  });\n}\n__name(addEdges, \"addEdges\");\nfunction getAlignments(db2, spatialMaps, groupAlignments) {\n  const flattenAlignments = /* @__PURE__ */ __name((alignmentObj, alignmentDir) => {\n    return Object.entries(alignmentObj).reduce(\n      (prev, [dir, alignments2]) => {\n        let cnt = 0;\n        const arr = Object.entries(alignments2);\n        if (arr.length === 1) {\n          prev[dir] = arr[0][1];\n          return prev;\n        }\n        for (let i = 0; i < arr.length - 1; i++) {\n          for (let j = i + 1; j < arr.length; j++) {\n            const [aGroupId, aNodeIds] = arr[i];\n            const [bGroupId, bNodeIds] = arr[j];\n            const alignment = groupAlignments[aGroupId]?.[bGroupId];\n            if (alignment === alignmentDir) {\n              prev[dir] ??= [];\n              prev[dir] = [...prev[dir], ...aNodeIds, ...bNodeIds];\n            } else if (aGroupId === \"default\" || bGroupId === \"default\") {\n              prev[dir] ??= [];\n              prev[dir] = [...prev[dir], ...aNodeIds, ...bNodeIds];\n            } else {\n              const keyA = `${dir}-${cnt++}`;\n              prev[keyA] = aNodeIds;\n              const keyB = `${dir}-${cnt++}`;\n              prev[keyB] = bNodeIds;\n            }\n          }\n        }\n        return prev;\n      },\n      {}\n    );\n  }, \"flattenAlignments\");\n  const alignments = spatialMaps.map((spatialMap) => {\n    const horizontalAlignments = {};\n    const verticalAlignments = {};\n    Object.entries(spatialMap).forEach(([id, [x, y]]) => {\n      const nodeGroup = db2.getNode(id)?.in ?? \"default\";\n      horizontalAlignments[y] ??= {};\n      horizontalAlignments[y][nodeGroup] ??= [];\n      horizontalAlignments[y][nodeGroup].push(id);\n      verticalAlignments[x] ??= {};\n      verticalAlignments[x][nodeGroup] ??= [];\n      verticalAlignments[x][nodeGroup].push(id);\n    });\n    return {\n      horiz: Object.values(flattenAlignments(horizontalAlignments, \"horizontal\")).filter(\n        (arr) => arr.length > 1\n      ),\n      vert: Object.values(flattenAlignments(verticalAlignments, \"vertical\")).filter(\n        (arr) => arr.length > 1\n      )\n    };\n  });\n  const [horizontal, vertical] = alignments.reduce(\n    ([prevHoriz, prevVert], { horiz, vert }) => {\n      return [\n        [...prevHoriz, ...horiz],\n        [...prevVert, ...vert]\n      ];\n    },\n    [[], []]\n  );\n  return {\n    horizontal,\n    vertical\n  };\n}\n__name(getAlignments, \"getAlignments\");\nfunction getRelativeConstraints(spatialMaps) {\n  const relativeConstraints = [];\n  const posToStr = /* @__PURE__ */ __name((pos) => `${pos[0]},${pos[1]}`, \"posToStr\");\n  const strToPos = /* @__PURE__ */ __name((pos) => pos.split(\",\").map((p) => parseInt(p)), \"strToPos\");\n  spatialMaps.forEach((spatialMap) => {\n    const invSpatialMap = Object.fromEntries(\n      Object.entries(spatialMap).map(([id, pos]) => [posToStr(pos), id])\n    );\n    const queue = [posToStr([0, 0])];\n    const visited = {};\n    const directions = {\n      L: [-1, 0],\n      R: [1, 0],\n      T: [0, 1],\n      B: [0, -1]\n    };\n    while (queue.length > 0) {\n      const curr = queue.shift();\n      if (curr) {\n        visited[curr] = 1;\n        const currId = invSpatialMap[curr];\n        if (currId) {\n          const currPos = strToPos(curr);\n          Object.entries(directions).forEach(([dir, shift]) => {\n            const newPos = posToStr([currPos[0] + shift[0], currPos[1] + shift[1]]);\n            const newId = invSpatialMap[newPos];\n            if (newId && !visited[newPos]) {\n              queue.push(newPos);\n              relativeConstraints.push({\n                [ArchitectureDirectionName[dir]]: newId,\n                [ArchitectureDirectionName[getOppositeArchitectureDirection(dir)]]: currId,\n                gap: 1.5 * getConfigField(\"iconSize\")\n              });\n            }\n          });\n        }\n      }\n    }\n  });\n  return relativeConstraints;\n}\n__name(getRelativeConstraints, \"getRelativeConstraints\");\nfunction layoutArchitecture(services, junctions, groups, edges, db2, { spatialMaps, groupAlignments }) {\n  return new Promise((resolve) => {\n    const renderEl = select(\"body\").append(\"div\").attr(\"id\", \"cy\").attr(\"style\", \"display:none\");\n    const cy = cytoscape({\n      container: document.getElementById(\"cy\"),\n      style: [\n        {\n          selector: \"edge\",\n          style: {\n            \"curve-style\": \"straight\",\n            label: \"data(label)\",\n            \"source-endpoint\": \"data(sourceEndpoint)\",\n            \"target-endpoint\": \"data(targetEndpoint)\"\n          }\n        },\n        {\n          selector: \"edge.segments\",\n          style: {\n            \"curve-style\": \"segments\",\n            \"segment-weights\": \"0\",\n            \"segment-distances\": [0.5],\n            // @ts-ignore Incorrect library types\n            \"edge-distances\": \"endpoints\",\n            \"source-endpoint\": \"data(sourceEndpoint)\",\n            \"target-endpoint\": \"data(targetEndpoint)\"\n          }\n        },\n        {\n          selector: \"node\",\n          style: {\n            // @ts-ignore Incorrect library types\n            \"compound-sizing-wrt-labels\": \"include\"\n          }\n        },\n        {\n          selector: \"node[label]\",\n          style: {\n            \"text-valign\": \"bottom\",\n            \"text-halign\": \"center\",\n            \"font-size\": `${getConfigField(\"fontSize\")}px`\n          }\n        },\n        {\n          selector: \".node-service\",\n          style: {\n            label: \"data(label)\",\n            width: \"data(width)\",\n            height: \"data(height)\"\n          }\n        },\n        {\n          selector: \".node-junction\",\n          style: {\n            width: \"data(width)\",\n            height: \"data(height)\"\n          }\n        },\n        {\n          selector: \".node-group\",\n          style: {\n            // @ts-ignore Incorrect library types\n            padding: `${getConfigField(\"padding\")}px`\n          }\n        }\n      ]\n    });\n    renderEl.remove();\n    addGroups(groups, cy);\n    addServices(services, cy);\n    addJunctions(junctions, cy);\n    addEdges(edges, cy);\n    const alignmentConstraint = getAlignments(db2, spatialMaps, groupAlignments);\n    const relativePlacementConstraint = getRelativeConstraints(spatialMaps);\n    const layout = cy.layout({\n      name: \"fcose\",\n      quality: \"proof\",\n      styleEnabled: false,\n      animate: false,\n      nodeDimensionsIncludeLabels: false,\n      // Adjust the edge parameters if it passes through the border of a group\n      // Hacky fix for: https://github.com/iVis-at-Bilkent/cytoscape.js-fcose/issues/67\n      idealEdgeLength(edge) {\n        const [nodeA, nodeB] = edge.connectedNodes();\n        const { parent: parentA } = nodeData(nodeA);\n        const { parent: parentB } = nodeData(nodeB);\n        const elasticity = parentA === parentB ? 1.5 * getConfigField(\"iconSize\") : 0.5 * getConfigField(\"iconSize\");\n        return elasticity;\n      },\n      edgeElasticity(edge) {\n        const [nodeA, nodeB] = edge.connectedNodes();\n        const { parent: parentA } = nodeData(nodeA);\n        const { parent: parentB } = nodeData(nodeB);\n        const elasticity = parentA === parentB ? 0.45 : 1e-3;\n        return elasticity;\n      },\n      alignmentConstraint,\n      relativePlacementConstraint\n    });\n    layout.one(\"layoutstop\", () => {\n      function getSegmentWeights(source, target, pointX, pointY) {\n        let W, D;\n        const { x: sX, y: sY } = source;\n        const { x: tX, y: tY } = target;\n        D = (pointY - sY + (sX - pointX) * (sY - tY) / (sX - tX)) / Math.sqrt(1 + Math.pow((sY - tY) / (sX - tX), 2));\n        W = Math.sqrt(Math.pow(pointY - sY, 2) + Math.pow(pointX - sX, 2) - Math.pow(D, 2));\n        const distAB = Math.sqrt(Math.pow(tX - sX, 2) + Math.pow(tY - sY, 2));\n        W = W / distAB;\n        let delta1 = (tX - sX) * (pointY - sY) - (tY - sY) * (pointX - sX);\n        switch (true) {\n          case delta1 >= 0:\n            delta1 = 1;\n            break;\n          case delta1 < 0:\n            delta1 = -1;\n            break;\n        }\n        let delta2 = (tX - sX) * (pointX - sX) + (tY - sY) * (pointY - sY);\n        switch (true) {\n          case delta2 >= 0:\n            delta2 = 1;\n            break;\n          case delta2 < 0:\n            delta2 = -1;\n            break;\n        }\n        D = Math.abs(D) * delta1;\n        W = W * delta2;\n        return {\n          distances: D,\n          weights: W\n        };\n      }\n      __name(getSegmentWeights, \"getSegmentWeights\");\n      cy.startBatch();\n      for (const edge of Object.values(cy.edges())) {\n        if (edge.data?.()) {\n          const { x: sX, y: sY } = edge.source().position();\n          const { x: tX, y: tY } = edge.target().position();\n          if (sX !== tX && sY !== tY) {\n            const sEP = edge.sourceEndpoint();\n            const tEP = edge.targetEndpoint();\n            const { sourceDir } = edgeData(edge);\n            const [pointX, pointY] = isArchitectureDirectionY(sourceDir) ? [sEP.x, tEP.y] : [tEP.x, sEP.y];\n            const { weights, distances } = getSegmentWeights(sEP, tEP, pointX, pointY);\n            edge.style(\"segment-distances\", distances);\n            edge.style(\"segment-weights\", weights);\n          }\n        }\n      }\n      cy.endBatch();\n      layout.run();\n    });\n    layout.run();\n    cy.ready((e) => {\n      log.info(\"Ready\", e);\n      resolve(cy);\n    });\n  });\n}\n__name(layoutArchitecture, \"layoutArchitecture\");\nvar draw = /* @__PURE__ */ __name(async (text, id, _version, diagObj) => {\n  const db2 = diagObj.db;\n  const services = db2.getServices();\n  const junctions = db2.getJunctions();\n  const groups = db2.getGroups();\n  const edges = db2.getEdges();\n  const ds = db2.getDataStructures();\n  const svg = selectSvgElement(id);\n  const edgesElem = svg.append(\"g\");\n  edgesElem.attr(\"class\", \"architecture-edges\");\n  const servicesElem = svg.append(\"g\");\n  servicesElem.attr(\"class\", \"architecture-services\");\n  const groupElem = svg.append(\"g\");\n  groupElem.attr(\"class\", \"architecture-groups\");\n  await drawServices(db2, servicesElem, services);\n  drawJunctions(db2, servicesElem, junctions);\n  const cy = await layoutArchitecture(services, junctions, groups, edges, db2, ds);\n  await drawEdges(edgesElem, cy);\n  await drawGroups(groupElem, cy);\n  positionNodes(db2, cy);\n  setupGraphViewbox(void 0, svg, getConfigField(\"padding\"), getConfigField(\"useMaxWidth\"));\n}, \"draw\");\nvar renderer = { draw };\n\n// src/diagrams/architecture/architectureDiagram.ts\nvar diagram = {\n  parser,\n  db,\n  renderer,\n  styles: architectureStyles_default\n};\nexport {\n  diagram\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}