{"ast":null,"code":"import axios from 'axios';\nimport mermaid from 'mermaid';\nexport default {\n  name: 'DatabaseDesign',\n  data() {\n    return {\n      requirements: [],\n      selectedRequirement: '',\n      selectedRequirementId: null,\n      loading: false,\n      error: null,\n      architecture: null,\n      databaseDesigns: [],\n      techIcons: {\n        frontend: 'fab fa-vuejs',\n        backend: 'fab fa-python',\n        database: 'fas fa-database'\n      }\n    };\n  },\n  created() {\n    this.fetchRequirements();\n  },\n  methods: {\n    handleRequirementSelected(id) {\n      this.selectedRequirementId = id;\n      console.log('Selected Requirement ID:', this.selectedRequirementId);\n      this.fetchDatabaseDesigns(this.selectedRequirementId);\n    },\n    async fetchRequirements() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/requirements/list');\n        this.requirements = response.data;\n      } catch (err) {\n        console.error('Error fetching requirements:', err);\n        this.error = '无法加载需求列表';\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchDatabaseDesigns(requirementId) {\n      this.loading = true;\n      this.error = null;\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/api/database_designs', {\n          params: {\n            requirement_id: requirementId\n          }\n        });\n        if (response.data.error) {\n          throw new Error(response.data.error);\n        }\n        this.databaseDesigns = response.data;\n        this.renderDatabaseDesigns();\n      } catch (error) {\n        console.error('Error fetching database designs:', error);\n        this.error = error.message;\n        this.databaseDesigns = [];\n        this.clearDesignsDisplay();\n      } finally {\n        this.loading = false;\n      }\n    },\n    renderDatabaseDesigns() {\n      // 清空现有内容\n      this.clearDesignsDisplay();\n      if (this.databaseDesigns.length === 0) return;\n\n      // 取最新的设计（按创建时间排序后的第一个）\n      const latestDesign = this.databaseDesigns[0];\n\n      // 渲染ER图\n      this.renderERDiagram(latestDesign.erd_diagram);\n\n      // 渲染SQL脚本\n      this.renderSQLScript(latestDesign.sql_script);\n    },\n    renderERDiagram(erdData) {\n      const container = document.getElementById('tablesContainer');\n\n      // 这里根据你的ER图数据格式进行渲染\n      // 示例：假设erdData是Mermaid.js格式的字符串\n      container.innerHTML = `\n      <div class=\"mermaid\">\n        ${erdData}\n      </div>\n    `;\n\n      // 如果有Mermaid.js，可以初始化渲染\n      if (window.mermaid) {\n        mermaid.init();\n      }\n    },\n    renderSQLScript(sqlScript) {\n      const sqlPreview = document.getElementById('sqlPreview');\n      sqlPreview.textContent = sqlScript;\n\n      // // 如果有语法高亮库，可以在这里初始化\n      // if (window.hljs) {\n      //     hljs.highlightElement(sqlPreview);\n      // }\n    },\n    clearDesignsDisplay() {\n      document.getElementById('tablesContainer').innerHTML = `\n      <div class=\"text-center text-gray-500 py-10\">\n        <i class=\"fas fa-database text-4xl mb-2\"></i>\n        <p>${this.databaseDesigns.length === 0 ? '没有找到数据库设计' : '加载中...'}</p>\n      </div>\n    `;\n      document.getElementById('sqlPreview').textContent = '-- SQL语句将在这里显示\\n-- 请先选择数据库设计';\n    },\n    // 导出SQL方法\n    exportSQL() {\n      if (!this.databaseDesigns || this.databaseDesigns.length === 0) return;\n      const latestDesign = this.databaseDesigns[0];\n      const blob = new Blob([latestDesign.sql_script], {\n        type: 'text/sql'\n      });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `database_design_${this.selectedRequirementId}.sql`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    },\n    // 复制SQL方法\n    copySQL() {\n      if (!this.databaseDesigns || this.databaseDesigns.length === 0) return;\n      const latestDesign = this.databaseDesigns[0];\n      navigator.clipboard.writeText(latestDesign.sql_script).then(() => {\n        alert('SQL已复制到剪贴板');\n      }).catch(err => {\n        console.error('复制失败:', err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mermaid","name","data","requirements","selectedRequirement","selectedRequirementId","loading","error","architecture","databaseDesigns","techIcons","frontend","backend","database","created","fetchRequirements","methods","handleRequirementSelected","id","console","log","fetchDatabaseDesigns","response","get","err","requirementId","params","requirement_id","Error","renderDatabaseDesigns","message","clearDesignsDisplay","length","latestDesign","renderERDiagram","erd_diagram","renderSQLScript","sql_script","erdData","container","document","getElementById","innerHTML","window","init","sqlScript","sqlPreview","textContent","exportSQL","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","copySQL","navigator","clipboard","writeText","then","alert","catch"],"sources":["C:\\Users\\ASUS\\Desktop\\autochat\\frontend\\src\\views\\DatabaseDesign.vue"],"sourcesContent":["<template>\r\n    <div class=\"p-8\">\r\n        <!-- 需求选择区\r\n                <div class=\"flex items-center mb-6 space-x-4\">\r\n                    <div class=\"text-lg font-medium\">需求选择：</div>\r\n                    <select id=\"projectSelect\"\r\n                        class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                        onchange=\"updateDatabaseDesigns()\">\r\n                        <option value=\"1\">智能客服系统 v1.0</option>\r\n                        <option value=\"2\">数据分析平台 v2.0</option>\r\n                        <option value=\"3\">企业协同办公系统 v3.0</option>\r\n                        <option value=\"4\">电商管理平台 v1.5</option>\r\n                    </select>\r\n\r\n                    <div class=\"text-lg font-medium ml-8\">数据库设计：</div>\r\n                    <select id=\"dbDesignSelect\"\r\n                        class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                        onchange=\"showTables()\">\r\n                        <option value=\"\">请先选择需求</option>\r\n                    </select> \r\n                </div> -->\r\n        <!-- 需求选择和生成按钮 -->\r\n        <div class=\"flex items-center justify-between mb-6\">\r\n            <div class=\"flex items-center space-x-4\">\r\n                <div class=\"text-lg font-medium\">需求选择：</div>\r\n                <select v-model=\"selectedRequirement\"\r\n                    class=\"border border-gray-300 rounded-button px-4 py-2 min-w-[200px] focus:outline-none focus:ring-2 focus:ring-primary\"\r\n                    @change=\"handleRequirementSelected(selectedRequirement)\">\r\n                    <option disabled value=\"\">请选择需求</option>\r\n                    <option v-for=\"req in requirements\" :key=\"req.id\" :value=\"req.id\">\r\n                        {{ req.name }} v{{ req.version }}\r\n                    </option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- 表展示区 -->\r\n        <div class=\"bg-white rounded-lg shadow p-6 mb-6\">\r\n            <div class=\"flex items-center justify-between mb-4\">\r\n                <div class=\"flex items-center\">\r\n                    <i class=\"fas fa-table text-primary text-xl\"></i>\r\n                    <h3 class=\"ml-2 text-lg font-medium\">数据表设计(ER图展示)</h3>\r\n                </div>\r\n                <div class=\"flex space-x-2\">\r\n                    <button class=\"px-4 py-2 bg-primary text-white !rounded-button\" @click=\"exportSQL\">\r\n                        <i class=\"fas fa-file-export mr-2\"></i>导出SQL\r\n                    </button>\r\n                    <button class=\"px-4 py-2 border border-gray-300 !rounded-button\" >\r\n                        <i class=\"fas fa-print mr-2\"></i>生成数据库\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"tablesContainer\" class=\"space-y-6\">\r\n                <!-- 表结构将在这里动态生成 -->\r\n                <div class=\"text-center text-gray-500 py-10\">\r\n                    <i class=\"fas fa-database text-4xl mb-2\"></i>\r\n                    <p>请选择需求查看表结构</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- SQL预览区 -->\r\n        <div class=\"bg-white rounded-lg shadow p-6\">\r\n            <div class=\"flex items-center justify-between mb-4\">\r\n                <div class=\"flex items-center\">\r\n                    <i class=\"fas fa-code text-primary text-xl\"></i>\r\n                    <h3 class=\"ml-2 text-lg font-medium\">SQL预览</h3>\r\n                </div>\r\n                <div class=\"flex space-x-2\">\r\n                    <button class=\"px-4 py-2 bg-primary text-white !rounded-button\" @click=\"copySQL\">\r\n                        <i class=\"far fa-copy mr-2\"></i>复制SQL\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <pre id=\"sqlPreview\" class=\"bg-gray-50 p-4 rounded-lg overflow-x-auto text-sm font-mono sql-code\"\r\n                style=\"height: 300px;\">\r\n-- SQL语句将在这里显示\r\n-- 请先选择数据库设计</pre>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\nimport mermaid from 'mermaid';\r\n  export default {\r\n    name: 'DatabaseDesign',\r\n    data() {\r\n        return {\r\n            requirements: [],\r\n            selectedRequirement: '',\r\n            selectedRequirementId: null,\r\n            loading: false,\r\n            error: null,\r\n            architecture: null,\r\n            databaseDesigns: [],\r\n            techIcons: {\r\n                frontend: 'fab fa-vuejs',\r\n                backend: 'fab fa-python',\r\n                database: 'fas fa-database'\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchRequirements();\r\n    },\r\n    methods: {\r\n        handleRequirementSelected(id) {\r\n            this.selectedRequirementId = id;\r\n            console.log('Selected Requirement ID:', this.selectedRequirementId);\r\n            this.fetchDatabaseDesigns(this.selectedRequirementId);\r\n        },\r\n        async fetchRequirements() {\r\n            this.loading = true;\r\n            this.error = null;\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/requirements/list');\r\n                this.requirements = response.data;\r\n            } catch (err) {\r\n                console.error('Error fetching requirements:', err);\r\n                this.error = '无法加载需求列表';\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n        async fetchDatabaseDesigns(requirementId) {\r\n            this.loading = true;\r\n            this.error = null;\r\n\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/api/database_designs', {\r\n                    params: { requirement_id: requirementId }\r\n                });\r\n\r\n                if (response.data.error) {\r\n                    throw new Error(response.data.error);\r\n                }\r\n\r\n                this.databaseDesigns = response.data;\r\n                this.renderDatabaseDesigns();\r\n\r\n            } catch (error) {\r\n                console.error('Error fetching database designs:', error);\r\n                this.error = error.message;\r\n                this.databaseDesigns = [];\r\n                this.clearDesignsDisplay();\r\n            } finally {\r\n                this.loading = false;\r\n            }\r\n        },\r\n\r\n        renderDatabaseDesigns() {\r\n            // 清空现有内容\r\n            this.clearDesignsDisplay();\r\n\r\n            if (this.databaseDesigns.length === 0) return;\r\n\r\n            // 取最新的设计（按创建时间排序后的第一个）\r\n            const latestDesign = this.databaseDesigns[0];\r\n\r\n            // 渲染ER图\r\n            this.renderERDiagram(latestDesign.erd_diagram);\r\n\r\n            // 渲染SQL脚本\r\n            this.renderSQLScript(latestDesign.sql_script);\r\n        },\r\n\r\n        renderERDiagram(erdData) {\r\n            const container = document.getElementById('tablesContainer');\r\n\r\n            // 这里根据你的ER图数据格式进行渲染\r\n            // 示例：假设erdData是Mermaid.js格式的字符串\r\n            container.innerHTML = `\r\n      <div class=\"mermaid\">\r\n        ${erdData}\r\n      </div>\r\n    `;\r\n\r\n            // 如果有Mermaid.js，可以初始化渲染\r\n            if (window.mermaid) {\r\n                mermaid.init();\r\n            }\r\n        },\r\n\r\n        renderSQLScript(sqlScript) {\r\n            const sqlPreview = document.getElementById('sqlPreview');\r\n            sqlPreview.textContent = sqlScript;\r\n\r\n            // // 如果有语法高亮库，可以在这里初始化\r\n            // if (window.hljs) {\r\n            //     hljs.highlightElement(sqlPreview);\r\n            // }\r\n        },\r\n\r\n        clearDesignsDisplay() {\r\n            document.getElementById('tablesContainer').innerHTML = `\r\n      <div class=\"text-center text-gray-500 py-10\">\r\n        <i class=\"fas fa-database text-4xl mb-2\"></i>\r\n        <p>${this.databaseDesigns.length === 0 ? '没有找到数据库设计' : '加载中...'}</p>\r\n      </div>\r\n    `;\r\n\r\n            document.getElementById('sqlPreview').textContent =\r\n                '-- SQL语句将在这里显示\\n-- 请先选择数据库设计';\r\n        },\r\n\r\n        // 导出SQL方法\r\n        exportSQL() {\r\n            if (!this.databaseDesigns || this.databaseDesigns.length === 0) return;\r\n\r\n            const latestDesign = this.databaseDesigns[0];\r\n            const blob = new Blob([latestDesign.sql_script], { type: 'text/sql' });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = `database_design_${this.selectedRequirementId}.sql`;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        },\r\n\r\n        // 复制SQL方法\r\n        copySQL() {\r\n            if (!this.databaseDesigns || this.databaseDesigns.length === 0) return;\r\n\r\n            const latestDesign = this.databaseDesigns[0];\r\n            navigator.clipboard.writeText(latestDesign.sql_script)\r\n                .then(() => {\r\n                    alert('SQL已复制到剪贴板');\r\n                })\r\n                .catch(err => {\r\n                    console.error('复制失败:', err);\r\n                });\r\n        }\r\n    }\r\n\r\n  }\r\n  </script>\r\n  "],"mappings":"AAoFA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,OAAM,MAAO,SAAS;AAC3B,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,YAAY,EAAE,EAAE;MAChBC,mBAAmB,EAAE,EAAE;MACvBC,qBAAqB,EAAE,IAAI;MAC3BC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,IAAI;MACXC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE;QACPC,QAAQ,EAAE,cAAc;QACxBC,OAAO,EAAE,eAAe;QACxBC,QAAQ,EAAE;MACd;IACJ;EACJ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACLC,yBAAyBA,CAACC,EAAE,EAAE;MAC1B,IAAI,CAACb,qBAAoB,GAAIa,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE,IAAI,CAACf,qBAAqB,CAAC;MACnE,IAAI,CAACgB,oBAAoB,CAAC,IAAI,CAAChB,qBAAqB,CAAC;IACzD,CAAC;IACD,MAAMU,iBAAiBA,CAAA,EAAG;MACtB,IAAI,CAACT,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MACjB,IAAI;QACA,MAAMe,QAAO,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,6CAA6C,CAAC;QAC/E,IAAI,CAACpB,YAAW,GAAImB,QAAQ,CAACpB,IAAI;MACrC,EAAE,OAAOsB,GAAG,EAAE;QACVL,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEiB,GAAG,CAAC;QAClD,IAAI,CAACjB,KAAI,GAAI,UAAU;MAC3B,UAAU;QACN,IAAI,CAACD,OAAM,GAAI,KAAK;MACxB;IACJ,CAAC;IACD,MAAMe,oBAAoBA,CAACI,aAAa,EAAE;MACtC,IAAI,CAACnB,OAAM,GAAI,IAAI;MACnB,IAAI,CAACC,KAAI,GAAI,IAAI;MAEjB,IAAI;QACA,MAAMe,QAAO,GAAI,MAAMvB,KAAK,CAACwB,GAAG,CAAC,4CAA4C,EAAE;UAC3EG,MAAM,EAAE;YAAEC,cAAc,EAAEF;UAAc;QAC5C,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACpB,IAAI,CAACK,KAAK,EAAE;UACrB,MAAM,IAAIqB,KAAK,CAACN,QAAQ,CAACpB,IAAI,CAACK,KAAK,CAAC;QACxC;QAEA,IAAI,CAACE,eAAc,GAAIa,QAAQ,CAACpB,IAAI;QACpC,IAAI,CAAC2B,qBAAqB,CAAC,CAAC;MAEhC,EAAE,OAAOtB,KAAK,EAAE;QACZY,OAAO,CAACZ,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACuB,OAAO;QAC1B,IAAI,CAACrB,eAAc,GAAI,EAAE;QACzB,IAAI,CAACsB,mBAAmB,CAAC,CAAC;MAC9B,UAAU;QACN,IAAI,CAACzB,OAAM,GAAI,KAAK;MACxB;IACJ,CAAC;IAEDuB,qBAAqBA,CAAA,EAAG;MACpB;MACA,IAAI,CAACE,mBAAmB,CAAC,CAAC;MAE1B,IAAI,IAAI,CAACtB,eAAe,CAACuB,MAAK,KAAM,CAAC,EAAE;;MAEvC;MACA,MAAMC,YAAW,GAAI,IAAI,CAACxB,eAAe,CAAC,CAAC,CAAC;;MAE5C;MACA,IAAI,CAACyB,eAAe,CAACD,YAAY,CAACE,WAAW,CAAC;;MAE9C;MACA,IAAI,CAACC,eAAe,CAACH,YAAY,CAACI,UAAU,CAAC;IACjD,CAAC;IAEDH,eAAeA,CAACI,OAAO,EAAE;MACrB,MAAMC,SAAQ,GAAIC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;;MAE5D;MACA;MACAF,SAAS,CAACG,SAAQ,GAAI;;UAExBJ,OAAO;;KAEZ;;MAEO;MACA,IAAIK,MAAM,CAAC3C,OAAO,EAAE;QAChBA,OAAO,CAAC4C,IAAI,CAAC,CAAC;MAClB;IACJ,CAAC;IAEDR,eAAeA,CAACS,SAAS,EAAE;MACvB,MAAMC,UAAS,GAAIN,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;MACxDK,UAAU,CAACC,WAAU,GAAIF,SAAS;;MAElC;MACA;MACA;MACA;IACJ,CAAC;IAEDd,mBAAmBA,CAAA,EAAG;MAClBS,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC,CAACC,SAAQ,GAAI;;;aAGtD,IAAI,CAACjC,eAAe,CAACuB,MAAK,KAAM,IAAI,WAAU,GAAI,QAAQ;;KAElE;MAEOQ,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACM,WAAU,GAC5C,8BAA8B;IACtC,CAAC;IAED;IACAC,SAASA,CAAA,EAAG;MACR,IAAI,CAAC,IAAI,CAACvC,eAAc,IAAK,IAAI,CAACA,eAAe,CAACuB,MAAK,KAAM,CAAC,EAAE;MAEhE,MAAMC,YAAW,GAAI,IAAI,CAACxB,eAAe,CAAC,CAAC,CAAC;MAC5C,MAAMwC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACjB,YAAY,CAACI,UAAU,CAAC,EAAE;QAAEc,IAAI,EAAE;MAAW,CAAC,CAAC;MACtE,MAAMC,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MAErC,MAAMM,CAAA,GAAIf,QAAQ,CAACgB,aAAa,CAAC,GAAG,CAAC;MACrCD,CAAC,CAACE,IAAG,GAAIL,GAAG;MACZG,CAAC,CAACG,QAAO,GAAI,mBAAmB,IAAI,CAACrD,qBAAqB,MAAM;MAChEmC,QAAQ,CAACmB,IAAI,CAACC,WAAW,CAACL,CAAC,CAAC;MAC5BA,CAAC,CAACM,KAAK,CAAC,CAAC;MACTrB,QAAQ,CAACmB,IAAI,CAACG,WAAW,CAACP,CAAC,CAAC;MAC5BF,GAAG,CAACU,eAAe,CAACX,GAAG,CAAC;IAC5B,CAAC;IAED;IACAY,OAAOA,CAAA,EAAG;MACN,IAAI,CAAC,IAAI,CAACvD,eAAc,IAAK,IAAI,CAACA,eAAe,CAACuB,MAAK,KAAM,CAAC,EAAE;MAEhE,MAAMC,YAAW,GAAI,IAAI,CAACxB,eAAe,CAAC,CAAC,CAAC;MAC5CwD,SAAS,CAACC,SAAS,CAACC,SAAS,CAAClC,YAAY,CAACI,UAAU,EAChD+B,IAAI,CAAC,MAAM;QACRC,KAAK,CAAC,YAAY,CAAC;MACvB,CAAC,EACAC,KAAK,CAAC9C,GAAE,IAAK;QACVL,OAAO,CAACZ,KAAK,CAAC,OAAO,EAAEiB,GAAG,CAAC;MAC/B,CAAC,CAAC;IACV;EACJ;AAEF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}