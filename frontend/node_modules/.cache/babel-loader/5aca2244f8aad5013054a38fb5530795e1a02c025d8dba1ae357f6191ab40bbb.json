{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { StateDB, stateDiagram_default, styles_default } from \"./chunk-AEK57VVT.mjs\";\nimport \"./chunk-RZ5BOZE2.mjs\";\nimport \"./chunk-TYCBKAJE.mjs\";\nimport \"./chunk-IIMUDSI4.mjs\";\nimport \"./chunk-VV3M67IP.mjs\";\nimport \"./chunk-HRU6DDCH.mjs\";\nimport \"./chunk-K557N5IZ.mjs\";\nimport \"./chunk-H2D2JQ3I.mjs\";\nimport \"./chunk-C3MQ5ANM.mjs\";\nimport { utils_default } from \"./chunk-O4NI6UNU.mjs\";\nimport { __name, common_default, configureSvgSize, getConfig2 as getConfig, log } from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/state/stateRenderer.js\nimport { select } from \"d3\";\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/diagrams/state/shapes.js\nimport { line, curveBasis } from \"d3\";\n\n// src/diagrams/state/id-cache.js\nvar idCache = {};\nvar set = /* @__PURE__ */__name((key, val) => {\n  idCache[key] = val;\n}, \"set\");\nvar get = /* @__PURE__ */__name(k => idCache[k], \"get\");\nvar keys = /* @__PURE__ */__name(() => Object.keys(idCache), \"keys\");\nvar size = /* @__PURE__ */__name(() => keys().length, \"size\");\nvar id_cache_default = {\n  get,\n  set,\n  keys,\n  size\n};\n\n// src/diagrams/state/shapes.js\nvar drawStartState = /* @__PURE__ */__name(g => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit), \"drawStartState\");\nvar drawDivider = /* @__PURE__ */__name(g => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar drawSimpleState = /* @__PURE__ */__name((g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n}, \"drawSimpleState\");\nvar drawDescrState = /* @__PURE__ */__name((g, stateDef) => {\n  const addTspan = /* @__PURE__ */__name(function (textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  }, \"addTspan\");\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\"y\", titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function (descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"drawDescrState\");\nvar addTitleAndBox = /* @__PURE__ */__name((g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc) {}\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\"height\", graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"addTitleAndBox\");\nvar drawEndState = /* @__PURE__ */__name(g => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding);\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar drawForkJoinState = /* @__PURE__ */__name((g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n}, \"drawForkJoinState\");\nvar _drawLongText = /* @__PURE__ */__name((_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common_default.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return {\n    textWidth: textElem.node().getBBox().width,\n    textHeight\n  };\n}, \"_drawLongText\");\nvar drawNote = /* @__PURE__ */__name((text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const {\n    textWidth,\n    textHeight\n  } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n}, \"drawNote\");\nvar drawState = /* @__PURE__ */__name(function (elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  id_cache_default.set(id, stateInfo);\n  return stateInfo;\n}, \"drawState\");\nvar edgeCount = 0;\nvar drawEdge = /* @__PURE__ */__name(function (elem, path, relation) {\n  const getRelationType = /* @__PURE__ */__name(function (type) {\n    switch (type) {\n      case StateDB.relationType.AGGREGATION:\n        return \"aggregation\";\n      case StateDB.relationType.EXTENSION:\n        return \"extension\";\n      case StateDB.relationType.COMPOSITION:\n        return \"composition\";\n      case StateDB.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  }, \"getRelationType\");\n  path.points = path.points.filter(p => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\"marker-end\", \"url(\" + url + \"#\" + getRelationType(StateDB.relationType.DEPENDENCY) + \"End)\");\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const {\n      x,\n      y\n    } = utils_default.calcLabelPosition(path.points);\n    const rows = common_default.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n}, \"drawEdge\");\n\n// src/diagrams/state/stateRenderer.js\nvar conf;\nvar transformationLog = {};\nvar setConf = /* @__PURE__ */__name(function () {}, \"setConf\");\nvar insertMarkers = /* @__PURE__ */__name(function (elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar draw = /* @__PURE__ */__name(function (text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\"viewBox\", `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height);\n}, \"draw\");\nvar getLabelWidth = /* @__PURE__ */__name(text => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar renderDoc = /* @__PURE__ */__name((doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function () {\n    return {};\n  });\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  let first = true;\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      if (first) {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = {\n          y: conf.compositTitleSize\n        };\n      } else {\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n      }\n    } else {\n      node = drawState(diagram2, stateDef, graph);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef, graph);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function (relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(relation.id1, relation.id2, {\n      relation,\n      width: getLabelWidth(relation.title),\n      height: conf.labelHeight * common_default.getRows(relation.title).length,\n      labelpos: \"c\"\n    }, \"id\" + cnt);\n  });\n  dagreLayout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function (v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"transform\", \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\");\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach(divider => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function (e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n}, \"renderDoc\");\nvar stateRenderer_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/state/stateDiagram.ts\nvar diagram = {\n  parser: stateDiagram_default,\n  get db() {\n    return new StateDB(1);\n  },\n  renderer: stateRenderer_default,\n  styles: styles_default,\n  init: /* @__PURE__ */__name(cnf => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n  }, \"init\")\n};\nexport { diagram };","map":{"version":3,"names":["StateDB","stateDiagram_default","styles_default","utils_default","__name","common_default","configureSvgSize","getConfig2","getConfig","log","select","layout","dagreLayout","graphlib","line","curveBasis","idCache","set","key","val","get","k","keys","Object","size","length","id_cache_default","drawStartState","g","append","attr","state","sizeUnit","padding","drawDivider","style","textHeight","drawSimpleState","stateDef","fontSize","text","id","classBox","node","getBBox","insert","width","height","radius","drawDescrState","addTspan","textEl","txt","isFirst2","tSpan","title","descriptions","titleBox","titleHeight","description","dividerMargin","isFirst","isSecond","forEach","descr","descrLine","descrBox","Math","max","addTitleAndBox","altBkg","pad","dblPad","orgBox","orgWidth","orgX","x","titleShift","titleWidth","startX","graphBox","doc","abs","lineY","drawEndState","miniPadding","drawForkJoinState","forkWidth","forkHeight","parentId","tmp","_drawLongText","_text","y","textElem","replace","lines","split","lineBreakRegex","tHeight","noteMargin","line2","trim","span","textBounds","textWidth","drawNote","note","rectElem","drawState","elem","stateInfo","label","type","stateBox","edgeCount","drawEdge","path","relation","getRelationType","relationType","AGGREGATION","EXTENSION","COMPOSITION","DEPENDENCY","points","filter","p","Number","isNaN","lineData","lineFunction","d","curve","svgPath","url","arrowMarkerAbsolute","window","location","protocol","host","pathname","search","calcLabelPosition","rows","getRows","titleRows","maxWidth","minX","i","boundsTmp","min","info","push","boxHeight","heightAdj","bounds","conf","transformationLog","setConf","insertMarkers","draw","_version","diagObj","securityLevel","sandboxElement","root","nodes","contentDocument","body","document","debug","diagram2","rootDoc","db","getRootDoc","renderDoc","svgWidth","useMaxWidth","getLabelWidth","fontSizeFactor","domDocument","graph","Graph","compound","multigraph","edgeFreeDoc","stmt","setGraph","rankdir","ranker","ranksep","edgeLengthFactor","nodeSep","isMultiGraph","setDefaultEdgeLabel","states","getStates","relations","getRelations","keys2","first","sub","boxBounds","compositTitleSize","noteDef","position","setNode","setParent","nodeCount","cnt","setEdge","id1","id2","labelHeight","labelpos","svgElem","v","warn","JSON","stringify","dividers","querySelectorAll","divider","parent","parentElement","pWidth","pShift","parseInt","getAttribute","setAttribute","edges","e","edge","w","stateRenderer_default","diagram","parser","renderer","styles","init","cnf"],"sources":["C:/Users/ASUS/Desktop/autochat/frontend/node_modules/mermaid/dist/chunks/mermaid.core/stateDiagram-DGXRK772.mjs"],"sourcesContent":["import {\n  StateDB,\n  stateDiagram_default,\n  styles_default\n} from \"./chunk-AEK57VVT.mjs\";\nimport \"./chunk-RZ5BOZE2.mjs\";\nimport \"./chunk-TYCBKAJE.mjs\";\nimport \"./chunk-IIMUDSI4.mjs\";\nimport \"./chunk-VV3M67IP.mjs\";\nimport \"./chunk-HRU6DDCH.mjs\";\nimport \"./chunk-K557N5IZ.mjs\";\nimport \"./chunk-H2D2JQ3I.mjs\";\nimport \"./chunk-C3MQ5ANM.mjs\";\nimport {\n  utils_default\n} from \"./chunk-O4NI6UNU.mjs\";\nimport {\n  __name,\n  common_default,\n  configureSvgSize,\n  getConfig2 as getConfig,\n  log\n} from \"./chunk-YTJNT7DU.mjs\";\n\n// src/diagrams/state/stateRenderer.js\nimport { select } from \"d3\";\nimport { layout as dagreLayout } from \"dagre-d3-es/src/dagre/index.js\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\n\n// src/diagrams/state/shapes.js\nimport { line, curveBasis } from \"d3\";\n\n// src/diagrams/state/id-cache.js\nvar idCache = {};\nvar set = /* @__PURE__ */ __name((key, val) => {\n  idCache[key] = val;\n}, \"set\");\nvar get = /* @__PURE__ */ __name((k) => idCache[k], \"get\");\nvar keys = /* @__PURE__ */ __name(() => Object.keys(idCache), \"keys\");\nvar size = /* @__PURE__ */ __name(() => keys().length, \"size\");\nvar id_cache_default = {\n  get,\n  set,\n  keys,\n  size\n};\n\n// src/diagrams/state/shapes.js\nvar drawStartState = /* @__PURE__ */ __name((g) => g.append(\"circle\").attr(\"class\", \"start-state\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit), \"drawStartState\");\nvar drawDivider = /* @__PURE__ */ __name((g) => g.append(\"line\").style(\"stroke\", \"grey\").style(\"stroke-dasharray\", \"3\").attr(\"x1\", getConfig().state.textHeight).attr(\"class\", \"divider\").attr(\"x2\", getConfig().state.textHeight * 2).attr(\"y1\", 0).attr(\"y2\", 0), \"drawDivider\");\nvar drawSimpleState = /* @__PURE__ */ __name((g, stateDef) => {\n  const state = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 2 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const classBox = state.node().getBBox();\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", classBox.width + 2 * getConfig().state.padding).attr(\"height\", classBox.height + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return state;\n}, \"drawSimpleState\");\nvar drawDescrState = /* @__PURE__ */ __name((g, stateDef) => {\n  const addTspan = /* @__PURE__ */ __name(function(textEl, txt, isFirst2) {\n    const tSpan = textEl.append(\"tspan\").attr(\"x\", 2 * getConfig().state.padding).text(txt);\n    if (!isFirst2) {\n      tSpan.attr(\"dy\", getConfig().state.textHeight);\n    }\n  }, \"addTspan\");\n  const title = g.append(\"text\").attr(\"x\", 2 * getConfig().state.padding).attr(\"y\", getConfig().state.textHeight + 1.3 * getConfig().state.padding).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.descriptions[0]);\n  const titleBox = title.node().getBBox();\n  const titleHeight = titleBox.height;\n  const description = g.append(\"text\").attr(\"x\", getConfig().state.padding).attr(\n    \"y\",\n    titleHeight + getConfig().state.padding * 0.4 + getConfig().state.dividerMargin + getConfig().state.textHeight\n  ).attr(\"class\", \"state-description\");\n  let isFirst = true;\n  let isSecond = true;\n  stateDef.descriptions.forEach(function(descr) {\n    if (!isFirst) {\n      addTspan(description, descr, isSecond);\n      isSecond = false;\n    }\n    isFirst = false;\n  });\n  const descrLine = g.append(\"line\").attr(\"x1\", getConfig().state.padding).attr(\"y1\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"y2\", getConfig().state.padding + titleHeight + getConfig().state.dividerMargin / 2).attr(\"class\", \"descr-divider\");\n  const descrBox = description.node().getBBox();\n  const width = Math.max(descrBox.width, titleBox.width);\n  descrLine.attr(\"x2\", width + 3 * getConfig().state.padding);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding).attr(\"width\", width + 2 * getConfig().state.padding).attr(\"height\", descrBox.height + titleHeight + 2 * getConfig().state.padding).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"drawDescrState\");\nvar addTitleAndBox = /* @__PURE__ */ __name((g, stateDef, altBkg) => {\n  const pad = getConfig().state.padding;\n  const dblPad = 2 * getConfig().state.padding;\n  const orgBox = g.node().getBBox();\n  const orgWidth = orgBox.width;\n  const orgX = orgBox.x;\n  const title = g.append(\"text\").attr(\"x\", 0).attr(\"y\", getConfig().state.titleShift).attr(\"font-size\", getConfig().state.fontSize).attr(\"class\", \"state-title\").text(stateDef.id);\n  const titleBox = title.node().getBBox();\n  const titleWidth = titleBox.width + dblPad;\n  let width = Math.max(titleWidth, orgWidth);\n  if (width === orgWidth) {\n    width = width + dblPad;\n  }\n  let startX;\n  const graphBox = g.node().getBBox();\n  if (stateDef.doc) {\n  }\n  startX = orgX - pad;\n  if (titleWidth > orgWidth) {\n    startX = (orgWidth - width) / 2 + pad;\n  }\n  if (Math.abs(orgX - graphBox.x) < pad && titleWidth > orgWidth) {\n    startX = orgX - (titleWidth - orgWidth) / 2;\n  }\n  const lineY = 1 - getConfig().state.textHeight;\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\"y\", lineY).attr(\"class\", altBkg ? \"alt-composit\" : \"composit\").attr(\"width\", width).attr(\n    \"height\",\n    graphBox.height + getConfig().state.textHeight + getConfig().state.titleShift + 1\n  ).attr(\"rx\", \"0\");\n  title.attr(\"x\", startX + pad);\n  if (titleWidth <= orgWidth) {\n    title.attr(\"x\", orgX + (width - dblPad) / 2 - titleWidth / 2 + pad);\n  }\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", getConfig().state.textHeight * 3).attr(\"rx\", getConfig().state.radius);\n  g.insert(\"rect\", \":first-child\").attr(\"x\", startX).attr(\n    \"y\",\n    getConfig().state.titleShift - getConfig().state.textHeight - getConfig().state.padding\n  ).attr(\"width\", width).attr(\"height\", graphBox.height + 3 + 2 * getConfig().state.textHeight).attr(\"rx\", getConfig().state.radius);\n  return g;\n}, \"addTitleAndBox\");\nvar drawEndState = /* @__PURE__ */ __name((g) => {\n  g.append(\"circle\").attr(\"class\", \"end-state-outer\").attr(\"r\", getConfig().state.sizeUnit + getConfig().state.miniPadding).attr(\n    \"cx\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  ).attr(\n    \"cy\",\n    getConfig().state.padding + getConfig().state.sizeUnit + getConfig().state.miniPadding\n  );\n  return g.append(\"circle\").attr(\"class\", \"end-state-inner\").attr(\"r\", getConfig().state.sizeUnit).attr(\"cx\", getConfig().state.padding + getConfig().state.sizeUnit + 2).attr(\"cy\", getConfig().state.padding + getConfig().state.sizeUnit + 2);\n}, \"drawEndState\");\nvar drawForkJoinState = /* @__PURE__ */ __name((g, stateDef) => {\n  let width = getConfig().state.forkWidth;\n  let height = getConfig().state.forkHeight;\n  if (stateDef.parentId) {\n    let tmp = width;\n    width = height;\n    height = tmp;\n  }\n  return g.append(\"rect\").style(\"stroke\", \"black\").style(\"fill\", \"black\").attr(\"width\", width).attr(\"height\", height).attr(\"x\", getConfig().state.padding).attr(\"y\", getConfig().state.padding);\n}, \"drawForkJoinState\");\nvar _drawLongText = /* @__PURE__ */ __name((_text, x, y, g) => {\n  let textHeight = 0;\n  const textElem = g.append(\"text\");\n  textElem.style(\"text-anchor\", \"start\");\n  textElem.attr(\"class\", \"noteText\");\n  let text = _text.replace(/\\r\\n/g, \"<br/>\");\n  text = text.replace(/\\n/g, \"<br/>\");\n  const lines = text.split(common_default.lineBreakRegex);\n  let tHeight = 1.25 * getConfig().state.noteMargin;\n  for (const line2 of lines) {\n    const txt = line2.trim();\n    if (txt.length > 0) {\n      const span = textElem.append(\"tspan\");\n      span.text(txt);\n      if (tHeight === 0) {\n        const textBounds = span.node().getBBox();\n        tHeight += textBounds.height;\n      }\n      textHeight += tHeight;\n      span.attr(\"x\", x + getConfig().state.noteMargin);\n      span.attr(\"y\", y + textHeight + 1.25 * getConfig().state.noteMargin);\n    }\n  }\n  return { textWidth: textElem.node().getBBox().width, textHeight };\n}, \"_drawLongText\");\nvar drawNote = /* @__PURE__ */ __name((text, g) => {\n  g.attr(\"class\", \"state-note\");\n  const note = g.append(\"rect\").attr(\"x\", 0).attr(\"y\", getConfig().state.padding);\n  const rectElem = g.append(\"g\");\n  const { textWidth, textHeight } = _drawLongText(text, 0, 0, rectElem);\n  note.attr(\"height\", textHeight + 2 * getConfig().state.noteMargin);\n  note.attr(\"width\", textWidth + getConfig().state.noteMargin * 2);\n  return note;\n}, \"drawNote\");\nvar drawState = /* @__PURE__ */ __name(function(elem, stateDef) {\n  const id = stateDef.id;\n  const stateInfo = {\n    id,\n    label: stateDef.id,\n    width: 0,\n    height: 0\n  };\n  const g = elem.append(\"g\").attr(\"id\", id).attr(\"class\", \"stateGroup\");\n  if (stateDef.type === \"start\") {\n    drawStartState(g);\n  }\n  if (stateDef.type === \"end\") {\n    drawEndState(g);\n  }\n  if (stateDef.type === \"fork\" || stateDef.type === \"join\") {\n    drawForkJoinState(g, stateDef);\n  }\n  if (stateDef.type === \"note\") {\n    drawNote(stateDef.note.text, g);\n  }\n  if (stateDef.type === \"divider\") {\n    drawDivider(g);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length === 0) {\n    drawSimpleState(g, stateDef);\n  }\n  if (stateDef.type === \"default\" && stateDef.descriptions.length > 0) {\n    drawDescrState(g, stateDef);\n  }\n  const stateBox = g.node().getBBox();\n  stateInfo.width = stateBox.width + 2 * getConfig().state.padding;\n  stateInfo.height = stateBox.height + 2 * getConfig().state.padding;\n  id_cache_default.set(id, stateInfo);\n  return stateInfo;\n}, \"drawState\");\nvar edgeCount = 0;\nvar drawEdge = /* @__PURE__ */ __name(function(elem, path, relation) {\n  const getRelationType = /* @__PURE__ */ __name(function(type) {\n    switch (type) {\n      case StateDB.relationType.AGGREGATION:\n        return \"aggregation\";\n      case StateDB.relationType.EXTENSION:\n        return \"extension\";\n      case StateDB.relationType.COMPOSITION:\n        return \"composition\";\n      case StateDB.relationType.DEPENDENCY:\n        return \"dependency\";\n    }\n  }, \"getRelationType\");\n  path.points = path.points.filter((p) => !Number.isNaN(p.y));\n  const lineData = path.points;\n  const lineFunction = line().x(function(d) {\n    return d.x;\n  }).y(function(d) {\n    return d.y;\n  }).curve(curveBasis);\n  const svgPath = elem.append(\"path\").attr(\"d\", lineFunction(lineData)).attr(\"id\", \"edge\" + edgeCount).attr(\"class\", \"transition\");\n  let url = \"\";\n  if (getConfig().state.arrowMarkerAbsolute) {\n    url = window.location.protocol + \"//\" + window.location.host + window.location.pathname + window.location.search;\n    url = url.replace(/\\(/g, \"\\\\(\");\n    url = url.replace(/\\)/g, \"\\\\)\");\n  }\n  svgPath.attr(\n    \"marker-end\",\n    \"url(\" + url + \"#\" + getRelationType(StateDB.relationType.DEPENDENCY) + \"End)\"\n  );\n  if (relation.title !== void 0) {\n    const label = elem.append(\"g\").attr(\"class\", \"stateLabel\");\n    const { x, y } = utils_default.calcLabelPosition(path.points);\n    const rows = common_default.getRows(relation.title);\n    let titleHeight = 0;\n    const titleRows = [];\n    let maxWidth = 0;\n    let minX = 0;\n    for (let i = 0; i <= rows.length; i++) {\n      const title = label.append(\"text\").attr(\"text-anchor\", \"middle\").text(rows[i]).attr(\"x\", x).attr(\"y\", y + titleHeight);\n      const boundsTmp = title.node().getBBox();\n      maxWidth = Math.max(maxWidth, boundsTmp.width);\n      minX = Math.min(minX, boundsTmp.x);\n      log.info(boundsTmp.x, x, y + titleHeight);\n      if (titleHeight === 0) {\n        const titleBox = title.node().getBBox();\n        titleHeight = titleBox.height;\n        log.info(\"Title height\", titleHeight, y);\n      }\n      titleRows.push(title);\n    }\n    let boxHeight = titleHeight * rows.length;\n    if (rows.length > 1) {\n      const heightAdj = (rows.length - 1) * titleHeight * 0.5;\n      titleRows.forEach((title, i) => title.attr(\"y\", y + i * titleHeight - heightAdj));\n      boxHeight = titleHeight * rows.length;\n    }\n    const bounds = label.node().getBBox();\n    label.insert(\"rect\", \":first-child\").attr(\"class\", \"box\").attr(\"x\", x - maxWidth / 2 - getConfig().state.padding / 2).attr(\"y\", y - boxHeight / 2 - getConfig().state.padding / 2 - 3.5).attr(\"width\", maxWidth + getConfig().state.padding).attr(\"height\", boxHeight + getConfig().state.padding);\n    log.info(bounds);\n  }\n  edgeCount++;\n}, \"drawEdge\");\n\n// src/diagrams/state/stateRenderer.js\nvar conf;\nvar transformationLog = {};\nvar setConf = /* @__PURE__ */ __name(function() {\n}, \"setConf\");\nvar insertMarkers = /* @__PURE__ */ __name(function(elem) {\n  elem.append(\"defs\").append(\"marker\").attr(\"id\", \"dependencyEnd\").attr(\"refX\", 19).attr(\"refY\", 7).attr(\"markerWidth\", 20).attr(\"markerHeight\", 28).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M 19,7 L9,13 L14,7 L9,1 Z\");\n}, \"insertMarkers\");\nvar draw = /* @__PURE__ */ __name(function(text, id, _version, diagObj) {\n  conf = getConfig().state;\n  const securityLevel = getConfig().securityLevel;\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n  log.debug(\"Rendering diagram \" + text);\n  const diagram2 = root.select(`[id='${id}']`);\n  insertMarkers(diagram2);\n  const rootDoc = diagObj.db.getRootDoc();\n  renderDoc(rootDoc, diagram2, void 0, false, root, doc, diagObj);\n  const padding = conf.padding;\n  const bounds = diagram2.node().getBBox();\n  const width = bounds.width + padding * 2;\n  const height = bounds.height + padding * 2;\n  const svgWidth = width * 1.75;\n  configureSvgSize(diagram2, height, svgWidth, conf.useMaxWidth);\n  diagram2.attr(\n    \"viewBox\",\n    `${bounds.x - conf.padding}  ${bounds.y - conf.padding} ` + width + \" \" + height\n  );\n}, \"draw\");\nvar getLabelWidth = /* @__PURE__ */ __name((text) => {\n  return text ? text.length * conf.fontSizeFactor : 1;\n}, \"getLabelWidth\");\nvar renderDoc = /* @__PURE__ */ __name((doc, diagram2, parentId, altBkg, root, domDocument, diagObj) => {\n  const graph = new graphlib.Graph({\n    compound: true,\n    multigraph: true\n  });\n  let i;\n  let edgeFreeDoc = true;\n  for (i = 0; i < doc.length; i++) {\n    if (doc[i].stmt === \"relation\") {\n      edgeFreeDoc = false;\n      break;\n    }\n  }\n  if (parentId) {\n    graph.setGraph({\n      rankdir: \"LR\",\n      multigraph: true,\n      compound: true,\n      // acyclicer: 'greedy',\n      ranker: \"tight-tree\",\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      isMultiGraph: true\n      // ranksep: 5,\n      // nodesep: 1\n    });\n  } else {\n    graph.setGraph({\n      rankdir: \"TB\",\n      multigraph: true,\n      compound: true,\n      // isCompound: true,\n      // acyclicer: 'greedy',\n      // ranker: 'longest-path'\n      ranksep: edgeFreeDoc ? 1 : conf.edgeLengthFactor,\n      nodeSep: edgeFreeDoc ? 1 : 50,\n      ranker: \"tight-tree\",\n      // ranker: 'network-simplex'\n      isMultiGraph: true\n    });\n  }\n  graph.setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const states = diagObj.db.getStates();\n  const relations = diagObj.db.getRelations();\n  const keys2 = Object.keys(states);\n  let first = true;\n  for (const key of keys2) {\n    const stateDef = states[key];\n    if (parentId) {\n      stateDef.parentId = parentId;\n    }\n    let node;\n    if (stateDef.doc) {\n      let sub = diagram2.append(\"g\").attr(\"id\", stateDef.id).attr(\"class\", \"stateGroup\");\n      node = renderDoc(stateDef.doc, sub, stateDef.id, !altBkg, root, domDocument, diagObj);\n      if (first) {\n        sub = addTitleAndBox(sub, stateDef, altBkg);\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height + conf.padding / 2;\n        transformationLog[stateDef.id] = { y: conf.compositTitleSize };\n      } else {\n        let boxBounds = sub.node().getBBox();\n        node.width = boxBounds.width;\n        node.height = boxBounds.height;\n      }\n    } else {\n      node = drawState(diagram2, stateDef, graph);\n    }\n    if (stateDef.note) {\n      const noteDef = {\n        descriptions: [],\n        id: stateDef.id + \"-note\",\n        note: stateDef.note,\n        type: \"note\"\n      };\n      const note = drawState(diagram2, noteDef, graph);\n      if (stateDef.note.position === \"left of\") {\n        graph.setNode(node.id + \"-note\", note);\n        graph.setNode(node.id, node);\n      } else {\n        graph.setNode(node.id, node);\n        graph.setNode(node.id + \"-note\", note);\n      }\n      graph.setParent(node.id, node.id + \"-group\");\n      graph.setParent(node.id + \"-note\", node.id + \"-group\");\n    } else {\n      graph.setNode(node.id, node);\n    }\n  }\n  log.debug(\"Count=\", graph.nodeCount(), graph);\n  let cnt = 0;\n  relations.forEach(function(relation) {\n    cnt++;\n    log.debug(\"Setting edge\", relation);\n    graph.setEdge(\n      relation.id1,\n      relation.id2,\n      {\n        relation,\n        width: getLabelWidth(relation.title),\n        height: conf.labelHeight * common_default.getRows(relation.title).length,\n        labelpos: \"c\"\n      },\n      \"id\" + cnt\n    );\n  });\n  dagreLayout(graph);\n  log.debug(\"Graph after layout\", graph.nodes());\n  const svgElem = diagram2.node();\n  graph.nodes().forEach(function(v) {\n    if (v !== void 0 && graph.node(v) !== void 0) {\n      log.warn(\"Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\n        \"transform\",\n        \"translate(\" + (graph.node(v).x - graph.node(v).width / 2) + \",\" + (graph.node(v).y + (transformationLog[v] ? transformationLog[v].y : 0) - graph.node(v).height / 2) + \" )\"\n      );\n      root.select(\"#\" + svgElem.id + \" #\" + v).attr(\"data-x-shift\", graph.node(v).x - graph.node(v).width / 2);\n      const dividers = domDocument.querySelectorAll(\"#\" + svgElem.id + \" #\" + v + \" .divider\");\n      dividers.forEach((divider) => {\n        const parent = divider.parentElement;\n        let pWidth = 0;\n        let pShift = 0;\n        if (parent) {\n          if (parent.parentElement) {\n            pWidth = parent.parentElement.getBBox().width;\n          }\n          pShift = parseInt(parent.getAttribute(\"data-x-shift\"), 10);\n          if (Number.isNaN(pShift)) {\n            pShift = 0;\n          }\n        }\n        divider.setAttribute(\"x1\", 0 - pShift + 8);\n        divider.setAttribute(\"x2\", pWidth - pShift - 8);\n      });\n    } else {\n      log.debug(\"No Node \" + v + \": \" + JSON.stringify(graph.node(v)));\n    }\n  });\n  let stateBox = svgElem.getBBox();\n  graph.edges().forEach(function(e) {\n    if (e !== void 0 && graph.edge(e) !== void 0) {\n      log.debug(\"Edge \" + e.v + \" -> \" + e.w + \": \" + JSON.stringify(graph.edge(e)));\n      drawEdge(diagram2, graph.edge(e), graph.edge(e).relation);\n    }\n  });\n  stateBox = svgElem.getBBox();\n  const stateInfo = {\n    id: parentId ? parentId : \"root\",\n    label: parentId ? parentId : \"root\",\n    width: 0,\n    height: 0\n  };\n  stateInfo.width = stateBox.width + 2 * conf.padding;\n  stateInfo.height = stateBox.height + 2 * conf.padding;\n  log.debug(\"Doc rendered\", stateInfo, graph);\n  return stateInfo;\n}, \"renderDoc\");\nvar stateRenderer_default = {\n  setConf,\n  draw\n};\n\n// src/diagrams/state/stateDiagram.ts\nvar diagram = {\n  parser: stateDiagram_default,\n  get db() {\n    return new StateDB(1);\n  },\n  renderer: stateRenderer_default,\n  styles: styles_default,\n  init: /* @__PURE__ */ __name((cnf) => {\n    if (!cnf.state) {\n      cnf.state = {};\n    }\n    cnf.state.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n  }, \"init\")\n};\nexport {\n  diagram\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}