{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ChatbotFloat',\n  data() {\n    return {\n      showChat: false,\n      userInput: '',\n      messages: [{\n        text: '您好！我是DeepSeek助手，有什么可以帮您的吗？',\n        sender: 'bot'\n      }]\n    };\n  },\n  methods: {\n    toggleChat() {\n      this.showChat = !this.showChat;\n    },\n    sendMessage() {\n      if (!this.userInput.trim()) return;\n\n      // 添加用户消息\n      this.messages.push({\n        text: this.userInput,\n        sender: 'user'\n      });\n      const userMessage = this.userInput;\n      this.userInput = '';\n\n      // 模拟API调用\n      this.getBotResponse(userMessage);\n    },\n    async getBotResponse(userMessage) {\n      try {\n        const response = await fetch('/api/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer sk-b980ba2bac8142cdadbe10a0155f4ec4'\n          },\n          body: JSON.stringify({\n            messages: [{\n              role: 'user',\n              content: userMessage\n            }]\n          })\n        });\n        const data = await response.json();\n        this.messages.push({\n          text: data.reply,\n          sender: 'bot'\n        });\n      } catch (error) {\n        this.messages.push({\n          text: '抱歉，请求API时出错: ' + error.message,\n          sender: 'bot'\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","showChat","userInput","messages","text","sender","methods","toggleChat","sendMessage","trim","push","userMessage","getBotResponse","response","fetch","method","headers","body","JSON","stringify","role","content","json","reply","error","message"],"sources":["C:\\Users\\ASUS\\Desktop\\autochat\\frontend\\src\\views\\ChatbotFloat.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 悬浮按钮 -->\r\n        <div class=\"chatbot-float-button\" @click=\"toggleChat\">\r\n            <i class=\"fas fa-comment-dots\"></i>\r\n        </div>\r\n\r\n        <!-- 聊天对话框 -->\r\n        <div v-if=\"showChat\" class=\"chatbot-dialog\">\r\n            <div class=\"chatbot-header\">\r\n                <span>DeepSeek 助手</span>\r\n                <button @click=\"toggleChat\" class=\"chatbot-close-btn\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n\r\n            <div class=\"chatbot-messages\">\r\n                <div v-for=\"(msg, index) in messages\" :key=\"index\" :class=\"['chatbot-message', msg.sender]\">\r\n                    <div class=\"chatbot-message-content\">{{ msg.text }}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"chatbot-input-area\">\r\n                <input v-model=\"userInput\" @keyup.enter=\"sendMessage\" placeholder=\"输入您的问题...\" class=\"chatbot-input\" />\r\n                <button @click=\"sendMessage\" class=\"chatbot-send-btn\">\r\n                    <i class=\"fas fa-paper-plane\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'ChatbotFloat',\r\n    data() {\r\n        return {\r\n            showChat: false,\r\n            userInput: '',\r\n            messages: [\r\n                { text: '您好！我是DeepSeek助手，有什么可以帮您的吗？', sender: 'bot' }\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        toggleChat() {\r\n            this.showChat = !this.showChat\r\n        },\r\n        sendMessage() {\r\n            if (!this.userInput.trim()) return\r\n\r\n            // 添加用户消息\r\n            this.messages.push({\r\n                text: this.userInput,\r\n                sender: 'user'\r\n            })\r\n\r\n            const userMessage = this.userInput\r\n            this.userInput = ''\r\n\r\n            // 模拟API调用\r\n            this.getBotResponse(userMessage)\r\n        },\r\n        async getBotResponse(userMessage) {\r\n            try {\r\n                const response = await fetch('/api/chat', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer sk-b980ba2bac8142cdadbe10a0155f4ec4'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        messages: [\r\n                            { role: 'user', content: userMessage }\r\n                        ]\r\n                    })\r\n                });\r\n\r\n                const data = await response.json();\r\n                this.messages.push({\r\n                    text: data.reply,\r\n                    sender: 'bot'\r\n                });\r\n\r\n            } catch (error) {\r\n                this.messages.push({\r\n                    text: '抱歉，请求API时出错: ' + error.message,\r\n                    sender: 'bot'\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 悬浮按钮样式 */\r\n.chatbot-float-button {\r\n    position: fixed;\r\n    bottom: 30px;\r\n    right: 30px;\r\n    width: 60px;\r\n    height: 60px;\r\n    background-color: #4f46e5;\r\n    color: white;\r\n    border-radius: 50%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n    z-index: 9999;\r\n    font-size: 24px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.chatbot-float-button:hover {\r\n    background-color: #4338ca;\r\n    transform: scale(1.05);\r\n}\r\n\r\n/* 对话框样式 */\r\n.chatbot-dialog {\r\n    position: fixed;\r\n    bottom: 100px;\r\n    right: 30px;\r\n    width: 350px;\r\n    max-height: 500px;\r\n    background-color: white;\r\n    border-radius: 12px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\r\n    display: flex;\r\n    flex-direction: column;\r\n    z-index: 9998;\r\n    overflow: hidden;\r\n}\r\n\r\n.chatbot-header {\r\n    padding: 15px;\r\n    background-color: #4f46e5;\r\n    color: white;\r\n    font-weight: bold;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n.chatbot-close-btn {\r\n    background: none;\r\n    border: none;\r\n    color: white;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n}\r\n\r\n.chatbot-messages {\r\n    flex: 1;\r\n    padding: 15px;\r\n    overflow-y: auto;\r\n    max-height: 400px;\r\n}\r\n\r\n.chatbot-message {\r\n    margin-bottom: 12px;\r\n    display: flex;\r\n}\r\n\r\n.chatbot-message.user {\r\n    justify-content: flex-end;\r\n}\r\n\r\n.chatbot-message.bot {\r\n    justify-content: flex-start;\r\n}\r\n\r\n.chatbot-message-content {\r\n    max-width: 80%;\r\n    padding: 10px 15px;\r\n    border-radius: 18px;\r\n}\r\n\r\n.chatbot-message.user .chatbot-message-content {\r\n    background-color: #4f46e5;\r\n    color: white;\r\n    border-bottom-right-radius: 4px;\r\n}\r\n\r\n.chatbot-message.bot .chatbot-message-content {\r\n    background-color: #f3f4f6;\r\n    color: #111827;\r\n    border-bottom-left-radius: 4px;\r\n}\r\n\r\n.chatbot-input-area {\r\n    display: flex;\r\n    padding: 12px;\r\n    border-top: 1px solid #e5e7eb;\r\n}\r\n\r\n.chatbot-input {\r\n    flex: 1;\r\n    padding: 10px 15px;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 20px;\r\n    outline: none;\r\n    margin-right: 10px;\r\n}\r\n\r\n.chatbot-input:focus {\r\n    border-color: #4f46e5;\r\n}\r\n\r\n.chatbot-send-btn {\r\n    width: 40px;\r\n    height: 40px;\r\n    background-color: #4f46e5;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.chatbot-send-btn:hover {\r\n    background-color: #4338ca;\r\n}\r\n</style>"],"mappings":";AAiCA,eAAe;EACXA,IAAI,EAAE,cAAc;EACpBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,QAAQ,EAAE,KAAK;MACfC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,CACN;QAAEC,IAAI,EAAE,4BAA4B;QAAEC,MAAM,EAAE;MAAM;IAE5D;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,UAAUA,CAAA,EAAG;MACT,IAAI,CAACN,QAAO,GAAI,CAAC,IAAI,CAACA,QAAO;IACjC,CAAC;IACDO,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACN,SAAS,CAACO,IAAI,CAAC,CAAC,EAAE;;MAE5B;MACA,IAAI,CAACN,QAAQ,CAACO,IAAI,CAAC;QACfN,IAAI,EAAE,IAAI,CAACF,SAAS;QACpBG,MAAM,EAAE;MACZ,CAAC;MAED,MAAMM,WAAU,GAAI,IAAI,CAACT,SAAQ;MACjC,IAAI,CAACA,SAAQ,GAAI,EAAC;;MAElB;MACA,IAAI,CAACU,cAAc,CAACD,WAAW;IACnC,CAAC;IACD,MAAMC,cAAcA,CAACD,WAAW,EAAE;MAC9B,IAAI;QACA,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,WAAW,EAAE;UACtCC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE;UACrB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBhB,QAAQ,EAAE,CACN;cAAEiB,IAAI,EAAE,MAAM;cAAEC,OAAO,EAAEV;YAAY;UAE7C,CAAC;QACL,CAAC,CAAC;QAEF,MAAMX,IAAG,GAAI,MAAMa,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,IAAI,CAACnB,QAAQ,CAACO,IAAI,CAAC;UACfN,IAAI,EAAEJ,IAAI,CAACuB,KAAK;UAChBlB,MAAM,EAAE;QACZ,CAAC,CAAC;MAEN,EAAE,OAAOmB,KAAK,EAAE;QACZ,IAAI,CAACrB,QAAQ,CAACO,IAAI,CAAC;UACfN,IAAI,EAAE,eAAc,GAAIoB,KAAK,CAACC,OAAO;UACrCpB,MAAM,EAAE;QACZ,CAAC,CAAC;MACN;IACJ;EAEJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}